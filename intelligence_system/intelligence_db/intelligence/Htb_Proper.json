{
  "writeup_id": "Htb_Proper",
  "scenario_fingerprint": {
    "scenario_name": "windows_web_app_sql_injection_with_hash_bypass",
    "primary_services": [
      "http",
      "smb"
    ],
    "port_signature": "80+445",
    "service_combination": "iis+php+smb",
    "os_family": "windows_server",
    "environment_type": "web_application",
    "entry_vector": "sql_injection_hash_bypass",
    "privilege_path": "web_to_system_via_file_race_condition",
    "attack_complexity": "hard",
    "estimated_time": "3-4 hours",
    "scenario_confidence": 0.92,
    "distinguishing_factors": [
      "hashed_parameter_validation",
      "salt_disclosure_via_error",
      "toctou_file_include_vulnerability",
      "go_binary_cleanup_service"
    ],
    "environmental_clues": [
      "iis_10_with_php",
      "ajax_requests_with_hash_validation",
      "smb_file_include_capability",
      "windows_error_reporting_system"
    ],
    "similar_scenarios": [
      "forest_htb_hard",
      "blackfield_htb_hard"
    ],
    "unique_aspects": [
      "parameter_hash_validation_bypass",
      "time_of_check_time_of_use_file_race",
      "go_binary_privilege_escalation",
      "wer_system_abuse"
    ]
  },
  "success_patterns": {
    "success_factors": [
      {
        "technique": "SQL_injection_with_hash_bypass",
        "success_reason": "Application used predictable MD5 hash with leaked salt for parameter validation",
        "prerequisite_indicators": [
          "ajax_endpoints_present",
          "hash_parameter_in_url",
          "error_messages_enabled",
          "php_application_detected"
        ],
        "recognition_patterns": [
          "GET parameter with hash (h=md5hash)",
          "403 forbidden on parameter tampering",
          "500 errors leak source code",
          "salt value exposed in error messages"
        ],
        "failure_modes": [
          "no_error_message_disclosure",
          "strong_hash_algorithm_used",
          "salt_not_discoverable",
          "proper_input_validation"
        ],
        "environmental_factors": [
          "php_debug_mode_enabled",
          "verbose_error_reporting",
          "weak_hash_implementation",
          "predictable_salt_usage"
        ],
        "success_probability": 0.75,
        "typical_timeframe": "30-60 minutes"
      },
      {
        "technique": "Time_of_check_time_of_use_RFI",
        "success_reason": "Application read included files twice with race condition window",
        "prerequisite_indicators": [
          "file_include_functionality",
          "smb_accessible_from_target",
          "file_validation_present",
          "timing_window_exists"
        ],
        "recognition_patterns": [
          "file include parameters in requests",
          "multiple file reads in application logic",
          "SMB connectivity available",
          "file validation bypass possible"
        ],
        "failure_modes": [
          "single_file_read_only",
          "smb_blocked_outbound",
          "strict_file_validation",
          "no_timing_window"
        ],
        "environmental_factors": [
          "windows_smb_default_config",
          "application_file_caching_disabled",
          "network_connectivity_unrestricted"
        ],
        "success_probability": 0.65,
        "typical_timeframe": "45-90 minutes"
      },
      {
        "technique": "Arbitrary_file_write_via_cleanup_binary",
        "success_reason": "Go cleanup binary had path traversal vulnerability allowing SYSTEM file writes",
        "prerequisite_indicators": [
          "custom_cleanup_processes",
          "go_binaries_present",
          "downloads_folder_monitoring",
          "system_service_privileges"
        ],
        "recognition_patterns": [
          "automated cleanup processes",
          "file monitoring services",
          "path traversal in cleanup logic",
          "SYSTEM level service execution"
        ],
        "failure_modes": [
          "proper_path_validation",
          "restricted_service_permissions",
          "no_cleanup_automation",
          "sandboxed_execution"
        ],
        "environmental_factors": [
          "windows_error_reporting_enabled",
          "system_service_misconfiguration",
          "insufficient_input_validation"
        ],
        "success_probability": 0.8,
        "typical_timeframe": "60-120 minutes"
      }
    ],
    "critical_discoveries": [
      {
        "discovery": "SECURE_PARAM_SALT leaked in error message",
        "discovery_method": "Missing parameter causing PHP error disclosure",
        "why_critical": "Enabled hash calculation for SQL injection bypass",
        "how_to_recognize": [
          "500 errors with source code",
          "PHP debug information exposed",
          "salt/key values in error output"
        ],
        "follow_up_actions": [
          "calculate_hash_for_sql_payloads",
          "test_sql_injection_vectors",
          "enumerate_database_structure"
        ]
      },
      {
        "discovery": "SMB accessible for RFI exploitation",
        "discovery_method": "Testing outbound SMB connectivity from target",
        "why_critical": "Enabled remote file inclusion via TOCTOU race condition",
        "how_to_recognize": [
          "file include parameters present",
          "SMB ports accessible outbound",
          "Windows target environment"
        ],
        "follow_up_actions": [
          "setup_smb_server_with_payloads",
          "test_file_inclusion_timing",
          "prepare_race_condition_exploit"
        ]
      },
      {
        "discovery": "Go cleanup binary with path traversal",
        "discovery_method": "Process monitoring and binary analysis",
        "why_critical": "Provided arbitrary file write as SYSTEM user",
        "how_to_recognize": [
          "automated cleanup processes",
          "custom Go binaries running as SYSTEM",
          "file monitoring in user directories"
        ],
        "follow_up_actions": [
          "test_path_traversal_vectors",
          "identify_writable_system_locations",
          "prepare_privilege_escalation_payload"
        ]
      }
    ],
    "escalation_keys": [
      {
        "privilege_level": "anonymous_web",
        "escalation_method": "SQL_injection_to_credentials",
        "why_possible": "Hash bypass enabled SQL injection in order parameter",
        "recognition_signs": [
          "hash_validation_bypassable",
          "sql_injection_in_order_clause",
          "database_credentials_stored"
        ],
        "exploitation_path": "Hash calculation → SQL injection → Credential extraction → Authentication bypass"
      },
      {
        "privilege_level": "web_application",
        "escalation_method": "TOCTOU_RFI_to_code_execution",
        "why_possible": "Race condition in file validation allowed malicious file inclusion",
        "recognition_signs": [
          "file_include_functionality",
          "double_file_read_pattern",
          "smb_connectivity_available"
        ],
        "exploitation_path": "File inclusion → SMB RFI → Race condition → Code execution"
      },
      {
        "privilege_level": "user_account",
        "escalation_method": "Cleanup_binary_to_SYSTEM",
        "why_possible": "Path traversal in SYSTEM service allowed arbitrary file writes",
        "recognition_signs": [
          "cleanup_service_running_as_system",
          "path_traversal_vulnerability",
          "windows_error_reporting_abuse"
        ],
        "exploitation_path": "Path traversal → Arbitrary file write → WER exploitation → SYSTEM shell"
      }
    ]
  },
  "decision_tree": {
    "decision_points": [
      {
        "step": 1,
        "situation": "Only HTTP port 80 open on Windows IIS 10.0 server",
        "decision": "Focus on web application enumeration and vulnerability discovery",
        "reasoning": "Limited attack surface requires deep web app analysis",
        "confidence": 0.9,
        "alternatives": [
          {
            "option": "port_scan_udp",
            "when": "if initial web enum fails"
          },
          {
            "option": "subdomain_enumeration",
            "when": "if vhost routing suspected"
          }
        ],
        "success_indicators": [
          "additional_endpoints_found",
          "technology_stack_identified",
          "input_parameters_discovered"
        ],
        "next_decision": "analyze_web_application_structure"
      },
      {
        "step": 2,
        "situation": "Found AJAX endpoint with hashed parameters and SQL injection potential",
        "decision": "Reverse engineer hash algorithm before attempting SQL injection",
        "reasoning": "Parameter tampering protection must be bypassed first",
        "confidence": 0.95,
        "prerequisites": [
          "ajax_endpoint_identified",
          "hash_parameter_present"
        ],
        "success_indicators": [
          "salt_leaked_from_error",
          "hash_algorithm_identified"
        ],
        "failure_fallbacks": [
          "directory_traversal",
          "file_inclusion_tests",
          "other_endpoints"
        ]
      },
      {
        "step": 3,
        "situation": "Hash algorithm reversed (salt + parameter + MD5)",
        "decision": "Implement custom SQL injection with hash recalculation",
        "reasoning": "Standard tools won't work without hash bypass mechanism",
        "confidence": 0.85,
        "prerequisites": [
          "hash_method_known",
          "salt_extracted"
        ],
        "success_indicators": [
          "sql_error_messages",
          "data_extraction_successful"
        ],
        "failure_fallbacks": [
          "manual_injection_techniques",
          "time_based_blind_injection"
        ]
      }
    ],
    "branching_logic": {
      "if_hash_bypass_succeeds": {
        "action": "exploit_sql_injection_with_custom_tooling",
        "tools": [
          "sqlmap_with_eval",
          "custom_hash_script"
        ],
        "next_phase": "data_extraction_and_credential_discovery"
      },
      "if_sql_injection_succeeds": {
        "action": "enumerate_database_for_credentials",
        "purpose": "find_authentication_bypass_or_credentials",
        "tools": [
          "custom_injection_script",
          "sqlmap"
        ]
      },
      "if_credentials_found": {
        "action": "test_credential_reuse_across_services",
        "alternatives": [
          "smb_access",
          "rdp_access",
          "web_admin_panels"
        ],
        "decision_criteria": "based_on_service_discovery"
      }
    },
    "optimization_rules": [
      {
        "rule": "always_check_error_messages_for_source_disclosure",
        "reasoning": "development_environments_often_leak_sensitive_info",
        "applicability": "web_applications_with_verbose_errors"
      },
      {
        "rule": "reverse_engineer_custom_authentication_before_bruteforce",
        "reasoning": "custom_protection_mechanisms_require_understanding_first",
        "applicability": "applications_with_parameter_hashing_or_signing"
      },
      {
        "rule": "use_sqlmap_eval_for_complex_parameter_manipulation",
        "reasoning": "allows_custom_preprocessing_of_injection_payloads",
        "applicability": "sql_injection_with_parameter_encoding_or_hashing"
      }
    ]
  },
  "applicability_rules": {
    "technique_rules": [
      {
        "technique": "SQL Injection with Hash Bypass",
        "mitre_id": "T1190",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          8080,
          8443
        ],
        "os_requirements": [
          "windows",
          "linux"
        ],
        "environmental_prerequisites": [
          "web_application_present",
          "php_backend_detected",
          "parameter_hashing_mechanism",
          "error_disclosure_enabled"
        ],
        "success_indicators": [
          "hash_salt_leaked_in_error",
          "parameter_tampering_detection_bypassed",
          "sql_injection_successful"
        ],
        "incompatible_with": [
          "error_reporting_disabled",
          "proper_input_validation",
          "secure_hash_implementation"
        ],
        "confidence_boosters": [
          "php_error_messages_visible",
          "ajax_endpoints_present",
          "predictable_parameter_names"
        ],
        "typical_success_rate": 0.75,
        "estimated_time": "15-30 minutes"
      },
      {
        "technique": "Time-of-Check Time-of-Use (TOCTOU) File Include",
        "mitre_id": "T1210",
        "required_services": [
          "smb",
          "http"
        ],
        "required_ports": [
          445,
          80,
          443
        ],
        "os_requirements": [
          "windows"
        ],
        "environmental_prerequisites": [
          "smb_accessible_from_target",
          "file_include_vulnerability",
          "race_condition_exploitable",
          "remote_file_include_possible"
        ],
        "success_indicators": [
          "smb_connection_established",
          "file_swap_timing_successful",
          "code_execution_achieved"
        ],
        "incompatible_with": [
          "smb_blocked",
          "file_include_disabled",
          "strict_file_validation"
        ],
        "confidence_boosters": [
          "windows_target_confirmed",
          "smb_ports_open",
          "file_include_functions_present"
        ],
        "typical_success_rate": 0.65,
        "estimated_time": "30-60 minutes"
      },
      {
        "technique": "Privilege Escalation via File Cleanup Service",
        "mitre_id": "T1068",
        "required_services": [
          "custom_service"
        ],
        "required_ports": [],
        "os_requirements": [
          "windows"
        ],
        "environmental_prerequisites": [
          "custom_cleanup_binary_present",
          "arbitrary_write_capability",
          "windows_error_reporting_enabled",
          "downloads_folder_monitored"
        ],
        "success_indicators": [
          "cleanup_service_identified",
          "arbitrary_write_achieved",
          "system_privileges_obtained"
        ],
        "incompatible_with": [
          "proper_file_permissions",
          "service_hardening",
          "wer_disabled"
        ],
        "confidence_boosters": [
          "go_binary_present",
          "scheduled_cleanup_tasks",
          "writable_system_directories"
        ],
        "typical_success_rate": 0.8,
        "estimated_time": "20-45 minutes"
      }
    ],
    "environmental_detectors": {
      "web_application": {
        "port_indicators": [
          80,
          443,
          8080,
          8443
        ],
        "service_indicators": [
          "http",
          "https",
          "iis"
        ],
        "banner_indicators": [
          "Microsoft-IIS",
          "PHP",
          "X-Powered-By"
        ],
        "confidence_threshold": 0.9
      },
      "windows_smb": {
        "port_indicators": [
          445,
          139
        ],
        "service_indicators": [
          "smb",
          "netbios-ssn"
        ],
        "banner_indicators": [
          "Windows",
          "Samba"
        ],
        "confidence_threshold": 0.85
      },
      "php_application": {
        "port_indicators": [
          80,
          443
        ],
        "service_indicators": [
          "http",
          "https"
        ],
        "technology_indicators": [
          "PHP",
          "X-Powered-By: PHP"
        ],
        "confidence_threshold": 0.95
      }
    },
    "attack_prioritization": {
      "high_priority": [
        {
          "attack": "web_application_enumeration",
          "when": "http_service_detected",
          "reason": "primary_attack_surface_single_port_open"
        },
        {
          "attack": "parameter_tampering_with_hash_bypass",
          "when": "hashed_parameters_detected",
          "reason": "often_leads_to_sql_injection"
        },
        {
          "attack": "error_message_information_disclosure",
          "when": "php_application_detected",
          "reason": "frequently_reveals_sensitive_information"
        }
      ],
      "medium_priority": [
        {
          "attack": "directory_bruteforce",
          "when": "web_service_detected",
          "reason": "reliable_but_time_consuming"
        },
        {
          "attack": "smb_enumeration",
          "when": "windows_target_confirmed",
          "reason": "useful_for_file_include_attacks"
        }
      ],
      "low_priority": [
        {
          "attack": "service_enumeration",
          "when": "limited_ports_open",
          "reason": "few_additional_attack_vectors"
        }
      ]
    }
  },
  "technique_intelligence": {
    "techniques": [
      {
        "name": "SQL Injection via Hash Bypass",
        "mitre_id": "T1190",
        "category": "initial_access",
        "phase": "exploitation",
        "tools_used": [
          {
            "name": "curl",
            "command_template": "curl -I 'http://{target}/products-ajax.php?order={payload}&h={hash}'",
            "actual_command": "curl -I 'http://10.10.10.231/products-ajax.php?order=id+asc&h=181345bd7fce37aad011ea65a41b60c8'",
            "output_pattern": "HTTP/1.1 200 OK",
            "effectiveness_rating": 4,
            "reliability": 0.9
          },
          {
            "name": "md5sum",
            "command_template": "echo -n '{salt}{payload}' | md5sum",
            "actual_command": "echo -n 'hie0shah6ooNoimid asc' | md5sum",
            "success_factors": [
              "correct_salt_identified",
              "proper_concatenation_order"
            ],
            "effectiveness_rating": 5
          }
        ],
        "prerequisites": [
          "web_application_accessible",
          "error_disclosure_available",
          "hash_verification_mechanism_present"
        ],
        "success_indicators": [
          "salt_value_leaked_in_error",
          "hash_algorithm_identified",
          "parameter_tampering_successful",
          "sql_injection_confirmed"
        ],
        "common_failures": [
          "incorrect_salt_concatenation_order",
          "wrong_hash_algorithm_assumption",
          "insufficient_error_disclosure"
        ],
        "follow_up_techniques": [
          "blind_sql_injection",
          "database_enumeration",
          "credential_extraction"
        ],
        "time_investment": "30-60 minutes",
        "skill_level": "intermediate"
      },
      {
        "name": "Order By SQL Injection",
        "mitre_id": "T1190",
        "category": "initial_access",
        "phase": "exploitation",
        "tools_used": [
          {
            "name": "bash_script",
            "command_template": "order=$1; h=$(echo -n '{salt}${order}' | md5sum | cut -d' ' -f1); curl -s -i -G '{target}' --data-urlencode 'order=${order}' --data-urlencode 'h=${h}'",
            "actual_command": "./test_products.sh \"(CASE WHEN (1=1) THEN id ELSE price END)\"",
            "output_pattern": "Different product ordering based on condition",
            "effectiveness_rating": 3,
            "reliability": 0.85
          }
        ],
        "prerequisites": [
          "order_by_injection_point_identified",
          "hash_bypass_mechanism_working",
          "secondary_column_name_known"
        ],
        "success_indicators": [
          "conditional_ordering_changes_observed",
          "case_statement_execution_confirmed",
          "boolean_based_blind_injection_working"
        ],
        "common_failures": [
          "unknown_secondary_column_names",
          "complex_query_structure_limitations",
          "insufficient_observable_differences"
        ],
        "follow_up_techniques": [
          "database_name_enumeration",
          "table_structure_discovery",
          "credential_extraction"
        ],
        "time_investment": "45-90 minutes",
        "skill_level": "advanced"
      }
    ],
    "tool_effectiveness": [
      {
        "tool": "curl",
        "use_case": "web_parameter_testing_with_hash_verification",
        "effectiveness_rating": 4,
        "reliability": 0.95,
        "learning_curve": "low",
        "essential_for": [
          "web_application_testing"
        ],
        "alternatives": [
          "burp_suite",
          "custom_python_scripts"
        ],
        "best_practices": [
          "use_head_requests_for_initial_testing",
          "implement_proper_url_encoding",
          "proxy_through_burp_for_analysis"
        ]
      },
      {
        "tool": "bash_scripting",
        "use_case": "automated_hash_calculation_and_testing",
        "effectiveness_rating": 5,
        "reliability": 0.98,
        "learning_curve": "medium",
        "essential_for": [
          "parameter_tampering_with_integrity_checks"
        ],
        "alternatives": [
          "python_scripts",
          "burp_extensions"
        ],
        "best_practices": [
          "automate_hash_calculation",
          "implement_response_filtering",
          "use_proper_error_handling"
        ]
      }
    ],
    "command_sequences": [
      {
        "sequence_name": "hash_bypass_discovery",
        "steps": [
          {
            "step": 1,
            "command": "curl 'http://10.10.10.231/products-ajax.php?order=id+desc'",
            "purpose": "Trigger error disclosure to leak salt",
            "expected_output": "Error message containing SECURE_PARAM_SALT value"
          },
          {
            "step": 2,
            "command": "echo -n 'hie0shah6ooNoimid desc' | md5sum",
            "purpose": "Calculate correct hash with discovered salt",
            "expected_output": "a1b30d31d344a5a4e41e8496ccbdd26b"
          },
          {
            "step": 3,
            "command": "curl -I 'http://10.10.10.231/products-ajax.php?order=id+asc&h=181345bd7fce37aad011ea65a41b60c8'",
            "purpose": "Verify hash bypass works with modified parameter",
            "expected_output": "HTTP/1.1 200 OK"
          }
        ],
        "success_rate": 0.75,
        "typical_duration": "15-30 minutes"
      },
      {
        "sequence_name": "order_by_sql_injection",
        "steps": [
          {
            "step": 1,
            "command": "./test_products.sh \"id asc'\"",
            "purpose": "Confirm SQL injection vulnerability",
            "expected_output": "HTTP/1.1 500 Internal Server Error"
          },
          {
            "step": 2,
            "command": "./test_order.sh \"(CASE WHEN (1=1) THEN id ELSE price END)\"",
            "purpose": "Test boolean-based blind injection",
            "expected_output": "Products ordered by id column"
          },
          {
            "step": 3,
            "command": "./test_order.sh \"(CASE WHEN (SELECT SUBSTRING(database(),1,1))='c' THEN id ELSE price END)\"",
            "purpose": "Extract database information character by character",
            "expected_output": "Different product ordering indicating true condition"
          }
        ],
        "success_rate": 0.8,
        "typical_duration": "30-60 minutes"
      }
    ]
  },
  "metadata": {
    "basic_metadata": {
      "name": "Proper",
      "difficulty": "Hard",
      "os": "Windows Server 2016/2019",
      "platform": "HackTheBox",
      "release_date": "2021-03-13",
      "author": "xct & jkr",
      "estimated_time": "4-6 hours"
    },
    "intelligence_metadata": {
      "attack_complexity": "high",
      "skill_level_required": "advanced",
      "primary_attack_vectors": [
        "sql_injection",
        "file_inclusion",
        "race_condition"
      ],
      "key_vulnerabilities": [
        "hash_parameter_sqli",
        "toctou_rfi",
        "arbitrary_file_write"
      ],
      "environment_type": "web_application_server",
      "real_world_relevance": "high",
      "learning_value": [
        "advanced_sqli_techniques",
        "race_condition_exploitation",
        "windows_privilege_escalation"
      ],
      "prerequisite_knowledge": [
        "sql_injection",
        "file_inclusion",
        "race_conditions",
        "windows_internals"
      ]
    },
    "categorization": {
      "primary_category": "web_exploitation",
      "subcategories": [
        "sql_injection",
        "file_inclusion",
        "race_conditions",
        "privilege_escalation"
      ],
      "attack_types": [
        "initial_access",
        "privilege_escalation",
        "persistence"
      ],
      "defensive_lessons": [
        "input_validation",
        "file_access_controls",
        "atomic_operations",
        "least_privilege"
      ]
    },
    "similarity_markers": {
      "similar_boxes": [
        "Bankrobber",
        "Json",
        "Arkham"
      ],
      "similarity_reasons": [
        "complex_web_exploitation",
        "multi_stage_attacks",
        "custom_applications"
      ],
      "unique_aspects": [
        "hash_parameter_manipulation",
        "toctou_file_inclusion",
        "go_binary_abuse"
      ],
      "difficulty_factors": [
        "complex_attack_chain",
        "timing_sensitive_exploits",
        "custom_scripting_required"
      ]
    }
  },
  "extraction_metadata": {
    "parse_date": "2025-07-04T13:22:07.509115",
    "original_file": "0xdf_writeups/Htb Proper.md",
    "content_length": 64879,
    "extraction_version": "2.0-claude",
    "model_used": "claude-sonnet-4-20250514"
  },
  "intelligence_confidence": 1.0,
  "quality_breakdown": {
    "scenario_uniqueness": 1.0,
    "success_logic_clarity": 1.0,
    "applicability_completeness": 1.0,
    "decision_tree_depth": 1.0,
    "technique_actionability": 1.0
  }
}