{
  "writeup_id": "Htb_Secret",
  "scenario_fingerprint": {
    "scenario_name": "nodejs_jwt_source_code_analysis",
    "primary_services": [
      "http",
      "nodejs",
      "ssh"
    ],
    "port_signature": "22+80+3000",
    "service_combination": "ssh+nginx+nodejs",
    "os_family": "linux",
    "environment_type": "web_application",
    "entry_vector": "jwt_secret_disclosure",
    "privilege_path": "source_code_to_command_injection_to_suid",
    "attack_complexity": "easy",
    "estimated_time": "60-90 minutes",
    "scenario_confidence": 0.92,
    "distinguishing_factors": [
      "git_repository_source_code",
      "jwt_authentication_bypass",
      "downloadable_source_files",
      "command_injection_in_admin_functions"
    ],
    "environmental_clues": [
      "express_middleware_headers",
      "api_documentation_site",
      "jwt_token_authentication",
      "source_code_download_available"
    ],
    "similar_scenarios": [
      "node_blog_htb",
      "json_htb_medium"
    ],
    "unique_aspects": [
      "dumb_docs_application",
      "git_history_analysis_required",
      "suid_file_descriptor_abuse",
      "crashdump_privilege_escalation"
    ]
  },
  "success_patterns": {
    "success_factors": [
      {
        "technique": "JWT_Secret_Discovery",
        "success_reason": "JWT signing secret exposed in source code repository",
        "prerequisite_indicators": [
          "source_code_available",
          "jwt_authentication_in_use",
          "hardcoded_secrets_present"
        ],
        "recognition_patterns": [
          "downloadable source code links",
          "JWT tokens in API responses",
          "hardcoded secrets in config files",
          "dotenv files with secrets"
        ],
        "failure_modes": [
          "secrets_properly_externalized",
          "source_code_not_accessible",
          "environment_variables_used_correctly"
        ],
        "environmental_factors": [
          "development_code_in_production",
          "poor_secret_management",
          "exposed_git_repositories"
        ],
        "success_probability": 0.92,
        "typical_timeframe": "10-30 minutes"
      },
      {
        "technique": "JWT_Token_Forgery",
        "success_reason": "Known signing secret allows crafting admin tokens",
        "prerequisite_indicators": [
          "jwt_signing_secret_known",
          "admin_functionality_exists",
          "token_validation_relies_on_secret"
        ],
        "recognition_patterns": [
          "JWT structure analysis reveals user roles",
          "admin endpoints require authentication",
          "token contains user identification"
        ],
        "failure_modes": [
          "asymmetric_key_signing",
          "additional_authorization_checks",
          "token_binding_mechanisms"
        ],
        "environmental_factors": [
          "symmetric_key_jwt_implementation",
          "role_based_access_control",
          "insufficient_authorization_layers"
        ],
        "success_probability": 0.95,
        "typical_timeframe": "5-15 minutes"
      },
      {
        "technique": "Command_Injection_via_Admin_API",
        "success_reason": "Admin API endpoint vulnerable to command injection",
        "prerequisite_indicators": [
          "admin_access_obtained",
          "api_endpoints_accept_user_input",
          "insufficient_input_validation"
        ],
        "recognition_patterns": [
          "admin-only API endpoints",
          "parameters passed to system commands",
          "lack of input sanitization"
        ],
        "failure_modes": [
          "proper_input_validation",
          "command_parameterization",
          "restricted_execution_context"
        ],
        "environmental_factors": [
          "nodejs_application",
          "system_command_execution",
          "development_debug_features"
        ],
        "success_probability": 0.88,
        "typical_timeframe": "15-30 minutes"
      }
    ],
    "critical_discoveries": [
      {
        "discovery": "Source code download functionality",
        "discovery_method": "Website enumeration and documentation review",
        "why_critical": "Exposed JWT signing secrets and application logic",
        "how_to_recognize": [
          "download links on documentation pages",
          "source.zip or files.zip endpoints",
          "developer documentation mentioning source"
        ],
        "follow_up_actions": [
          "download_and_analyze_source",
          "search_for_hardcoded_secrets",
          "identify_authentication_mechanisms"
        ]
      },
      {
        "discovery": "JWT signing secret in source code",
        "discovery_method": "Static source code analysis",
        "why_critical": "Enables forging admin tokens for privilege escalation",
        "how_to_recognize": [
          "hardcoded JWT secrets in config files",
          "process.env references to secret keys",
          "authentication middleware implementations"
        ],
        "follow_up_actions": [
          "craft_admin_jwt_token",
          "test_admin_api_endpoints",
          "enumerate_privileged_functionality"
        ]
      }
    ],
    "escalation_keys": [
      {
        "privilege_level": "anonymous_user",
        "escalation_method": "JWT_Secret_Exploitation",
        "why_possible": "JWT signing secret exposed in downloadable source code",
        "recognition_signs": [
          "source_code_download_available",
          "jwt_authentication_system",
          "hardcoded_secrets_in_config"
        ],
        "exploitation_path": "Download Source → Extract JWT Secret → Forge Admin Token → Admin API Access"
      },
      {
        "privilege_level": "admin_user",
        "escalation_method": "Command_Injection_to_Shell",
        "why_possible": "Admin API endpoints lack proper input validation",
        "recognition_signs": [
          "admin_api_endpoints_available",
          "user_input_in_system_commands",
          "insufficient_input_sanitization"
        ],
        "exploitation_path": "Admin Token → Admin API → Command Injection → Reverse Shell"
      }
    ]
  },
  "decision_tree": {
    "decision_points": [
      {
        "step": 1,
        "situation": "Found ports 22,80,3000 open on Linux host with Node.js/Express",
        "decision": "Analyze source code first when available for download",
        "reasoning": "Source code analysis provides direct insight into vulnerabilities and secrets",
        "confidence": 0.95,
        "alternatives": [
          {
            "option": "api_enumeration",
            "when": "if source not available"
          },
          {
            "option": "directory_bruteforce",
            "when": "if no obvious entry points"
          }
        ],
        "success_indicators": [
          "source_code_downloaded",
          "git_repository_present",
          "jwt_implementation_found"
        ],
        "next_decision": "analyze_authentication_mechanism"
      },
      {
        "step": 2,
        "situation": "JWT authentication with .env file showing TOKEN_SECRET = secret",
        "decision": "Check git history for actual secret values",
        "reasoning": "Environment files often contain placeholder values, real secrets may be in git history",
        "confidence": 0.9,
        "prerequisites": [
          "git_repository_present",
          "jwt_auth_identified"
        ],
        "success_indicators": [
          "git_commits_found",
          "secret_values_in_history"
        ],
        "failure_fallbacks": [
          "try_default_secrets",
          "brute_force_jwt_secret",
          "find_other_vulnerabilities"
        ]
      },
      {
        "step": 3,
        "situation": "Valid JWT secret obtained from git history",
        "decision": "Forge admin JWT token to access privileged functions",
        "reasoning": "JWT signing secret allows creation of tokens for any user including admin",
        "confidence": 0.95,
        "prerequisites": [
          "jwt_secret_known",
          "admin_functions_identified"
        ],
        "success_indicators": [
          "admin_token_accepted",
          "privileged_api_access"
        ],
        "failure_fallbacks": [
          "enumerate_valid_usernames",
          "check_authorization_bypass"
        ]
      },
      {
        "step": 4,
        "situation": "Admin access obtained, looking for command injection in admin functions",
        "decision": "Test admin API endpoints for command injection vulnerabilities",
        "reasoning": "Admin functions often have system interaction capabilities vulnerable to injection",
        "confidence": 0.8,
        "prerequisites": [
          "admin_jwt_token",
          "admin_endpoints_identified"
        ],
        "success_indicators": [
          "command_execution_confirmed",
          "reverse_shell_obtained"
        ],
        "failure_fallbacks": [
          "file_upload_vulnerabilities",
          "sql_injection",
          "other_admin_functions"
        ]
      }
    ],
    "branching_logic": {
      "if_source_code_available": {
        "action": "download_and_analyze_source",
        "tools": [
          "git",
          "code_analysis"
        ],
        "next_phase": "identify_authentication_mechanism"
      },
      "if_git_history_present": {
        "action": "examine_commit_history",
        "tools": [
          "git log",
          "git show"
        ],
        "purpose": "find_secrets_in_previous_commits"
      },
      "if_jwt_secret_found": {
        "action": "forge_admin_token",
        "tools": [
          "jwt_tool",
          "custom_scripts"
        ],
        "next_phase": "enumerate_admin_functions"
      },
      "if_admin_access_obtained": {
        "action": "test_for_command_injection",
        "tools": [
          "burp",
          "curl",
          "custom_payloads"
        ],
        "next_phase": "privilege_escalation"
      }
    },
    "optimization_rules": [
      {
        "rule": "always_check_git_history_when_repository_present",
        "reasoning": "developers_often_commit_secrets_then_remove_them",
        "applicability": "any_git_repository_found"
      },
      {
        "rule": "prioritize_source_code_analysis_over_black_box_testing",
        "reasoning": "white_box_testing_more_efficient_and_thorough",
        "applicability": "source_code_available"
      },
      {
        "rule": "test_admin_functions_for_system_interaction_vulnerabilities",
        "reasoning": "admin_functions_often_have_elevated_system_access",
        "applicability": "admin_access_obtained"
      },
      {
        "rule": "examine_environment_files_and_configuration",
        "reasoning": "often_contain_secrets_or_reveal_attack_vectors",
        "applicability": "source_code_analysis_phase"
      }
    ]
  },
  "applicability_rules": {
    "technique_rules": [
      {
        "technique": "Source Code Analysis",
        "mitre_id": "T1213.001",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          8080,
          3000,
          8443
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "source_code_available",
          "git_repository_exposed",
          "downloadable_source_files"
        ],
        "success_indicators": [
          "zip_file_download_available",
          "git_directory_accessible",
          "source_code_in_response"
        ],
        "incompatible_with": [
          "source_code_obfuscated",
          "compiled_only_binaries",
          "no_file_access"
        ],
        "confidence_boosters": [
          "development_environment",
          "documentation_mentions_source",
          "version_control_exposed"
        ],
        "typical_success_rate": 0.92,
        "estimated_time": "10-30 minutes"
      },
      {
        "technique": "JWT Token Manipulation",
        "mitre_id": "T1550.001",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          8080,
          3000,
          8443
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "jwt_authentication_used",
          "signing_secret_discoverable",
          "user_registration_available"
        ],
        "success_indicators": [
          "jwt_tokens_in_responses",
          "authentication_endpoints_present",
          "admin_functionality_exists"
        ],
        "incompatible_with": [
          "strong_jwt_secrets",
          "proper_key_management",
          "token_validation_strict"
        ],
        "confidence_boosters": [
          "hardcoded_secrets_in_source",
          "weak_jwt_implementation",
          "admin_user_enumerable"
        ],
        "typical_success_rate": 0.78,
        "estimated_time": "15-45 minutes"
      },
      {
        "technique": "Command Injection",
        "mitre_id": "T1059.004",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          8080,
          3000,
          8443
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "user_input_processed_by_system",
          "insufficient_input_validation",
          "admin_access_obtained"
        ],
        "success_indicators": [
          "system_commands_in_source",
          "user_controlled_parameters",
          "admin_functions_available"
        ],
        "incompatible_with": [
          "strict_input_validation",
          "sandboxed_execution",
          "command_filtering_active"
        ],
        "confidence_boosters": [
          "nodejs_express_framework",
          "file_system_operations",
          "shell_command_usage"
        ],
        "typical_success_rate": 0.85,
        "estimated_time": "10-25 minutes"
      },
      {
        "technique": "SUID Binary Exploitation",
        "mitre_id": "T1548.001",
        "required_services": [],
        "required_ports": [],
        "os_requirements": [
          "linux"
        ],
        "environmental_prerequisites": [
          "suid_binaries_present",
          "shell_access_obtained",
          "file_system_access"
        ],
        "success_indicators": [
          "suid_files_enumerated",
          "vulnerable_binary_identified",
          "file_descriptor_access"
        ],
        "incompatible_with": [
          "no_suid_binaries",
          "proper_suid_implementation",
          "restricted_file_access"
        ],
        "confidence_boosters": [
          "custom_suid_binaries",
          "crash_dump_generation",
          "open_file_descriptors"
        ],
        "typical_success_rate": 0.73,
        "estimated_time": "20-60 minutes"
      }
    ],
    "environmental_detectors": {
      "nodejs_application": {
        "port_indicators": [
          3000,
          8080,
          8443
        ],
        "service_indicators": [
          "http",
          "nodejs",
          "express"
        ],
        "banner_indicators": [
          "Node.js",
          "Express middleware"
        ],
        "confidence_threshold": 0.9
      },
      "web_application": {
        "port_indicators": [
          80,
          443,
          8080,
          8443
        ],
        "service_indicators": [
          "http",
          "https",
          "nginx"
        ],
        "technology_indicators": [
          "nginx",
          "express",
          "jwt"
        ],
        "confidence_threshold": 0.85
      },
      "linux_system": {
        "port_indicators": [
          22
        ],
        "service_indicators": [
          "ssh",
          "openssh"
        ],
        "banner_indicators": [
          "Ubuntu",
          "OpenSSH"
        ],
        "confidence_threshold": 0.95
      }
    },
    "attack_prioritization": {
      "high_priority": [
        {
          "attack": "source_code_analysis",
          "when": "source_download_available",
          "reason": "reveals_authentication_secrets_and_vulnerabilities"
        },
        {
          "attack": "jwt_manipulation",
          "when": "jwt_tokens_detected_and_source_available",
          "reason": "often_leads_to_admin_access"
        }
      ],
      "medium_priority": [
        {
          "attack": "command_injection",
          "when": "admin_access_obtained",
          "reason": "reliable_shell_access_method"
        },
        {
          "attack": "suid_exploitation",
          "when": "shell_access_obtained",
          "reason": "common_privilege_escalation_vector"
        }
      ]
    }
  },
  "technique_intelligence": {
    "techniques": [
      {
        "name": "Git History Analysis",
        "mitre_id": "T1552.001",
        "category": "credential_access",
        "phase": "initial_access",
        "tools_used": [
          {
            "name": "git",
            "command_template": "git log --oneline",
            "actual_command": "git log --oneline",
            "output_pattern": "commit history with security-related changes",
            "effectiveness_rating": 5,
            "reliability": 0.95
          },
          {
            "name": "git show",
            "command_template": "git show {commit_hash}",
            "actual_command": "git show 67d8da7",
            "success_factors": [
              "git_directory_present",
              "commit_contains_secrets"
            ],
            "effectiveness_rating": 5
          }
        ],
        "prerequisites": [
          "git_repository_accessible",
          "source_code_download_available",
          "commit_history_contains_secrets"
        ],
        "success_indicators": [
          "previous_token_secret_revealed",
          "sensitive_configuration_exposed",
          "authentication_bypass_possible"
        ],
        "common_failures": [
          "no_git_history_available",
          "secrets_never_committed",
          "repository_cleaned_properly"
        ],
        "follow_up_techniques": [
          "jwt_token_forgery",
          "privilege_escalation",
          "command_injection"
        ],
        "time_investment": "5-15 minutes",
        "skill_level": "beginner"
      },
      {
        "name": "JWT Token Forgery",
        "mitre_id": "T1550.001",
        "category": "credential_access",
        "phase": "privilege_escalation",
        "tools_used": [
          {
            "name": "jwt_python_library",
            "command_template": "jwt.sign({'name': '{admin_user}', '_id': '{user_id}', 'email': '{email}'}, '{secret}')",
            "actual_command": "jwt.sign({'name': 'theadmin', '_id': '617825332c2bab0445c48462', 'email': 'admin@secret.com'}, 'gXr67TtoQL8TShUc8XYsK2HvsBYfyQSFCFZe4MQp7gRpFuMkKjcM72CNQN4fMfbZEKx4i7YiWuNAkmuTcdEriCMm9vPAYkhpwPTiuVwVhvwE')",
            "output_pattern": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.*",
            "effectiveness_rating": 5,
            "reliability": 0.98
          }
        ],
        "prerequisites": [
          "jwt_signing_secret_known",
          "target_admin_username_identified",
          "jwt_verification_mechanism_understood"
        ],
        "success_indicators": [
          "admin_token_generated_successfully",
          "admin_endpoints_accessible",
          "privilege_escalation_achieved"
        ],
        "common_failures": [
          "incorrect_secret_used",
          "wrong_payload_structure",
          "token_validation_additional_checks"
        ],
        "follow_up_techniques": [
          "admin_function_abuse",
          "command_injection_exploitation",
          "file_system_access"
        ],
        "time_investment": "5-10 minutes",
        "skill_level": "intermediate"
      },
      {
        "name": "Command Injection via Git Log",
        "mitre_id": "T1059.004",
        "category": "execution",
        "phase": "initial_access",
        "tools_used": [
          {
            "name": "curl",
            "command_template": "curl 'http://{target}/api/logs?file={payload}' -H 'auth-token: {admin_token}'",
            "actual_command": "curl 'http://10.10.11.120/api/logs?file=; id' -H 'auth-token: {forged_admin_token}'",
            "output_pattern": "command execution output in json response",
            "effectiveness_rating": 5,
            "reliability": 0.9
          }
        ],
        "prerequisites": [
          "admin_token_available",
          "vulnerable_git_log_endpoint_accessible",
          "command_injection_point_identified"
        ],
        "success_indicators": [
          "arbitrary_command_execution_achieved",
          "system_information_retrieved",
          "reverse_shell_established"
        ],
        "common_failures": [
          "input_sanitization_present",
          "command_execution_restricted",
          "network_filtering_blocks_payloads"
        ],
        "follow_up_techniques": [
          "reverse_shell_establishment",
          "local_privilege_escalation",
          "persistence_mechanisms"
        ],
        "time_investment": "10-20 minutes",
        "skill_level": "intermediate"
      }
    ],
    "tool_effectiveness": [
      {
        "tool": "git",
        "use_case": "source_code_history_analysis",
        "effectiveness_rating": 5,
        "reliability": 0.95,
        "learning_curve": "low",
        "essential_for": [
          "source_code_auditing",
          "secret_discovery"
        ],
        "alternatives": [
          "manual_file_analysis",
          "grep_searches"
        ],
        "best_practices": [
          "always_check_git_log_for_security_commits",
          "examine_removed_files_and_configurations",
          "look_for_commits_mentioning_security_or_secrets"
        ]
      },
      {
        "tool": "curl",
        "use_case": "api_testing_and_exploitation",
        "effectiveness_rating": 4,
        "reliability": 0.98,
        "learning_curve": "low",
        "essential_for": [
          "web_api_testing",
          "jwt_token_validation"
        ],
        "alternatives": [
          "burp_suite",
          "postman",
          "python_requests"
        ],
        "best_practices": [
          "use_proper_content_type_headers",
          "include_authentication_tokens_in_headers",
          "test_all_documented_endpoints"
        ]
      }
    ],
    "command_sequences": [
      {
        "sequence_name": "git_to_admin_access",
        "steps": [
          {
            "step": 1,
            "command": "wget http://10.10.11.120/download/files.zip && unzip files.zip",
            "purpose": "Download and extract source code",
            "expected_output": "Source code with .git directory"
          },
          {
            "step": 2,
            "command": "git log --oneline",
            "purpose": "Identify security-related commits",
            "expected_output": "Commit showing 'removed .env for security reasons'"
          },
          {
            "step": 3,
            "command": "git show 67d8da7",
            "purpose": "Extract JWT signing secret from commit",
            "expected_output": "TOKEN_SECRET = gXr67TtoQL8TShUc8XYsK2HvsBYfyQSFCFZe4MQp7gRpFuMkKjcM72CNQN4fMfbZEKx4i7YiWuNAkmuTcdEriCMm9vPAYkhpwPTiuVwVhvwE"
          },
          {
            "step": 4,
            "command": "python3 -c \"import jwt; print(jwt.encode({'name': 'theadmin', '_id': '617825332c2bab0445c48462', 'email': 'admin@secret.com'}, 'gXr67TtoQL8TShUc8XYsK2HvsBYfyQSFCFZe4MQp7gRpFuMkKjcM72CNQN4fMfbZEKx4i7YiWuNAkmuTcdEriCMm9vPAYkhpwPTiuVwVhvwE', algorithm='HS256'))\"",
            "purpose": "Forge admin JWT token",
            "expected_output": "Admin JWT token"
          },
          {
            "step": 5,
            "command": "curl 'http://10.10.11.120/api/logs?file=; id' -H 'auth-token: {forged_token}'",
            "purpose": "Execute commands via injection",
            "expected_output": "Command execution output"
          }
        ],
        "success_rate": 0.92,
        "typical_duration": "15-30 minutes"
      }
    ]
  },
  "metadata": {
    "basic_metadata": {
      "name": "Secret",
      "difficulty": "Easy",
      "os": "Ubuntu 20.04",
      "platform": "HackTheBox",
      "release_date": "2021-10-30",
      "author": "z9fr",
      "estimated_time": "60-90 minutes"
    },
    "intelligence_metadata": {
      "attack_complexity": "low",
      "skill_level_required": "beginner",
      "primary_attack_vectors": [
        "source_code_analysis",
        "jwt_manipulation",
        "command_injection"
      ],
      "key_vulnerabilities": [
        "exposed_jwt_secret",
        "command_injection",
        "suid_abuse"
      ],
      "environment_type": "web_application_server",
      "real_world_relevance": "high",
      "learning_value": [
        "jwt_security",
        "source_code_review",
        "suid_exploitation"
      ],
      "prerequisite_knowledge": [
        "basic_web_security",
        "jwt_concepts",
        "linux_fundamentals"
      ]
    },
    "categorization": {
      "primary_category": "web_application",
      "subcategories": [
        "source_code_analysis",
        "jwt_attacks",
        "privilege_escalation"
      ],
      "attack_types": [
        "credential_access",
        "command_injection",
        "privilege_escalation"
      ],
      "defensive_lessons": [
        "secure_jwt_implementation",
        "input_validation",
        "suid_binary_security"
      ]
    },
    "similarity_markers": {
      "similar_boxes": [
        "Node",
        "Schooled",
        "Timing"
      ],
      "similarity_reasons": [
        "nodejs_application",
        "jwt_vulnerabilities",
        "source_code_review"
      ],
      "unique_aspects": [
        "git_repository_analysis",
        "suid_file_descriptor_abuse",
        "crashdump_exploitation"
      ],
      "difficulty_factors": [
        "source_code_provided",
        "straightforward_attack_chain",
        "multiple_root_paths"
      ]
    }
  },
  "extraction_metadata": {
    "parse_date": "2025-07-05T02:44:04.619046",
    "original_file": "0xdf_writeups/Htb Secret.md",
    "content_length": 40286,
    "extraction_version": "2.0-claude",
    "model_used": "claude-sonnet-4-20250514"
  },
  "intelligence_confidence": 1.0,
  "quality_breakdown": {
    "scenario_uniqueness": 1.0,
    "success_logic_clarity": 1.0,
    "applicability_completeness": 1.0,
    "decision_tree_depth": 1.0,
    "technique_actionability": 1.0
  }
}