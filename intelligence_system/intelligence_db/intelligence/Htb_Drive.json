{
  "writeup_id": "Htb_Drive",
  "scenario_fingerprint": {
    "scenario_name": "linux_web_app_idor_to_ssh",
    "primary_services": [
      "http",
      "ssh"
    ],
    "port_signature": "22+80",
    "service_combination": "ssh+nginx",
    "os_family": "linux",
    "environment_type": "web_application",
    "entry_vector": "idor_vulnerability",
    "privilege_path": "web_app_to_ssh_to_root",
    "attack_complexity": "hard",
    "estimated_time": "3-4 hours",
    "scenario_confidence": 0.88,
    "distinguishing_factors": [
      "django_web_framework",
      "cloud_storage_application",
      "file_upload_functionality",
      "user_enumeration_via_groups",
      "sequential_id_parameters"
    ],
    "environmental_clues": [
      "nginx_ubuntu_server",
      "csrf_token_implementation",
      "filtered_port_3000",
      "drive_htb_domain",
      "file_blocking_functionality"
    ],
    "similar_scenarios": [
      "file_upload_web_apps",
      "django_idor_scenarios"
    ],
    "unique_aspects": [
      "cloud_storage_theme",
      "group_based_user_enumeration",
      "file_reservation_system",
      "gitea_backend_service",
      "buffer_overflow_privilege_escalation"
    ]
  },
  "success_patterns": {
    "success_factors": [
      {
        "technique": "IDOR_vulnerability",
        "success_reason": "Application failed to properly validate user authorization for file access",
        "prerequisite_indicators": [
          "sequential_file_ids",
          "authenticated_user_access",
          "predictable_url_patterns"
        ],
        "recognition_patterns": [
          "URLs with numeric IDs (/[id]/getFileDetail/)",
          "401 responses indicate protected resources exist",
          "Different response codes for valid vs invalid IDs"
        ],
        "failure_modes": [
          "proper_authorization_checks",
          "non_sequential_ids",
          "session_based_access_control"
        ],
        "environmental_factors": [
          "django_web_framework",
          "insufficient_access_controls",
          "predictable_resource_identifiers"
        ],
        "success_probability": 0.75,
        "typical_timeframe": "10-30 minutes"
      },
      {
        "technique": "credential_extraction",
        "success_reason": "Administrator files contained plaintext credentials",
        "prerequisite_indicators": [
          "access_to_admin_files",
          "backup_files_present",
          "configuration_files_accessible"
        ],
        "recognition_patterns": [
          "admin user enumeration via group creation",
          "backup file extensions (.sql, .tar, .zip)",
          "configuration file patterns"
        ],
        "failure_modes": [
          "encrypted_credentials",
          "no_admin_file_access",
          "credentials_not_reused"
        ],
        "environmental_factors": [
          "poor_credential_management",
          "file_sharing_platform",
          "admin_using_platform_for_storage"
        ],
        "success_probability": 0.65,
        "typical_timeframe": "15-45 minutes"
      },
      {
        "technique": "ssh_access",
        "success_reason": "Extracted credentials valid for SSH authentication",
        "prerequisite_indicators": [
          "ssh_service_available",
          "credential_reuse_patterns",
          "valid_system_users"
        ],
        "recognition_patterns": [
          "port 22 open in nmap",
          "usernames matching system patterns",
          "password reuse across services"
        ],
        "failure_modes": [
          "key_based_auth_only",
          "different_passwords",
          "account_lockout_policies"
        ],
        "environmental_factors": [
          "ubuntu_20.04_system",
          "password_authentication_enabled",
          "no_fail2ban_protection"
        ],
        "success_probability": 0.8,
        "typical_timeframe": "5-10 minutes"
      }
    ],
    "critical_discoveries": [
      {
        "discovery": "admin user enumeration",
        "discovery_method": "group creation with invalid usernames",
        "why_critical": "Confirmed admin user exists and led to targeted IDOR attacks",
        "how_to_recognize": [
          "group creation accepts existing users only",
          "error messages reveal valid usernames",
          "admin naming patterns"
        ],
        "follow_up_actions": [
          "enumerate_admin_file_ids",
          "test_idor_on_admin_resources",
          "check_admin_group_memberships"
        ]
      },
      {
        "discovery": "sequential file IDs with IDOR",
        "discovery_method": "ffuf enumeration of /[id]/getFileDetail/ endpoints",
        "why_critical": "Allowed access to administrator's private files containing credentials",
        "how_to_recognize": [
          "401 responses indicate protected resources",
          "sequential ID patterns in URLs",
          "different response sizes suggest different content"
        ],
        "follow_up_actions": [
          "enumerate_all_accessible_files",
          "download_and_analyze_file_contents",
          "search_for_credentials_and_configs"
        ]
      },
      {
        "discovery": "gitea service on port 3000",
        "discovery_method": "credential testing and service enumeration",
        "why_critical": "Provided access to backup scripts and additional credentials",
        "how_to_recognize": [
          "filtered port 3000 in nmap",
          "gitea default port",
          "git repository hosting service"
        ],
        "follow_up_actions": [
          "explore_git_repositories",
          "check_commit_history",
          "look_for_hardcoded_credentials"
        ]
      }
    ],
    "escalation_keys": [
      {
        "privilege_level": "authenticated_user",
        "escalation_method": "IDOR_to_admin_files",
        "why_possible": "Insufficient authorization checks on file access endpoints",
        "recognition_signs": [
          "predictable_url_patterns",
          "sequential_resource_identifiers",
          "401_responses_on_protected_resources"
        ],
        "exploitation_path": "User enumeration → IDOR testing → Admin file access → Credential extraction"
      },
      {
        "privilege_level": "file_access",
        "escalation_method": "credential_reuse_ssh",
        "why_possible": "Administrators stored and reused plaintext credentials",
        "recognition_signs": [
          "ssh_service_available",
          "credential_files_in_backups",
          "username_patterns_matching_system"
        ],
        "exploitation_path": "File access → Credential extraction → SSH authentication → System access"
      },
      {
        "privilege_level": "user_shell",
        "escalation_method": "gitea_access_backup_scripts",
        "why_possible": "Same credentials provided access to internal git service with sensitive repositories",
        "recognition_signs": [
          "filtered_ports_in_nmap",
          "credential_reuse_patterns",
          "development_services_running"
        ],
        "exploitation_path": "SSH access → Port 3000 access → Gitea login → Backup script access → Additional credentials"
      }
    ]
  },
  "decision_tree": {
    "decision_points": [
      {
        "step": 1,
        "situation": "Found ports 22,80,3000 on Linux host with web application",
        "decision": "Enumerate web application for vulnerabilities before credential attacks",
        "reasoning": "Web applications often provide easier initial access than SSH brute force",
        "confidence": 0.9,
        "alternatives": [
          {
            "option": "ssh_enumeration",
            "when": "if web app hardened"
          },
          {
            "option": "port_3000_investigation",
            "when": "if accessible"
          }
        ],
        "success_indicators": [
          "registration_available",
          "file_upload_functionality",
          "user_enumeration_possible"
        ],
        "next_decision": "identify_web_app_vulnerabilities"
      },
      {
        "step": 2,
        "situation": "Django web app with file management and user groups",
        "decision": "Test for IDOR vulnerabilities in file and group access",
        "reasoning": "Sequential IDs in URLs indicate potential insecure direct object references",
        "confidence": 0.85,
        "prerequisites": [
          "authenticated_access",
          "sequential_ids_observed"
        ],
        "success_indicators": [
          "unauthorized_files_accessible",
          "401_responses_on_restricted_content"
        ],
        "failure_fallbacks": [
          "file_upload_attacks",
          "group_enumeration",
          "sql_injection_testing"
        ]
      },
      {
        "step": 3,
        "situation": "IDOR vulnerability confirmed with access to admin files",
        "decision": "Extract credentials and sensitive information from accessible files",
        "reasoning": "Admin files likely contain credentials or configuration data",
        "confidence": 0.95,
        "prerequisites": [
          "idor_vulnerability_confirmed"
        ],
        "success_indicators": [
          "credentials_found",
          "ssh_keys_discovered",
          "database_info_leaked"
        ],
        "next_decision": "attempt_credential_reuse"
      },
      {
        "step": 4,
        "situation": "Credentials obtained from file disclosure",
        "decision": "Test credentials against SSH and discovered services",
        "reasoning": "Credential reuse is common, especially for admin accounts",
        "confidence": 0.8,
        "prerequisites": [
          "credentials_extracted"
        ],
        "success_indicators": [
          "ssh_access_gained",
          "service_authentication_successful"
        ],
        "failure_fallbacks": [
          "password_variations",
          "other_service_enumeration"
        ]
      }
    ],
    "branching_logic": {
      "if_idor_succeeds": {
        "action": "enumerate_all_accessible_files",
        "tools": [
          "ffuf",
          "burp_intruder"
        ],
        "next_phase": "credential_extraction"
      },
      "if_idor_fails": {
        "action": "try_alternative_web_attacks",
        "alternatives": [
          "file_upload_bypass",
          "sql_injection",
          "xss_exploitation"
        ],
        "decision_criteria": "based_on_application_functionality"
      },
      "if_credentials_obtained": {
        "action": "test_credential_reuse",
        "targets": [
          "ssh",
          "discovered_services",
          "web_admin_panels"
        ],
        "tools": [
          "ssh",
          "hydra",
          "custom_scripts"
        ]
      },
      "if_ssh_access_gained": {
        "action": "enumerate_internal_services",
        "purpose": "find_privilege_escalation_paths",
        "tools": [
          "netstat",
          "ps",
          "find_suid",
          "linpeas"
        ]
      }
    },
    "optimization_rules": [
      {
        "rule": "always_test_idor_on_sequential_ids",
        "reasoning": "high_success_rate_and_easy_to_identify",
        "applicability": "web_applications_with_predictable_urls"
      },
      {
        "rule": "prioritize_admin_file_access_over_user_files",
        "reasoning": "admin_files_more_likely_to_contain_credentials",
        "applicability": "idor_vulnerabilities_confirmed"
      },
      {
        "rule": "test_credentials_immediately_after_extraction",
        "reasoning": "prevents_detection_and_account_lockout",
        "applicability": "credentials_discovered"
      },
      {
        "rule": "enumerate_internal_services_after_initial_access",
        "reasoning": "filtered_ports_may_be_accessible_internally",
        "applicability": "shell_access_obtained"
      }
    ]
  },
  "applicability_rules": {
    "technique_rules": [
      {
        "technique": "IDOR_File_Access",
        "mitre_id": "T1083",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          8080,
          8443
        ],
        "os_requirements": [
          "any"
        ],
        "environmental_prerequisites": [
          "web_application_with_file_management",
          "sequential_file_identifiers",
          "authenticated_access_available"
        ],
        "success_indicators": [
          "predictable_url_patterns",
          "file_id_enumeration_possible",
          "access_control_bypass"
        ],
        "incompatible_with": [
          "proper_authorization_checks",
          "random_file_identifiers",
          "session_based_file_access"
        ],
        "confidence_boosters": [
          "django_framework_detected",
          "sequential_id_patterns",
          "group_enumeration_works"
        ],
        "typical_success_rate": 0.75,
        "estimated_time": "10-30 minutes"
      },
      {
        "technique": "User_Enumeration_Groups",
        "mitre_id": "T1087.001",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443
        ],
        "os_requirements": [
          "any"
        ],
        "environmental_prerequisites": [
          "web_application_with_user_management",
          "group_creation_functionality",
          "user_validation_on_group_add"
        ],
        "success_indicators": [
          "valid_users_added_to_groups",
          "invalid_users_rejected",
          "differential_response_behavior"
        ],
        "incompatible_with": [
          "no_user_validation",
          "anonymous_group_access",
          "rate_limiting_enabled"
        ],
        "confidence_boosters": [
          "admin_user_exists",
          "predictable_usernames",
          "error_message_differences"
        ],
        "typical_success_rate": 0.85,
        "estimated_time": "5-15 minutes"
      },
      {
        "technique": "SSH_Credential_Reuse",
        "mitre_id": "T1078.003",
        "required_services": [
          "ssh"
        ],
        "required_ports": [
          22
        ],
        "os_requirements": [
          "linux",
          "unix"
        ],
        "environmental_prerequisites": [
          "ssh_service_accessible",
          "credentials_obtained_from_files",
          "password_authentication_enabled"
        ],
        "success_indicators": [
          "ssh_banner_responds",
          "password_auth_not_disabled",
          "no_key_only_restriction"
        ],
        "incompatible_with": [
          "key_only_authentication",
          "account_lockout_policies",
          "network_isolation"
        ],
        "confidence_boosters": [
          "ubuntu_ssh_version",
          "default_ssh_config",
          "leaked_plaintext_passwords"
        ],
        "typical_success_rate": 0.7,
        "estimated_time": "1-5 minutes"
      },
      {
        "technique": "Directory_Bruteforce",
        "mitre_id": "T1083",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          8080,
          8443
        ],
        "os_requirements": [
          "any"
        ],
        "environmental_prerequisites": [
          "web_server_accessible",
          "no_aggressive_rate_limiting",
          "standard_directory_structure"
        ],
        "success_indicators": [
          "200_responses_to_requests",
          "no_500_error_flood",
          "predictable_url_structure"
        ],
        "incompatible_with": [
          "aggressive_rate_limiting",
          "waf_protection",
          "custom_error_handling"
        ],
        "confidence_boosters": [
          "nginx_server_header",
          "django_framework_indicators",
          "standard_web_paths"
        ],
        "typical_success_rate": 0.6,
        "estimated_time": "15-45 minutes"
      }
    ],
    "environmental_detectors": {
      "django_web_application": {
        "port_indicators": [
          80,
          443,
          8080
        ],
        "service_indicators": [
          "http",
          "https"
        ],
        "banner_indicators": [
          "csrftoken",
          "Django",
          "sessionid"
        ],
        "confidence_threshold": 0.8
      },
      "file_management_system": {
        "port_indicators": [
          80,
          443
        ],
        "service_indicators": [
          "http",
          "https"
        ],
        "technology_indicators": [
          "file upload",
          "cloud storage",
          "getFileDetail"
        ],
        "confidence_threshold": 0.85
      },
      "ubuntu_linux": {
        "port_indicators": [
          22
        ],
        "service_indicators": [
          "ssh"
        ],
        "banner_indicators": [
          "OpenSSH 8.2p1 Ubuntu",
          "ubuntu0.9"
        ],
        "confidence_threshold": 0.9
      }
    },
    "attack_prioritization": {
      "high_priority": [
        {
          "attack": "user_enumeration_groups",
          "when": "group_functionality_detected",
          "reason": "quick_way_to_find_valid_usernames"
        },
        {
          "attack": "idor_file_access",
          "when": "sequential_file_ids_detected",
          "reason": "direct_access_to_sensitive_files"
        }
      ],
      "medium_priority": [
        {
          "attack": "ssh_credential_reuse",
          "when": "ssh_service_and_creds_available",
          "reason": "common_password_reuse_pattern"
        },
        {
          "attack": "directory_bruteforce",
          "when": "web_service_detected",
          "reason": "may_reveal_hidden_functionality"
        }
      ]
    }
  },
  "technique_intelligence": {
    "techniques": [
      {
        "name": "IDOR File Access",
        "mitre_id": "T1083",
        "category": "discovery",
        "phase": "lateral_movement",
        "tools_used": [
          {
            "name": "ffuf",
            "command_template": "ffuf -u http://{target}/FUZZ/getFileDetail/ -w <(seq 1 {max_id}) -fc 500 -H \"Cookie: {cookie}\"",
            "actual_command": "ffuf -u http://drive.htb/FUZZ/getFileDetail/ -w <(seq 1 500) -fc 500 -H \"Cookie: csrftoken=GWHHBpfjentV8FG7IVYiKgMAmK5wNVaF; sessionid=c8xebin9cekvgy59r1de8wvfmllxgrnu\"",
            "output_pattern": "Status: 401, Size: 26",
            "effectiveness_rating": 5,
            "reliability": 0.95
          },
          {
            "name": "curl",
            "command_template": "curl -H \"Cookie: {cookie}\" http://{target}/{id}/block/",
            "actual_command": "curl -H \"Cookie: csrftoken=GWHHBpfjentV8FG7IVYiKgMAmK5wNVaF; sessionid=c8xebin9cekvgy59r1de8wvfmllxgrnu\" http://drive.htb/79/block/",
            "success_factors": [
              "valid_session_cookie",
              "sequential_id_enumeration"
            ],
            "effectiveness_rating": 5
          }
        ],
        "prerequisites": [
          "authenticated_session",
          "sequential_object_ids",
          "insufficient_access_controls"
        ],
        "success_indicators": [
          "401_unauthorized_responses_for_inaccessible_files",
          "200_responses_bypass_authorization_via_block_endpoint",
          "sensitive_data_exposed_in_unauthorized_files"
        ],
        "common_failures": [
          "randomized_object_ids",
          "proper_authorization_checks",
          "rate_limiting_blocks_enumeration"
        ],
        "follow_up_techniques": [
          "credential_harvesting",
          "ssh_authentication",
          "privilege_escalation"
        ],
        "time_investment": "10-20 minutes",
        "skill_level": "beginner"
      },
      {
        "name": "User Enumeration via Group Creation",
        "mitre_id": "T1087.001",
        "category": "discovery",
        "phase": "reconnaissance",
        "tools_used": [
          {
            "name": "web_browser",
            "command_template": "Create group with users: {username_list}",
            "actual_command": "Create group with users: admin,nonexistent1,nonexistent2",
            "output_pattern": "Valid users added to group, invalid users ignored",
            "effectiveness_rating": 4,
            "reliability": 0.9
          }
        ],
        "prerequisites": [
          "authenticated_web_session",
          "group_creation_functionality",
          "user_validation_on_group_add"
        ],
        "success_indicators": [
          "valid_usernames_accepted_in_group",
          "invalid_usernames_rejected_silently",
          "differential_response_reveals_valid_users"
        ],
        "common_failures": [
          "no_user_validation",
          "all_usernames_accepted_regardless",
          "rate_limiting_prevents_enumeration"
        ],
        "follow_up_techniques": [
          "credential_spraying",
          "targeted_attacks_on_enumerated_users"
        ],
        "time_investment": "5-15 minutes",
        "skill_level": "beginner"
      },
      {
        "name": "SSH Authentication with Harvested Credentials",
        "mitre_id": "T1078.003",
        "category": "initial_access",
        "phase": "initial_access",
        "tools_used": [
          {
            "name": "sshpass",
            "command_template": "sshpass -p '{password}' ssh {username}@{target}",
            "actual_command": "sshpass -p 'Xk4@KjyrYv8t194L!' ssh martin@drive.htb",
            "output_pattern": "Welcome to Ubuntu",
            "effectiveness_rating": 5,
            "reliability": 0.98
          }
        ],
        "prerequisites": [
          "valid_credentials_obtained",
          "ssh_service_accessible",
          "user_account_has_shell_access"
        ],
        "success_indicators": [
          "successful_authentication",
          "shell_access_granted",
          "user_context_established"
        ],
        "common_failures": [
          "invalid_credentials",
          "account_locked_or_disabled",
          "ssh_key_required_instead_of_password"
        ],
        "follow_up_techniques": [
          "local_enumeration",
          "privilege_escalation",
          "lateral_movement"
        ],
        "time_investment": "1-2 minutes",
        "skill_level": "beginner"
      }
    ],
    "tool_effectiveness": [
      {
        "tool": "ffuf",
        "use_case": "web_fuzzing_and_enumeration",
        "effectiveness_rating": 5,
        "reliability": 0.95,
        "learning_curve": "low",
        "essential_for": [
          "web_application_testing",
          "idor_discovery"
        ],
        "alternatives": [
          "burp_intruder",
          "wfuzz",
          "gobuster"
        ],
        "best_practices": [
          "use_appropriate_filters_to_reduce_noise",
          "include_authentication_cookies_when_needed",
          "adjust_thread_count_to_avoid_rate_limiting"
        ]
      },
      {
        "tool": "sshpass",
        "use_case": "ssh_authentication_with_password",
        "effectiveness_rating": 4,
        "reliability": 0.98,
        "learning_curve": "minimal",
        "essential_for": [
          "automated_ssh_login",
          "credential_validation"
        ],
        "alternatives": [
          "expect_scripts",
          "paramiko_python",
          "manual_ssh"
        ],
        "best_practices": [
          "avoid_in_production_environments",
          "use_for_testing_and_ctf_scenarios",
          "consider_key_based_auth_for_persistence"
        ]
      }
    ],
    "command_sequences": [
      {
        "sequence_name": "idor_to_credential_harvest",
        "steps": [
          {
            "step": 1,
            "command": "ffuf -u http://drive.htb/FUZZ/getFileDetail/ -w <(seq 1 500) -fc 500 -H \"Cookie: [session_cookie]\"",
            "purpose": "Enumerate accessible file IDs",
            "expected_output": "List of file IDs returning 401 unauthorized"
          },
          {
            "step": 2,
            "command": "curl -H \"Cookie: [session_cookie]\" http://drive.htb/79/block/",
            "purpose": "Bypass authorization via block endpoint",
            "expected_output": "File content with credentials martin:Xk4@KjyrYv8t194L!"
          },
          {
            "step": 3,
            "command": "sshpass -p 'Xk4@KjyrYv8t194L!' ssh martin@drive.htb",
            "purpose": "Authenticate with harvested credentials",
            "expected_output": "SSH shell as martin user"
          }
        ],
        "success_rate": 0.92,
        "typical_duration": "15-30 minutes"
      },
      {
        "sequence_name": "web_app_reconnaissance",
        "steps": [
          {
            "step": 1,
            "command": "Register account on drive.htb",
            "purpose": "Gain authenticated access",
            "expected_output": "Valid user session"
          },
          {
            "step": 2,
            "command": "Create group with users: admin,test1,test2",
            "purpose": "Enumerate valid usernames",
            "expected_output": "admin user confirmed as valid"
          },
          {
            "step": 3,
            "command": "ffuf -u http://drive.htb/FUZZ/getGroupDetail/ -w <(seq 1 500) -fc 500",
            "purpose": "Enumerate group IDs",
            "expected_output": "List of accessible and restricted groups"
          }
        ],
        "success_rate": 0.88,
        "typical_duration": "10-20 minutes"
      }
    ]
  },
  "metadata": {
    "basic_metadata": {
      "name": "Drive",
      "difficulty": "Hard",
      "os": "Ubuntu 20.04",
      "platform": "HackTheBox",
      "release_date": "2023-10-14",
      "author": "Spectra199",
      "estimated_time": "4-6 hours"
    },
    "intelligence_metadata": {
      "attack_complexity": "high",
      "skill_level_required": "advanced",
      "primary_attack_vectors": [
        "idor",
        "sql_injection",
        "buffer_overflow"
      ],
      "key_vulnerabilities": [
        "insecure_direct_object_reference",
        "credential_exposure",
        "buffer_overflow",
        "sql_injection"
      ],
      "environment_type": "web_application_cloud_storage",
      "real_world_relevance": "high",
      "learning_value": [
        "idor_exploitation",
        "gitea_enumeration",
        "buffer_overflow_exploitation",
        "sql_injection_rce"
      ],
      "prerequisite_knowledge": [
        "web_application_testing",
        "binary_exploitation",
        "linux_privilege_escalation"
      ]
    },
    "categorization": {
      "primary_category": "web_application",
      "subcategories": [
        "idor",
        "binary_exploitation",
        "sql_injection"
      ],
      "attack_types": [
        "credential_access",
        "privilege_escalation",
        "code_execution"
      ],
      "defensive_lessons": [
        "proper_access_controls",
        "input_validation",
        "secure_coding_practices",
        "credential_management"
      ]
    },
    "similarity_markers": {
      "similar_boxes": [
        "Bucket",
        "Schooled",
        "Forge"
      ],
      "similarity_reasons": [
        "web_application_focus",
        "idor_vulnerabilities",
        "multi_stage_exploitation"
      ],
      "unique_aspects": [
        "gitea_integration",
        "buffer_overflow_privilege_escalation",
        "cloud_storage_theme"
      ],
      "difficulty_factors": [
        "multiple_exploitation_paths",
        "binary_exploitation_required",
        "complex_attack_chain"
      ]
    }
  },
  "extraction_metadata": {
    "parse_date": "2025-07-04T21:36:56.559662",
    "original_file": "0xdf_writeups/Htb Drive.md",
    "content_length": 61423,
    "extraction_version": "2.0-claude",
    "model_used": "claude-sonnet-4-20250514"
  },
  "intelligence_confidence": 1.0,
  "quality_breakdown": {
    "scenario_uniqueness": 1.0,
    "success_logic_clarity": 1.0,
    "applicability_completeness": 1.0,
    "decision_tree_depth": 1.0,
    "technique_actionability": 1.0
  }
}