{
  "writeup_id": "Htb_Usage",
  "scenario_fingerprint": {
    "scenario_name": "linux_web_sqli_to_file_upload_privesc",
    "primary_services": [
      "http",
      "ssh"
    ],
    "port_signature": "22+80",
    "service_combination": "ssh+nginx",
    "os_family": "linux",
    "environment_type": "web_application",
    "entry_vector": "blind_sql_injection",
    "privilege_path": "sqli_to_admin_to_file_upload_to_root",
    "attack_complexity": "easy",
    "estimated_time": "30-45 minutes",
    "scenario_confidence": 0.92,
    "distinguishing_factors": [
      "laravel_framework",
      "password_reset_sqli",
      "laravel_admin_panel",
      "client_side_validation_bypass",
      "wildcard_7z_vulnerability"
    ],
    "environmental_clues": [
      "ubuntu_22_04_jammy",
      "nginx_1_18_0",
      "laravel_session_cookies",
      "admin_subdomain",
      "monit_configuration"
    ],
    "similar_scenarios": [
      "usage_htb_easy",
      "laravel_admin_exploits"
    ],
    "unique_aspects": [
      "blind_sqli_in_password_reset",
      "laravel_admin_profile_upload",
      "7z_wildcard_file_read"
    ]
  },
  "success_patterns": {
    "success_factors": [
      {
        "technique": "Blind SQL Injection",
        "success_reason": "Password reset form lacked input validation and used unsafe SQL queries",
        "prerequisite_indicators": [
          "web_application_accessible",
          "database_backend_present",
          "user_input_processed_in_queries"
        ],
        "recognition_patterns": [
          "500 error on single quote input",
          "different responses to true/false conditions",
          "email parameter in password reset forms"
        ],
        "failure_modes": [
          "parameterized_queries_used",
          "input_validation_present",
          "waf_protection_active"
        ],
        "environmental_factors": [
          "laravel_framework_default_config",
          "developer_inexperience_with_security",
          "lack_of_code_review"
        ],
        "success_probability": 0.75,
        "typical_timeframe": "15-30 minutes"
      },
      {
        "technique": "Laravel-Admin File Upload Bypass",
        "success_reason": "Client-side validation only, allowing extension manipulation after validation",
        "prerequisite_indicators": [
          "laravel_admin_panel_accessible",
          "file_upload_functionality_present",
          "admin_credentials_available"
        ],
        "recognition_patterns": [
          "profile picture upload feature",
          "client-side file extension validation",
          "laravel-admin framework in use"
        ],
        "failure_modes": [
          "server_side_validation_implemented",
          "file_type_restrictions_enforced",
          "upload_directory_not_executable"
        ],
        "environmental_factors": [
          "default_laravel_admin_configuration",
          "web_accessible_upload_directory",
          "php_execution_enabled_in_uploads"
        ],
        "success_probability": 0.85,
        "typical_timeframe": "10-20 minutes"
      },
      {
        "technique": "7zip Wildcard Vulnerability",
        "success_reason": "Wildcard expansion allowed arbitrary file inclusion in archive operations",
        "prerequisite_indicators": [
          "7zip_utility_available",
          "wildcard_usage_in_scripts",
          "user_controlled_file_operations"
        ],
        "recognition_patterns": [
          "backup scripts using wildcards",
          "7z command with * expansion",
          "cron jobs or automated archiving"
        ],
        "failure_modes": [
          "explicit_file_paths_used",
          "input_sanitization_present",
          "restricted_file_access"
        ],
        "environmental_factors": [
          "automated_backup_systems",
          "insufficient_privilege_separation",
          "legacy_script_configurations"
        ],
        "success_probability": 0.65,
        "typical_timeframe": "20-40 minutes"
      }
    ],
    "critical_discoveries": [
      {
        "discovery": "SQL injection in password reset form",
        "discovery_method": "Manual testing with single quote",
        "why_critical": "Enabled database enumeration and admin credential extraction",
        "how_to_recognize": [
          "500 error on quote injection",
          "different response times",
          "boolean-based blind injection patterns"
        ],
        "follow_up_actions": [
          "run_sqlmap_with_increased_levels",
          "enumerate_database_structure",
          "extract_user_credentials"
        ]
      },
      {
        "discovery": "Laravel-Admin panel access",
        "discovery_method": "Subdomain enumeration",
        "why_critical": "Provided authenticated file upload capability",
        "how_to_recognize": [
          "admin subdomain responds differently",
          "laravel-admin login interface",
          "different authentication system"
        ],
        "follow_up_actions": [
          "test_extracted_credentials",
          "identify_file_upload_features",
          "analyze_client_side_validation"
        ]
      },
      {
        "discovery": "Monit configuration with credentials",
        "discovery_method": "File system enumeration after webshell",
        "why_critical": "Provided user account access for privilege escalation",
        "how_to_recognize": [
          "monit service running",
          "config files in /etc/monit/",
          "plaintext credentials in configs"
        ],
        "follow_up_actions": [
          "test_credentials_for_ssh",
          "enumerate_user_privileges",
          "search_for_escalation_vectors"
        ]
      }
    ],
    "escalation_keys": [
      {
        "privilege_level": "web_user",
        "escalation_method": "credential_reuse_from_config",
        "why_possible": "Monit configuration contained reused user credentials",
        "recognition_signs": [
          "config_files_readable_by_webuser",
          "plaintext_passwords_in_configs",
          "service_account_credential_reuse"
        ],
        "exploitation_path": "Webshell → Config File Read → SSH Access"
      },
      {
        "privilege_level": "user_account",
        "escalation_method": "7zip_wildcard_exploitation",
        "why_possible": "Automated backup script used unsafe wildcard expansion",
        "recognition_signs": [
          "backup_scripts_with_wildcards",
          "7zip_operations_as_root",
          "user_writable_backup_directories"
        ],
        "exploitation_path": "User Access → Wildcard Injection → Root File Read → Root Access"
      }
    ]
  },
  "decision_tree": {
    "decision_points": [
      {
        "step": 1,
        "situation": "Found ports 22,80 open on Linux host with domain-based routing",
        "decision": "Enumerate subdomains and identify web application technology",
        "reasoning": "Domain redirect indicates virtual hosting, multiple subdomains likely",
        "confidence": 0.9,
        "alternatives": [
          {
            "option": "direct_web_enumeration",
            "when": "if subdomain_fuzz_fails"
          },
          {
            "option": "ssh_enumeration",
            "when": "if_web_fails"
          }
        ],
        "success_indicators": [
          "subdomains_discovered",
          "technology_stack_identified",
          "application_framework_detected"
        ],
        "next_decision": "analyze_web_application_attack_surface"
      },
      {
        "step": 2,
        "situation": "Identified Laravel application with login/registration and password reset forms",
        "decision": "Test all input fields for SQL injection starting with password reset",
        "reasoning": "Password reset forms often have less input validation and direct DB queries",
        "confidence": 0.85,
        "prerequisites": [
          "web_forms_identified",
          "input_fields_mapped"
        ],
        "success_indicators": [
          "500_error_on_single_quote",
          "sql_error_messages"
        ],
        "failure_fallbacks": [
          "test_other_forms",
          "directory_bruteforce",
          "framework_specific_attacks"
        ]
      },
      {
        "step": 3,
        "situation": "SQL injection confirmed in password reset email field",
        "decision": "Use sqlmap with increased level/risk parameters for blind injection",
        "reasoning": "Initial sqlmap failed, but manual testing confirmed injection exists",
        "confidence": 0.95,
        "prerequisites": [
          "sql_injection_confirmed",
          "request_captured"
        ],
        "success_indicators": [
          "injection_point_identified",
          "database_type_detected"
        ],
        "failure_fallbacks": [
          "manual_blind_injection",
          "error_based_injection"
        ]
      },
      {
        "step": 4,
        "situation": "Database access obtained via SQL injection",
        "decision": "Target admin_users table first for credential extraction",
        "reasoning": "Admin credentials provide highest privilege escalation potential",
        "confidence": 0.9,
        "prerequisites": [
          "database_enumerated",
          "tables_identified"
        ],
        "success_indicators": [
          "admin_credentials_extracted",
          "password_hashes_obtained"
        ],
        "failure_fallbacks": [
          "dump_regular_users",
          "enumerate_other_tables"
        ]
      }
    ],
    "branching_logic": {
      "if_subdomain_found": {
        "action": "enumerate_each_subdomain_separately",
        "tools": [
          "ffuf",
          "gobuster"
        ],
        "next_phase": "technology_identification"
      },
      "if_laravel_detected": {
        "action": "focus_on_laravel_specific_vulnerabilities",
        "alternatives": [
          "sql_injection",
          "file_upload",
          "deserialization"
        ],
        "decision_criteria": "based_on_available_input_points"
      },
      "if_sql_injection_confirmed": {
        "action": "escalate_to_automated_exploitation",
        "tools": [
          "sqlmap"
        ],
        "parameters": [
          "--level 5",
          "--risk 3",
          "--threads 10"
        ],
        "target_priority": [
          "admin_users",
          "users",
          "sensitive_config"
        ]
      },
      "if_admin_credentials_obtained": {
        "action": "attempt_admin_panel_access",
        "purpose": "gain_administrative_interface_access",
        "next_phase": "admin_panel_exploitation"
      }
    },
    "optimization_rules": [
      {
        "rule": "always_test_password_reset_forms_for_sql_injection",
        "reasoning": "high_success_rate_due_to_less_input_validation",
        "applicability": "web_applications_with_user_authentication"
      },
      {
        "rule": "increase_sqlmap_level_and_risk_if_initial_scan_fails",
        "reasoning": "default_settings_miss_many_injection_points",
        "applicability": "confirmed_sql_injection_that_sqlmap_missed"
      },
      {
        "rule": "prioritize_admin_tables_over_regular_user_tables",
        "reasoning": "admin_access_provides_faster_privilege_escalation",
        "applicability": "database_access_obtained"
      },
      {
        "rule": "enumerate_subdomains_on_domain_redirects",
        "reasoning": "often_reveals_admin_panels_and_additional_attack_surface",
        "applicability": "web_applications_using_virtual_hosts"
      }
    ]
  },
  "applicability_rules": {
    "technique_rules": [
      {
        "technique": "Blind SQL Injection",
        "mitre_id": "T1190",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          8080,
          8443
        ],
        "os_requirements": [
          "any"
        ],
        "environmental_prerequisites": [
          "web_application_present",
          "database_backend",
          "user_input_fields",
          "insufficient_input_validation"
        ],
        "success_indicators": [
          "500_error_on_single_quote",
          "different_response_times",
          "error_messages_revealed",
          "boolean_based_responses"
        ],
        "incompatible_with": [
          "prepared_statements_only",
          "strict_waf_protection",
          "no_database_interaction"
        ],
        "confidence_boosters": [
          "password_reset_forms",
          "login_forms",
          "search_functionality",
          "laravel_framework_detected"
        ],
        "typical_success_rate": 0.75,
        "estimated_time": "15-45 minutes"
      },
      {
        "technique": "Laravel File Upload Bypass",
        "mitre_id": "T1105",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443
        ],
        "os_requirements": [
          "any"
        ],
        "environmental_prerequisites": [
          "laravel_framework",
          "file_upload_functionality",
          "client_side_validation_only",
          "admin_panel_access"
        ],
        "success_indicators": [
          "laravel_admin_detected",
          "profile_picture_upload",
          "file_extension_validation_bypassable",
          "php_execution_enabled"
        ],
        "incompatible_with": [
          "server_side_validation",
          "file_type_restrictions",
          "upload_directory_restrictions"
        ],
        "confidence_boosters": [
          "laravel_admin_package",
          "default_configurations",
          "weak_mime_type_checking"
        ],
        "typical_success_rate": 0.82,
        "estimated_time": "10-20 minutes"
      },
      {
        "technique": "Wildcard Injection",
        "mitre_id": "T1068",
        "required_services": [
          "ssh"
        ],
        "required_ports": [
          22
        ],
        "os_requirements": [
          "linux"
        ],
        "environmental_prerequisites": [
          "shell_access",
          "archive_tools_present",
          "wildcard_usage_in_scripts",
          "writable_directories"
        ],
        "success_indicators": [
          "7z_command_with_wildcards",
          "cron_jobs_with_wildcards",
          "script_automation_present",
          "file_creation_permissions"
        ],
        "incompatible_with": [
          "quoted_wildcards",
          "restricted_file_permissions",
          "no_automation_scripts"
        ],
        "confidence_boosters": [
          "backup_scripts",
          "archive_automation",
          "root_owned_scripts"
        ],
        "typical_success_rate": 0.65,
        "estimated_time": "20-40 minutes"
      }
    ],
    "environmental_detectors": {
      "laravel_framework": {
        "port_indicators": [
          80,
          443,
          8080
        ],
        "service_indicators": [
          "http",
          "https"
        ],
        "banner_indicators": [
          "Laravel",
          "XSRF-TOKEN",
          "laravel_session"
        ],
        "path_indicators": [
          "/index.php",
          "/login",
          "/registration"
        ],
        "cookie_indicators": [
          "XSRF-TOKEN",
          "laravel_session"
        ],
        "confidence_threshold": 0.9
      },
      "web_application": {
        "port_indicators": [
          80,
          443,
          8080,
          8443
        ],
        "service_indicators": [
          "http",
          "https",
          "nginx",
          "apache"
        ],
        "banner_indicators": [
          "nginx",
          "apache",
          "iis"
        ],
        "confidence_threshold": 0.85
      },
      "linux_system": {
        "port_indicators": [
          22
        ],
        "service_indicators": [
          "ssh",
          "OpenSSH"
        ],
        "banner_indicators": [
          "Ubuntu",
          "OpenSSH"
        ],
        "confidence_threshold": 0.88
      }
    },
    "attack_prioritization": {
      "high_priority": [
        {
          "attack": "sql_injection_testing",
          "when": "web_forms_detected",
          "reason": "single_quote_test_quick_and_effective"
        },
        {
          "attack": "subdomain_enumeration",
          "when": "domain_based_routing_detected",
          "reason": "often_reveals_admin_panels"
        }
      ],
      "medium_priority": [
        {
          "attack": "file_upload_bypass",
          "when": "laravel_admin_detected",
          "reason": "common_vulnerability_in_laravel_admin"
        },
        {
          "attack": "credential_reuse",
          "when": "multiple_login_forms_found",
          "reason": "users_often_reuse_passwords"
        }
      ],
      "low_priority": [
        {
          "attack": "directory_bruteforce",
          "when": "web_service_detected",
          "reason": "time_consuming_and_may_trigger_rate_limiting"
        }
      ]
    }
  },
  "technique_intelligence": {
    "techniques": [
      {
        "name": "Blind SQL Injection",
        "mitre_id": "T1190",
        "category": "initial_access",
        "phase": "exploitation",
        "tools_used": [
          {
            "name": "sqlmap",
            "command_template": "sqlmap -r {request_file} --level {level} --risk {risk} --threads {threads} -p {parameter} --batch",
            "actual_command": "sqlmap -r reset.request --level 5 --risk 3 --threads 10 -p email --batch",
            "output_pattern": "boolean-based blind|time-based blind",
            "effectiveness_rating": 5,
            "reliability": 0.92
          },
          {
            "name": "manual_testing",
            "command_template": "curl -X POST -d \"email='\" {target_url}",
            "actual_command": "Submit single quote in password reset form",
            "success_factors": [
              "500_error_response",
              "database_error_message"
            ],
            "effectiveness_rating": 4
          }
        ],
        "prerequisites": [
          "web_application_with_database",
          "user_input_fields",
          "insufficient_input_validation"
        ],
        "success_indicators": [
          "500_internal_server_error",
          "database_error_messages",
          "different_response_times",
          "boolean_condition_responses"
        ],
        "common_failures": [
          "waf_protection_active",
          "parameterized_queries_used",
          "input_sanitization_present"
        ],
        "follow_up_techniques": [
          "database_enumeration",
          "credential_extraction",
          "privilege_escalation"
        ],
        "time_investment": "30-120 minutes",
        "skill_level": "intermediate"
      },
      {
        "name": "Database Enumeration via SQLMap",
        "mitre_id": "T1005",
        "category": "collection",
        "phase": "exploitation",
        "tools_used": [
          {
            "name": "sqlmap",
            "command_template": "sqlmap -r {request_file} --level 5 --risk 3 --threads 10 -p {param} --batch -D {database} -T {table} --dump",
            "actual_command": "sqlmap -r reset.request --level 5 --risk 3 --threads 10 -p email --batch -D usage_blog -T admin_users --dump",
            "output_pattern": "Database: {db_name}\\nTable: {table_name}",
            "effectiveness_rating": 5,
            "reliability": 0.95
          }
        ],
        "prerequisites": [
          "confirmed_sql_injection",
          "database_access_available"
        ],
        "success_indicators": [
          "database_names_enumerated",
          "table_structures_revealed",
          "sensitive_data_extracted"
        ],
        "common_failures": [
          "insufficient_database_privileges",
          "query_timeout_issues",
          "detection_and_blocking"
        ],
        "follow_up_techniques": [
          "credential_cracking",
          "authentication_bypass",
          "lateral_movement"
        ],
        "time_investment": "15-60 minutes",
        "skill_level": "beginner"
      },
      {
        "name": "BCrypt Hash Cracking",
        "mitre_id": "T1110.002",
        "category": "credential_access",
        "phase": "post_exploitation",
        "tools_used": [
          {
            "name": "hashcat",
            "command_template": "hashcat {hash_file} {wordlist} -m {mode}",
            "actual_command": "hashcat ./admin.hash rockyou.txt -m 3200",
            "output_pattern": "$2y$10${hash}:{password}",
            "effectiveness_rating": 4,
            "reliability": 0.85
          }
        ],
        "prerequisites": [
          "bcrypt_hash_extracted",
          "wordlist_available",
          "sufficient_compute_power"
        ],
        "success_indicators": [
          "password_cracked_successfully",
          "plaintext_credentials_obtained"
        ],
        "common_failures": [
          "strong_password_policy",
          "insufficient_wordlist",
          "high_bcrypt_cost_factor"
        ],
        "follow_up_techniques": [
          "credential_reuse_testing",
          "admin_panel_access",
          "privilege_escalation"
        ],
        "time_investment": "5 minutes - several hours",
        "skill_level": "beginner"
      }
    ],
    "tool_effectiveness": [
      {
        "tool": "sqlmap",
        "use_case": "automated_sql_injection_exploitation",
        "effectiveness_rating": 5,
        "reliability": 0.92,
        "learning_curve": "low",
        "essential_for": [
          "web_application_testing",
          "database_exploitation"
        ],
        "alternatives": [
          "manual_injection",
          "burp_suite_scanner"
        ],
        "best_practices": [
          "increase_level_and_risk_for_difficult_injections",
          "use_request_files_for_complex_forms",
          "target_specific_parameters_to_reduce_noise"
        ]
      },
      {
        "tool": "hashcat",
        "use_case": "password_hash_cracking",
        "effectiveness_rating": 5,
        "reliability": 0.95,
        "learning_curve": "low",
        "essential_for": [
          "credential_recovery",
          "password_auditing"
        ],
        "alternatives": [
          "john_the_ripper",
          "online_hash_crackers"
        ],
        "best_practices": [
          "identify_correct_hash_mode_first",
          "start_with_common_wordlists",
          "use_gpu_acceleration_when_available"
        ]
      }
    ],
    "command_sequences": [
      {
        "sequence_name": "sql_injection_to_admin_access",
        "steps": [
          {
            "step": 1,
            "command": "Submit single quote (') in password reset email field",
            "purpose": "Test for SQL injection vulnerability",
            "expected_output": "500 Internal Server Error"
          },
          {
            "step": 2,
            "command": "sqlmap -r reset.request --level 5 --risk 3 --threads 10 -p email --batch --dbs",
            "purpose": "Enumerate available databases",
            "expected_output": "usage_blog database discovered"
          },
          {
            "step": 3,
            "command": "sqlmap -r reset.request --level 5 --risk 3 --threads 10 -p email --batch -D usage_blog --tables",
            "purpose": "List tables in target database",
            "expected_output": "admin_users table identified"
          },
          {
            "step": 4,
            "command": "sqlmap -r reset.request --level 5 --risk 3 --threads 10 -p email --batch -D usage_blog -T admin_users --dump",
            "purpose": "Extract admin user credentials",
            "expected_output": "BCrypt hash for admin user"
          },
          {
            "step": 5,
            "command": "hashcat ./admin.hash rockyou.txt -m 3200",
            "purpose": "Crack extracted password hash",
            "expected_output": "Password: whatever1"
          }
        ],
        "success_rate": 0.78,
        "typical_duration": "45-90 minutes"
      }
    ]
  },
  "metadata": {
    "basic_metadata": {
      "name": "Usage",
      "difficulty": "Easy",
      "os": "Linux Ubuntu 22.04",
      "platform": "HackTheBox",
      "release_date": "2024-04-13",
      "author": "rajHere",
      "estimated_time": "30-45 minutes"
    },
    "intelligence_metadata": {
      "attack_complexity": "low",
      "skill_level_required": "beginner",
      "primary_attack_vectors": [
        "sql_injection",
        "file_upload",
        "wildcard_injection"
      ],
      "key_vulnerabilities": [
        "blind_sqli",
        "laravel_admin_upload",
        "7zip_wildcard_abuse"
      ],
      "environment_type": "web_application_server",
      "real_world_relevance": "high",
      "learning_value": [
        "blind_sqli_techniques",
        "file_upload_bypass",
        "wildcard_exploitation"
      ],
      "prerequisite_knowledge": [
        "basic_web_exploitation",
        "sql_injection_fundamentals",
        "file_upload_concepts"
      ]
    },
    "categorization": {
      "primary_category": "web_exploitation",
      "subcategories": [
        "sql_injection",
        "file_upload",
        "privilege_escalation"
      ],
      "attack_types": [
        "initial_access",
        "credential_access",
        "privilege_escalation"
      ],
      "defensive_lessons": [
        "input_validation",
        "file_upload_restrictions",
        "avoid_wildcards_in_commands"
      ]
    },
    "similarity_markers": {
      "similar_boxes": [
        "Inject",
        "Shoppy",
        "Validation"
      ],
      "similarity_reasons": [
        "sql_injection_entry",
        "web_application_focus",
        "file_upload_vulnerabilities"
      ],
      "unique_aspects": [
        "laravel_admin_framework",
        "7zip_wildcard_exploitation",
        "monit_configuration"
      ],
      "difficulty_factors": [
        "straightforward_sqli",
        "common_upload_bypass",
        "well_known_wildcard_issue"
      ]
    }
  },
  "extraction_metadata": {
    "parse_date": "2025-07-04T22:35:15.677436",
    "original_file": "0xdf_writeups/Htb Usage.md",
    "content_length": 28106,
    "extraction_version": "2.0-claude",
    "model_used": "claude-sonnet-4-20250514"
  },
  "intelligence_confidence": 1.0,
  "quality_breakdown": {
    "scenario_uniqueness": 1.0,
    "success_logic_clarity": 1.0,
    "applicability_completeness": 1.0,
    "decision_tree_depth": 1.0,
    "technique_actionability": 1.0
  }
}