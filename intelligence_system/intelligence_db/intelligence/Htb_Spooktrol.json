{
  "writeup_id": "Htb_Spooktrol",
  "scenario_fingerprint": {
    "scenario_name": "linux_malware_c2_server_exploitation",
    "primary_services": [
      "ssh",
      "http"
    ],
    "port_signature": "22+80+2222",
    "service_combination": "ssh+uvicorn_api+ssh",
    "os_family": "linux",
    "environment_type": "containerized_c2_infrastructure",
    "entry_vector": "api_vulnerability_exploitation",
    "privilege_path": "directory_traversal_to_container_escape",
    "attack_complexity": "hard",
    "estimated_time": "120-180 minutes",
    "scenario_confidence": 0.92,
    "distinguishing_factors": [
      "dual_ssh_ports_indicating_containers",
      "uvicorn_python_api_server",
      "c2_server_functionality",
      "file_upload_endpoints",
      "json_api_responses"
    ],
    "environmental_clues": [
      "robots_txt_with_file_management",
      "poll_endpoint_for_tasking",
      "result_endpoint_crashes_server",
      "malware_implant_references",
      "containerized_architecture"
    ],
    "similar_scenarios": [
      "malware_c2_pentesting",
      "containerized_api_exploitation"
    ],
    "unique_aspects": [
      "hackthebox_uhc_championship_box",
      "directory_traversal_in_file_upload",
      "c2_database_manipulation",
      "authorized_keys_overwrite_technique"
    ]
  },
  "success_patterns": {
    "success_factors": [
      {
        "technique": "C2_Server_Exploitation",
        "success_reason": "Malware C2 servers historically contain implementation bugs and weak security controls",
        "prerequisite_indicators": [
          "uvicorn_server_detected",
          "json_api_responses",
          "c2_like_endpoints_present",
          "robots_txt_reveals_paths"
        ],
        "recognition_patterns": [
          "API endpoints like /poll, /result, /file_upload",
          "Binary implant downloads via /file_management",
          "Auth tokens in JSON responses",
          "FastAPI/uvicorn stack indicators"
        ],
        "failure_modes": [
          "proper_input_validation",
          "secure_file_handling",
          "authentication_required",
          "no_directory_traversal"
        ],
        "environmental_factors": [
          "custom_c2_implementation",
          "development_focused_security",
          "container_based_deployment"
        ],
        "success_probability": 0.75,
        "typical_timeframe": "30-60 minutes"
      },
      {
        "technique": "Directory_Traversal_File_Upload",
        "success_reason": "File upload endpoint lacks path sanitization allowing traversal to overwrite authorized_keys",
        "prerequisite_indicators": [
          "file_upload_endpoint_exists",
          "put_method_accepted",
          "ssh_service_available",
          "container_environment"
        ],
        "recognition_patterns": [
          "PUT requests to /file_upload/ accepted",
          "Field validation errors reveal structure",
          "No path sanitization in responses",
          "SSH on multiple ports suggests containers"
        ],
        "failure_modes": [
          "path_sanitization_implemented",
          "chroot_jail_restrictions",
          "file_permissions_enforced",
          "upload_directory_restricted"
        ],
        "environmental_factors": [
          "containerized_application",
          "root_ssh_access_enabled",
          "weak_file_validation"
        ],
        "success_probability": 0.82,
        "typical_timeframe": "15-30 minutes"
      },
      {
        "technique": "C2_Database_Task_Injection",
        "success_reason": "C2 database allows direct task manipulation to control other agents",
        "prerequisite_indicators": [
          "c2_server_access_gained",
          "database_access_available",
          "multiple_agents_present",
          "task_system_exposed"
        ],
        "recognition_patterns": [
          "Task polling endpoints (/poll)",
          "Agent management functionality",
          "Database contains agent tasks",
          "Task injection possible"
        ],
        "failure_modes": [
          "database_access_restricted",
          "task_validation_implemented",
          "agent_authentication_required",
          "no_other_agents_available"
        ],
        "environmental_factors": [
          "multi_agent_c2_setup",
          "database_permissions_weak",
          "task_system_unprotected"
        ],
        "success_probability": 0.68,
        "typical_timeframe": "20-45 minutes"
      }
    ],
    "critical_discoveries": [
      {
        "discovery": "robots.txt reveals /file_management/?file=implant",
        "discovery_method": "nmap robots.txt detection",
        "why_critical": "Exposes C2 implant binary and file management endpoint",
        "how_to_recognize": [
          "robots.txt disallow entries",
          "file parameter in URL structure",
          "binary implant downloads"
        ],
        "follow_up_actions": [
          "download_implant_binary",
          "reverse_engineer_implant",
          "test_file_parameter_traversal",
          "analyze_c2_communication"
        ]
      },
      {
        "discovery": "PUT file upload with directory traversal",
        "discovery_method": "API endpoint enumeration and testing",
        "why_critical": "Allows writing to arbitrary filesystem locations including SSH keys",
        "how_to_recognize": [
          "PUT method accepted on file_upload",
          "Field validation errors show structure",
          "No path sanitization implemented"
        ],
        "follow_up_actions": [
          "test_directory_traversal_paths",
          "upload_ssh_public_key",
          "target_root_authorized_keys",
          "establish_ssh_access"
        ]
      },
      {
        "discovery": "Multiple SSH ports (22, 2222)",
        "discovery_method": "nmap port scan",
        "why_critical": "Indicates container environment with multiple targets",
        "how_to_recognize": [
          "same SSH version on multiple ports",
          "container-like port allocation",
          "identical service fingerprints"
        ],
        "follow_up_actions": [
          "identify_container_vs_host",
          "test_ssh_access_both_ports",
          "enumerate_container_escape_paths"
        ]
      }
    ],
    "escalation_keys": [
      {
        "privilege_level": "container_root",
        "escalation_method": "SSH_key_overwrite_via_traversal",
        "why_possible": "Directory traversal in file upload allows overwriting root's authorized_keys",
        "recognition_signs": [
          "file_upload_accepts_put_requests",
          "no_path_sanitization_errors",
          "ssh_root_login_enabled",
          "container_filesystem_writable"
        ],
        "exploitation_path": "File Upload → Directory Traversal → SSH Key Overwrite → Root SSH"
      },
      {
        "privilege_level": "host_system",
        "escalation_method": "C2_database_agent_hijacking",
        "why_possible": "C2 database manipulation allows tasking other agents on different systems",
        "recognition_signs": [
          "c2_database_access_available",
          "multiple_agents_in_database",
          "task_injection_possible",
          "agent_communication_active"
        ],
        "exploitation_path": "C2 Access → Database Manipulation → Agent Tasking → Host System Shell"
      }
    ]
  },
  "decision_tree": {
    "decision_points": [
      {
        "step": 1,
        "situation": "Found ports 22, 80, 2222 open on Linux host",
        "decision": "Investigate HTTP service first due to API nature and robots.txt disclosure",
        "reasoning": "Multiple SSH ports suggest containers, HTTP shows API endpoints with potential vulnerabilities",
        "confidence": 0.9,
        "alternatives": [
          {
            "option": "ssh_enumeration",
            "when": "if web exploitation fails"
          },
          {
            "option": "port_2222_investigation",
            "when": "if standard SSH fails"
          }
        ],
        "success_indicators": [
          "api_endpoints_discovered",
          "file_management_accessible",
          "implant_binary_downloaded"
        ],
        "next_decision": "analyze_api_endpoints"
      },
      {
        "step": 2,
        "situation": "Discovered C2 API with file_management endpoint and implant binary",
        "decision": "Download and reverse engineer implant to understand C2 protocol",
        "reasoning": "Understanding C2 communication protocol essential for exploitation",
        "confidence": 0.95,
        "prerequisites": [
          "file_management_endpoint_accessible",
          "implant_binary_available"
        ],
        "success_indicators": [
          "c2_protocol_understood",
          "communication_flow_mapped"
        ],
        "failure_fallbacks": [
          "directory_traversal_testing",
          "api_fuzzing"
        ]
      },
      {
        "step": 3,
        "situation": "Implant communicates with C2 using HTTP API with auth tokens",
        "decision": "Analyze C2 communication to identify hijacking opportunities",
        "reasoning": "C2 protocols often have weak authentication or message tampering vulnerabilities",
        "confidence": 0.85,
        "prerequisites": [
          "implant_running",
          "traffic_captured",
          "api_endpoints_mapped"
        ],
        "success_indicators": [
          "auth_mechanism_identified",
          "message_format_understood"
        ],
        "failure_fallbacks": [
          "file_upload_exploitation",
          "directory_traversal"
        ]
      }
    ],
    "branching_logic": {
      "if_c2_protocol_understood": {
        "action": "attempt_message_hijacking",
        "tools": [
          "wireshark",
          "burp_suite",
          "custom_scripts"
        ],
        "next_phase": "privilege_escalation_via_c2"
      },
      "if_file_management_vulnerable": {
        "action": "exploit_directory_traversal",
        "alternatives": [
          "path_traversal",
          "file_upload_abuse"
        ],
        "decision_criteria": "based_on_parameter_injection_success"
      },
      "if_container_access_gained": {
        "action": "container_escape_enumeration",
        "purpose": "escalate_to_host_system",
        "tools": [
          "linpeas",
          "docker_escape_techniques"
        ]
      }
    },
    "optimization_rules": [
      {
        "rule": "always_analyze_c2_implants_when_found",
        "reasoning": "c2_servers_historically_contain_implementation_bugs",
        "applicability": "malware_c2_environments"
      },
      {
        "rule": "test_directory_traversal_on_file_parameters",
        "reasoning": "file_management_endpoints_commonly_vulnerable",
        "applicability": "api_endpoints_with_file_parameters"
      },
      {
        "rule": "investigate_multiple_ssh_ports_for_containers",
        "reasoning": "indicates_containerized_environment_with_escape_potential",
        "applicability": "multiple_ssh_services_detected"
      }
    ]
  },
  "applicability_rules": {
    "technique_rules": [
      {
        "technique": "Directory Traversal via File Upload",
        "mitre_id": "T1083",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          8080,
          8443
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "file_upload_endpoint_exists",
          "web_application_present",
          "insufficient_path_validation"
        ],
        "success_indicators": [
          "file_upload_accepts_requests",
          "path_traversal_sequences_not_filtered",
          "writable_directories_accessible"
        ],
        "incompatible_with": [
          "strict_path_validation",
          "chroot_jail_enabled",
          "upload_directory_restrictions"
        ],
        "confidence_boosters": [
          "custom_c2_framework",
          "uvicorn_python_server",
          "robots_txt_reveals_endpoints"
        ],
        "typical_success_rate": 0.75,
        "estimated_time": "10-30 minutes"
      },
      {
        "technique": "API Endpoint Enumeration",
        "mitre_id": "T1083",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          8080,
          8443
        ],
        "os_requirements": [
          "any"
        ],
        "environmental_prerequisites": [
          "json_api_responses",
          "rest_api_present",
          "directory_brute_force_possible"
        ],
        "success_indicators": [
          "json_content_type_responses",
          "api_endpoints_discovered",
          "method_not_allowed_responses"
        ],
        "incompatible_with": [
          "rate_limiting_strict",
          "waf_protection_enabled",
          "authentication_required_all_endpoints"
        ],
        "confidence_boosters": [
          "uvicorn_server_header",
          "fastapi_framework_indicators",
          "robots_txt_endpoint_disclosure"
        ],
        "typical_success_rate": 0.9,
        "estimated_time": "5-15 minutes"
      },
      {
        "technique": "SSH Key Injection",
        "mitre_id": "T1098.004",
        "required_services": [
          "ssh"
        ],
        "required_ports": [
          22,
          2222
        ],
        "os_requirements": [
          "linux"
        ],
        "environmental_prerequisites": [
          "ssh_service_running",
          "authorized_keys_writable",
          "file_write_capability_exists"
        ],
        "success_indicators": [
          "ssh_service_accessible",
          "authorized_keys_path_writable",
          "public_key_injection_successful"
        ],
        "incompatible_with": [
          "authorized_keys_immutable",
          "ssh_key_authentication_disabled",
          "file_system_read_only"
        ],
        "confidence_boosters": [
          "multiple_ssh_ports_open",
          "container_environment_detected",
          "directory_traversal_available"
        ],
        "typical_success_rate": 0.85,
        "estimated_time": "5-10 minutes"
      }
    ],
    "environmental_detectors": {
      "python_web_api": {
        "port_indicators": [
          80,
          443,
          8080,
          8443
        ],
        "service_indicators": [
          "uvicorn",
          "fastapi",
          "flask"
        ],
        "banner_indicators": [
          "uvicorn",
          "application/json"
        ],
        "confidence_threshold": 0.85
      },
      "c2_framework": {
        "port_indicators": [
          80,
          443
        ],
        "service_indicators": [
          "http",
          "https"
        ],
        "technology_indicators": [
          "poll",
          "result",
          "auth",
          "task"
        ],
        "confidence_threshold": 0.8
      },
      "container_environment": {
        "port_indicators": [
          22,
          2222
        ],
        "service_indicators": [
          "ssh"
        ],
        "banner_indicators": [
          "OpenSSH",
          "multiple_ssh_ports"
        ],
        "confidence_threshold": 0.75
      }
    },
    "attack_prioritization": {
      "high_priority": [
        {
          "attack": "api_endpoint_enumeration",
          "when": "json_api_detected",
          "reason": "reveals_attack_surface_quickly"
        },
        {
          "attack": "robots_txt_analysis",
          "when": "web_service_detected",
          "reason": "often_reveals_hidden_endpoints"
        }
      ],
      "medium_priority": [
        {
          "attack": "directory_traversal_file_upload",
          "when": "file_upload_endpoint_found",
          "reason": "high_impact_if_successful"
        },
        {
          "attack": "ssh_key_injection",
          "when": "multiple_ssh_ports_detected",
          "reason": "indicates_container_environment"
        }
      ]
    }
  },
  "technique_intelligence": {
    "techniques": [
      {
        "name": "C2 Server Exploitation",
        "mitre_id": "T1071.001",
        "category": "command_and_control",
        "phase": "exploitation",
        "tools_used": [
          {
            "name": "curl",
            "command_template": "curl -X {method} http://{target}/{endpoint}",
            "actual_command": "curl -X PUT http://10.10.11.123/file_upload/",
            "output_pattern": "{\"detail\":[{\"loc\":[\"body\",\"file\"],\"msg\":\"field required\",\"type\":\"value_error.missing\"}]}",
            "effectiveness_rating": 4,
            "reliability": 0.9
          },
          {
            "name": "feroxbuster",
            "command_template": "feroxbuster -u http://{target}",
            "actual_command": "feroxbuster -u http://10.10.11.123",
            "success_factors": [
              "api_endpoints_discovered",
              "file_management_found"
            ],
            "effectiveness_rating": 5
          }
        ],
        "prerequisites": [
          "c2_server_accessible",
          "uvicorn_fastapi_stack",
          "file_upload_functionality"
        ],
        "success_indicators": [
          "api_endpoints_enumerated",
          "file_upload_mechanism_identified",
          "directory_traversal_possible"
        ],
        "common_failures": [
          "authentication_required",
          "input_validation_blocks_traversal",
          "insufficient_permissions"
        ],
        "follow_up_techniques": [
          "directory_traversal_exploitation",
          "malware_analysis",
          "container_escape"
        ],
        "time_investment": "15-45 minutes",
        "skill_level": "intermediate"
      },
      {
        "name": "Directory Traversal via File Management",
        "mitre_id": "T1083",
        "category": "discovery",
        "phase": "exploitation",
        "tools_used": [
          {
            "name": "curl",
            "command_template": "curl 'http://{target}/file_management/?file={filename}'",
            "actual_command": "curl 'http://10.10.11.123/file_management/?file=implant'",
            "output_pattern": "Binary ELF data returned",
            "effectiveness_rating": 5,
            "reliability": 0.95
          },
          {
            "name": "wget",
            "command_template": "wget -O {output_file} 'http://{target}/file_management/?file={filename}'",
            "actual_command": "wget -O implant 'http://10.10.11.123/file_management/?file=implant'",
            "success_factors": [
              "file_parameter_vulnerable",
              "no_path_sanitization"
            ],
            "effectiveness_rating": 5
          }
        ],
        "prerequisites": [
          "file_management_endpoint_accessible",
          "file_parameter_accepts_input",
          "insufficient_path_validation"
        ],
        "success_indicators": [
          "arbitrary_files_readable",
          "implant_binary_downloaded",
          "directory_traversal_confirmed"
        ],
        "common_failures": [
          "path_sanitization_implemented",
          "file_permissions_restrict_access",
          "chroot_jail_prevents_traversal"
        ],
        "follow_up_techniques": [
          "reverse_engineering",
          "authorized_keys_overwrite",
          "container_privilege_escalation"
        ],
        "time_investment": "10-30 minutes",
        "skill_level": "beginner"
      },
      {
        "name": "Malware Reverse Engineering",
        "mitre_id": "T1140",
        "category": "defense_evasion",
        "phase": "analysis",
        "tools_used": [
          {
            "name": "ghidra",
            "command_template": "ghidra {binary_file}",
            "actual_command": "ghidra implant",
            "output_pattern": "Decompiled C++ code with decrypt_xor function",
            "effectiveness_rating": 5,
            "reliability": 0.98
          },
          {
            "name": "python_xor_decode",
            "command_template": "''.join([chr(x^{key}) for x in {encrypted_bytes}])",
            "actual_command": "''.join([chr(x^0x51) for x in flag_enc])",
            "success_factors": [
              "xor_key_identified",
              "encrypted_data_extracted"
            ],
            "effectiveness_rating": 4
          }
        ],
        "prerequisites": [
          "binary_sample_obtained",
          "reverse_engineering_tools_available",
          "c2_communication_protocol_understood"
        ],
        "success_indicators": [
          "encryption_algorithm_identified",
          "xor_key_discovered",
          "c2_protocol_reverse_engineered",
          "flag_decrypted_successfully"
        ],
        "common_failures": [
          "complex_obfuscation_techniques",
          "anti_debugging_measures",
          "encrypted_strings_not_found"
        ],
        "follow_up_techniques": [
          "c2_protocol_manipulation",
          "task_injection",
          "implant_communication_hijacking"
        ],
        "time_investment": "30-90 minutes",
        "skill_level": "advanced"
      },
      {
        "name": "C2 Protocol Analysis",
        "mitre_id": "T1071.001",
        "category": "command_and_control",
        "phase": "analysis",
        "tools_used": [
          {
            "name": "wireshark",
            "command_template": "wireshark -i {interface}",
            "actual_command": "wireshark -i eth0",
            "output_pattern": "HTTP requests to /poll, /result endpoints",
            "effectiveness_rating": 5,
            "reliability": 0.95
          },
          {
            "name": "implant_execution",
            "command_template": "./implant",
            "actual_command": "./implant",
            "success_factors": [
              "dns_resolution_configured",
              "c2_server_responsive"
            ],
            "effectiveness_rating": 4
          }
        ],
        "prerequisites": [
          "implant_binary_executable",
          "network_connectivity_to_c2",
          "dns_resolution_for_c2_domain"
        ],
        "success_indicators": [
          "c2_communication_observed",
          "auth_token_mechanism_identified",
          "task_polling_behavior_understood",
          "result_submission_protocol_mapped"
        ],
        "common_failures": [
          "network_connectivity_issues",
          "dns_resolution_failures",
          "c2_server_authentication_required"
        ],
        "follow_up_techniques": [
          "task_hijacking",
          "c2_database_manipulation",
          "agent_impersonation"
        ],
        "time_investment": "20-60 minutes",
        "skill_level": "intermediate"
      }
    ],
    "tool_effectiveness": [
      {
        "tool": "feroxbuster",
        "use_case": "api_endpoint_discovery",
        "effectiveness_rating": 5,
        "reliability": 0.95,
        "learning_curve": "low",
        "essential_for": [
          "web_application_enumeration"
        ],
        "alternatives": [
          "gobuster",
          "dirbuster",
          "ffuf"
        ],
        "best_practices": [
          "use_api_focused_wordlists",
          "check_different_http_methods",
          "follow_redirects_manually"
        ]
      },
      {
        "tool": "ghidra",
        "use_case": "malware_reverse_engineering",
        "effectiveness_rating": 5,
        "reliability": 0.98,
        "learning_curve": "high",
        "essential_for": [
          "binary_analysis",
          "malware_research"
        ],
        "alternatives": [
          "ida_pro",
          "radare2",
          "x64dbg"
        ],
        "best_practices": [
          "analyze_strings_first",
          "identify_crypto_functions",
          "map_network_communication_flows"
        ]
      },
      {
        "tool": "wireshark",
        "use_case": "c2_protocol_analysis",
        "effectiveness_rating": 5,
        "reliability": 0.98,
        "learning_curve": "medium",
        "essential_for": [
          "network_protocol_analysis"
        ],
        "alternatives": [
          "tcpdump",
          "burp_suite",
          "netcat"
        ],
        "best_practices": [
          "filter_by_target_ip",
          "analyze_http_request_patterns",
          "identify_authentication_mechanisms"
        ]
      }
    ],
    "command_sequences": [
      {
        "sequence_name": "c2_server_enumeration_to_implant_analysis",
        "steps": [
          {
            "step": 1,
            "command": "nmap -p- --min-rate 10000 10.10.11.123",
            "purpose": "Discover open ports",
            "expected_output": "Ports 22, 80, 2222 open"
          },
          {
            "step": 2,
            "command": "feroxbuster -u http://10.10.11.123",
            "purpose": "Enumerate API endpoints",
            "expected_output": "/poll, /result, /file_upload, /file_management discovered"
          },
          {
            "step": 3,
            "command": "curl http://10.10.11.123/robots.txt",
            "purpose": "Check for disclosed paths",
            "expected_output": "Disallow: /file_management/?file=implant"
          },
          {
            "step": 4,
            "command": "wget -O implant 'http://10.10.11.123/file_management/?file=implant'",
            "purpose": "Download implant binary",
            "expected_output": "3.45M ELF binary downloaded"
          },
          {
            "step": 5,
            "command": "echo '10.10.11.123 spooktrol.htb' >> /etc/hosts",
            "purpose": "Configure DNS resolution",
            "expected_output": "DNS entry added"
          },
          {
            "step": 6,
            "command": "./implant",
            "purpose": "Execute implant to observe C2 communication",
            "expected_output": "JSON task polling every few seconds"
          }
        ],
        "success_rate": 0.92,
        "typical_duration": "20-45 minutes"
      },
      {
        "sequence_name": "implant_reverse_engineering",
        "steps": [
          {
            "step": 1,
            "command": "file implant",
            "purpose": "Identify binary type",
            "expected_output": "ELF 64-bit LSB executable"
          },
          {
            "step": 2,
            "command": "ghidra implant",
            "purpose": "Load binary into disassembler",
            "expected_output": "Ghidra project created"
          },
          {
            "step": 3,
            "command": "# Analyze main() -> Spooky() -> decrypt_xor()",
            "purpose": "Identify key functions",
            "expected_output": "XOR decryption with key 0x51 found"
          },
          {
            "step": 4,
            "command": "python3 -c \"flag_enc = b'\\x04\\x19\\x12\\x2a\\x03\\x62\\x27\\x62\\x3f\\x36\\x0e\\x1c\\x30\\x22\\x25\\x34\\x23\\x2c'; print(''.join([chr(x^0x51) for x in flag_enc]))\"",
            "purpose": "Decrypt embedded flag",
            "expected_output": "UHC{R3v3ng_Master}"
          }
        ],
        "success_rate": 0.85,
        "typical_duration": "45-90 minutes"
      }
    ]
  },
  "metadata": {
    "basic_metadata": {
      "name": "Spooktrol",
      "difficulty": "Hard",
      "os": "Linux",
      "platform": "HackTheBox",
      "release_date": "2021-10-26",
      "author": "IppSec",
      "estimated_time": "3-4 hours"
    },
    "intelligence_metadata": {
      "attack_complexity": "high",
      "skill_level_required": "advanced",
      "primary_attack_vectors": [
        "c2_exploitation",
        "directory_traversal",
        "database_manipulation"
      ],
      "key_vulnerabilities": [
        "directory_traversal",
        "c2_server_bugs",
        "file_upload_bypass"
      ],
      "environment_type": "malware_c2_infrastructure",
      "real_world_relevance": "very_high",
      "learning_value": [
        "c2_server_exploitation",
        "malware_analysis",
        "container_escape",
        "ssh_key_injection"
      ],
      "prerequisite_knowledge": [
        "web_exploitation",
        "linux_containers",
        "malware_c2_concepts",
        "database_manipulation"
      ]
    },
    "categorization": {
      "primary_category": "malware_analysis",
      "subcategories": [
        "c2_exploitation",
        "container_security",
        "web_exploitation"
      ],
      "attack_types": [
        "directory_traversal",
        "file_upload",
        "privilege_escalation",
        "lateral_movement"
      ],
      "defensive_lessons": [
        "c2_server_hardening",
        "input_validation",
        "container_security",
        "file_path_sanitization"
      ]
    },
    "similarity_markers": {
      "similar_boxes": [
        "Ophiuchi",
        "Bucket",
        "Tentacle"
      ],
      "similarity_reasons": [
        "container_exploitation",
        "directory_traversal",
        "complex_attack_chains"
      ],
      "unique_aspects": [
        "c2_server_focus",
        "malware_infrastructure",
        "uhc_championship_box",
        "ipsec_creation"
      ],
      "difficulty_factors": [
        "complex_attack_chain",
        "malware_analysis_required",
        "multiple_containers",
        "advanced_exploitation_techniques"
      ]
    }
  },
  "extraction_metadata": {
    "parse_date": "2025-07-04T18:46:21.459703",
    "original_file": "0xdf_writeups/Htb Spooktrol.md",
    "content_length": 38270,
    "extraction_version": "2.0-claude",
    "model_used": "claude-sonnet-4-20250514"
  },
  "intelligence_confidence": 1.0,
  "quality_breakdown": {
    "scenario_uniqueness": 1.0,
    "success_logic_clarity": 1.0,
    "applicability_completeness": 1.0,
    "decision_tree_depth": 1.0,
    "technique_actionability": 1.0
  }
}