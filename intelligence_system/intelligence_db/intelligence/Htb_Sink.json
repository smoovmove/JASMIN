{
  "writeup_id": "Htb_Sink",
  "scenario_fingerprint": {
    "scenario_name": "linux_http_request_smuggling_aws_localstack",
    "primary_services": [
      "http",
      "ssh",
      "gitea",
      "gunicorn",
      "haproxy"
    ],
    "port_signature": "22+3000+5000",
    "service_combination": "ssh+gitea+http_proxy_backend",
    "os_family": "linux",
    "environment_type": "web_application_infrastructure",
    "entry_vector": "http_request_smuggling",
    "privilege_path": "request_smuggling_to_aws_service_exploitation",
    "attack_complexity": "insane",
    "estimated_time": "4-6 hours",
    "scenario_confidence": 0.92,
    "distinguishing_factors": [
      "haproxy_frontend_gunicorn_backend",
      "request_smuggling_vulnerability",
      "aws_localstack_services",
      "secrets_manager_exploitation"
    ],
    "environmental_clues": [
      "via_haproxy_header",
      "gunicorn_backend_server",
      "gitea_self_hosted_git",
      "x_served_by_header_present"
    ],
    "similar_scenarios": [
      "proxy_backend_misconfigurations",
      "aws_service_exploitation"
    ],
    "unique_aspects": [
      "http_request_smuggling_attack",
      "localstack_aws_simulation",
      "key_management_service_abuse",
      "multi_user_smuggling_support"
    ]
  },
  "success_patterns": {
    "success_factors": [
      {
        "technique": "HTTP Request Smuggling",
        "success_reason": "HAProxy 1.9.10 and Gunicorn 20.0.0 parse Transfer-Encoding headers differently",
        "prerequisite_indicators": [
          "haproxy_frontend_detected",
          "gunicorn_backend_detected",
          "vulnerable_version_combination",
          "transfer_encoding_support"
        ],
        "recognition_patterns": [
          "Via: haproxy header present",
          "Server: gunicorn header in responses",
          "Version mismatch (HAProxy 1.9.10 + Gunicorn 20.0.0)",
          "CVE-2019-18277 vulnerability window"
        ],
        "failure_modes": [
          "gunicorn_version_20.0.1_or_higher",
          "single_server_architecture",
          "proper_header_validation",
          "load_balancer_blocks_malformed_requests"
        ],
        "environmental_factors": [
          "multi_tier_web_architecture",
          "legacy_proxy_configurations",
          "insufficient_security_hardening",
          "default_header_processing"
        ],
        "success_probability": 0.92,
        "typical_timeframe": "30-60 minutes"
      },
      {
        "technique": "AWS LocalStack Exploitation",
        "success_reason": "LocalStack instance exposed with default configurations and accessible services",
        "prerequisite_indicators": [
          "aws_services_accessible",
          "localstack_environment_detected",
          "secrets_manager_available",
          "kms_service_accessible"
        ],
        "recognition_patterns": [
          "AWS service endpoints responding",
          "LocalStack specific responses",
          "Default AWS service configurations",
          "Accessible secrets without proper IAM"
        ],
        "failure_modes": [
          "proper_iam_policies_configured",
          "secrets_properly_encrypted",
          "network_segmentation_blocks_access",
          "aws_services_not_exposed"
        ],
        "environmental_factors": [
          "development_environment_setup",
          "default_localstack_configuration",
          "insufficient_access_controls",
          "exposed_internal_services"
        ],
        "success_probability": 0.85,
        "typical_timeframe": "20-45 minutes"
      }
    ],
    "critical_discoveries": [
      {
        "discovery": "HAProxy + Gunicorn version combination",
        "discovery_method": "HTTP header analysis and version fingerprinting",
        "why_critical": "Enables request smuggling attack leading to session hijacking",
        "how_to_recognize": [
          "Via: haproxy header in responses",
          "Server: gunicorn/20.0.0 header",
          "Multi-tier architecture indicators",
          "Transfer-Encoding header acceptance"
        ],
        "follow_up_actions": [
          "craft_smuggling_payload",
          "test_chunked_encoding_bypass",
          "attempt_session_hijacking",
          "enumerate_backend_services"
        ]
      },
      {
        "discovery": "AWS LocalStack development environment",
        "discovery_method": "Service enumeration after initial access",
        "why_critical": "Provides access to AWS services with potential secrets and keys",
        "how_to_recognize": [
          "AWS service endpoints responding",
          "LocalStack specific error messages",
          "Development environment indicators",
          "Accessible secrets manager"
        ],
        "follow_up_actions": [
          "enumerate_aws_services",
          "check_secrets_manager",
          "test_kms_access",
          "look_for_stored_credentials"
        ]
      }
    ],
    "escalation_keys": [
      {
        "privilege_level": "web_application_user",
        "escalation_method": "Request_Smuggling_to_Session_Hijack",
        "why_possible": "Frontend/backend parsing differences allow request manipulation",
        "recognition_signs": [
          "different_server_technologies",
          "vulnerable_version_combinations",
          "transfer_encoding_support",
          "session_based_authentication"
        ],
        "exploitation_path": "Malformed Transfer-Encoding → Request Smuggling → Session Hijacking → Admin Access"
      },
      {
        "privilege_level": "application_access",
        "escalation_method": "AWS_Services_to_Credential_Access",
        "why_possible": "LocalStack services accessible with default configurations",
        "recognition_signs": [
          "aws_services_responding",
          "development_environment_setup",
          "accessible_secrets_manager",
          "default_service_configurations"
        ],
        "exploitation_path": "Service Discovery → Secrets Manager Access → Credential Extraction → System Access"
      }
    ]
  },
  "decision_tree": {
    "decision_points": [
      {
        "step": 1,
        "situation": "Found ports 22,3000,5000 open on Linux host",
        "decision": "Enumerate web services first, SSH last resort",
        "reasoning": "Multiple web services suggest complex application stack with higher attack surface",
        "confidence": 0.9,
        "alternatives": [
          {
            "option": "ssh_bruteforce",
            "when": "if web services fail"
          },
          {
            "option": "version_specific_exploits",
            "when": "if vulnerable versions found"
          }
        ],
        "success_indicators": [
          "web_applications_accessible",
          "technology_stack_identified",
          "user_accounts_discoverable"
        ],
        "next_decision": "analyze_application_architecture"
      },
      {
        "step": 2,
        "situation": "Identified HAProxy 1.9.10 + Gunicorn 20.0.0 stack",
        "decision": "Check for HTTP request smuggling vulnerability",
        "reasoning": "Known CVE-2019-18277 affects this exact version combination",
        "confidence": 0.95,
        "prerequisites": [
          "haproxy_version_1.9.x",
          "gunicorn_version_20.0.0"
        ],
        "success_indicators": [
          "transfer_encoding_header_processed_differently"
        ],
        "failure_fallbacks": [
          "application_logic_bugs",
          "credential_attacks",
          "file_upload_attacks"
        ]
      },
      {
        "step": 3,
        "situation": "Request smuggling confirmed working",
        "decision": "Target admin session hijacking via smuggled requests",
        "reasoning": "Can capture other users' requests including authentication cookies",
        "confidence": 0.85,
        "prerequisites": [
          "smuggling_payload_crafted",
          "user_account_created"
        ],
        "success_indicators": [
          "admin_cookies_captured",
          "privileged_session_obtained"
        ],
        "failure_fallbacks": [
          "target_application_data",
          "enumerate_internal_services"
        ]
      }
    ],
    "branching_logic": {
      "if_haproxy_gunicorn_detected": {
        "action": "test_request_smuggling_cve_2019_18277",
        "payload_structure": "transfer_encoding_with_0x0b_character",
        "next_phase": "craft_smuggling_attack"
      },
      "if_smuggling_succeeds": {
        "action": "capture_admin_sessions",
        "method": "incomplete_post_request_to_capture_next_user_data",
        "tools": [
          "burp_repeater",
          "custom_http_client"
        ]
      },
      "if_admin_access_obtained": {
        "action": "enumerate_internal_infrastructure",
        "targets": [
          "aws_services",
          "internal_applications",
          "configuration_files"
        ],
        "tools": [
          "aws_cli",
          "internal_port_scanning"
        ]
      }
    },
    "optimization_rules": [
      {
        "rule": "always_check_proxy_backend_version_mismatch",
        "reasoning": "different_http_parsing_leads_to_smuggling_opportunities",
        "applicability": "multi_tier_web_architectures"
      },
      {
        "rule": "prioritize_request_smuggling_when_haproxy_detected",
        "reasoning": "high_success_rate_for_session_hijacking_and_privilege_escalation",
        "applicability": "haproxy_with_backend_application_servers"
      },
      {
        "rule": "use_smuggling_for_internal_service_discovery",
        "reasoning": "can_access_internal_endpoints_not_directly_reachable",
        "applicability": "successful_request_smuggling_established"
      }
    ]
  },
  "applicability_rules": {
    "technique_rules": [
      {
        "technique": "HTTP Request Smuggling",
        "mitre_id": "T1190",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          3000,
          5000,
          8080,
          8443
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "reverse_proxy_present",
          "backend_server_present",
          "different_http_parsing_behavior"
        ],
        "success_indicators": [
          "via_header_present",
          "multiple_server_headers",
          "load_balancer_detected",
          "proxy_software_identified"
        ],
        "incompatible_with": [
          "single_server_architecture",
          "strict_http_parsing",
          "modern_proxy_configurations"
        ],
        "confidence_boosters": [
          "haproxy_detected",
          "gunicorn_backend",
          "nginx_frontend",
          "version_discrepancies"
        ],
        "typical_success_rate": 0.65,
        "estimated_time": "30-60 minutes"
      },
      {
        "technique": "Git Repository Enumeration",
        "mitre_id": "T1213",
        "required_services": [
          "http",
          "https",
          "git"
        ],
        "required_ports": [
          80,
          443,
          3000,
          9418
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "git_service_exposed",
          "repositories_accessible",
          "web_interface_available"
        ],
        "success_indicators": [
          "gitea_detected",
          "gitlab_detected",
          "github_enterprise_detected",
          "public_repositories_found"
        ],
        "incompatible_with": [
          "private_repositories_only",
          "authentication_required",
          "network_restrictions"
        ],
        "confidence_boosters": [
          "explore_tab_accessible",
          "user_enumeration_possible",
          "organization_listing_available"
        ],
        "typical_success_rate": 0.78,
        "estimated_time": "10-20 minutes"
      },
      {
        "technique": "AWS Service Enumeration",
        "mitre_id": "T1580",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          4566,
          4572
        ],
        "os_requirements": [
          "linux"
        ],
        "environmental_prerequisites": [
          "aws_services_exposed",
          "localstack_present",
          "cloud_metadata_accessible"
        ],
        "success_indicators": [
          "localstack_detected",
          "aws_api_endpoints_found",
          "metadata_service_accessible",
          "iam_roles_enumerable"
        ],
        "incompatible_with": [
          "proper_iam_restrictions",
          "network_segmentation",
          "metadata_service_disabled"
        ],
        "confidence_boosters": [
          "development_environment",
          "default_configurations",
          "exposed_management_ports"
        ],
        "typical_success_rate": 0.72,
        "estimated_time": "15-30 minutes"
      }
    ],
    "environmental_detectors": {
      "reverse_proxy_architecture": {
        "port_indicators": [
          80,
          443,
          3000,
          5000,
          8080,
          8443
        ],
        "service_indicators": [
          "http",
          "https",
          "gunicorn",
          "haproxy"
        ],
        "banner_indicators": [
          "Via: haproxy",
          "Server: gunicorn",
          "X-Served-By"
        ],
        "confidence_threshold": 0.85
      },
      "git_services": {
        "port_indicators": [
          3000,
          8080,
          9418
        ],
        "service_indicators": [
          "http",
          "git"
        ],
        "banner_indicators": [
          "Gitea",
          "GitLab",
          "GitHub"
        ],
        "confidence_threshold": 0.9
      },
      "aws_development": {
        "port_indicators": [
          4566,
          4572,
          8000
        ],
        "service_indicators": [
          "localstack",
          "aws"
        ],
        "banner_indicators": [
          "LocalStack",
          "AWS",
          "boto"
        ],
        "confidence_threshold": 0.8
      }
    },
    "attack_prioritization": {
      "high_priority": [
        {
          "attack": "http_request_smuggling",
          "when": "reverse_proxy_detected",
          "reason": "can_bypass_security_controls_access_backend"
        },
        {
          "attack": "git_repository_enumeration",
          "when": "git_service_detected",
          "reason": "often_contains_credentials_and_source_code"
        }
      ],
      "medium_priority": [
        {
          "attack": "aws_service_enumeration",
          "when": "cloud_services_detected",
          "reason": "may_expose_secrets_and_escalation_paths"
        },
        {
          "attack": "web_application_testing",
          "when": "web_service_detected",
          "reason": "standard_attack_surface_analysis"
        }
      ]
    }
  },
  "technique_intelligence": {
    "techniques": [
      {
        "name": "HTTP Request Smuggling",
        "mitre_id": "T1190",
        "category": "initial_access",
        "phase": "initial_access",
        "tools_used": [
          {
            "name": "Python Socket",
            "command_template": "python3 smuggle.py",
            "actual_command": "python3 -c \"import socket; s=socket.socket(); s.connect(('10.10.10.225', 5000)); s.send(request)\"",
            "output_pattern": "Captured request in notes section",
            "effectiveness_rating": 5,
            "reliability": 0.85
          }
        ],
        "prerequisites": [
          "haproxy_frontend_server",
          "gunicorn_backend_vulnerable_version",
          "transfer_encoding_header_support",
          "content_length_header_support"
        ],
        "success_indicators": [
          "malformed_request_accepted",
          "next_user_request_captured",
          "session_cookies_leaked",
          "request_headers_visible"
        ],
        "common_failures": [
          "request_rejected_by_frontend",
          "backend_handles_headers_consistently",
          "timing_issues_with_request_sequence",
          "content_length_miscalculation"
        ],
        "follow_up_techniques": [
          "session_hijacking",
          "jwt_token_analysis",
          "privilege_escalation"
        ],
        "time_investment": "30-60 minutes",
        "skill_level": "advanced"
      },
      {
        "name": "JWT Token Hijacking",
        "mitre_id": "T1539",
        "category": "credential_access",
        "phase": "credential_access",
        "tools_used": [
          {
            "name": "jwt.io",
            "command_template": "Decode JWT at jwt.io",
            "actual_command": "Manual JWT decoding via web interface",
            "output_pattern": "Decoded JWT payload with user information",
            "effectiveness_rating": 5,
            "reliability": 1.0
          }
        ],
        "prerequisites": [
          "captured_jwt_token",
          "valid_session_cookie_format"
        ],
        "success_indicators": [
          "jwt_successfully_decoded",
          "user_information_extracted",
          "session_provides_elevated_access"
        ],
        "common_failures": [
          "jwt_signature_validation",
          "token_expiration",
          "insufficient_privileges"
        ],
        "follow_up_techniques": [
          "session_replay_attacks",
          "privilege_escalation",
          "lateral_movement"
        ],
        "time_investment": "5-15 minutes",
        "skill_level": "beginner"
      }
    ],
    "tool_effectiveness": [
      {
        "tool": "Python Socket Programming",
        "use_case": "http_request_smuggling",
        "effectiveness_rating": 5,
        "reliability": 0.85,
        "learning_curve": "medium",
        "essential_for": [
          "request_smuggling_attacks"
        ],
        "alternatives": [
          "burp_suite_extensions",
          "custom_http_clients"
        ],
        "best_practices": [
          "calculate_content_length_accurately",
          "use_proper_crlf_line_endings",
          "include_timing_delays_for_reliability",
          "validate_request_format_before_sending"
        ]
      },
      {
        "tool": "HAProxy",
        "use_case": "vulnerable_frontend_identification",
        "effectiveness_rating": 4,
        "reliability": 0.9,
        "learning_curve": "low",
        "essential_for": [
          "request_smuggling_reconnaissance"
        ],
        "alternatives": [
          "nginx",
          "apache_httpd"
        ],
        "best_practices": [
          "check_version_via_malformed_requests",
          "identify_backend_server_technology",
          "test_transfer_encoding_handling"
        ]
      }
    ],
    "command_sequences": [
      {
        "sequence_name": "haproxy_gunicorn_request_smuggling",
        "steps": [
          {
            "step": 1,
            "command": "nmap -p 5000 -sV 10.10.10.225",
            "purpose": "Identify web server technology stack",
            "expected_output": "Gunicorn 20.0.0 with HAProxy via header"
          },
          {
            "step": 2,
            "command": "Create malformed HTTP request with Transfer-Encoding: \\x0bchunked",
            "purpose": "Exploit CVE-2019-18277 header parsing difference",
            "expected_output": "Request accepted by frontend"
          },
          {
            "step": 3,
            "command": "python3 smuggle_script.py",
            "purpose": "Send smuggled request to capture next user request",
            "expected_output": "Next user request captured in notes"
          },
          {
            "step": 4,
            "command": "Check /notes endpoint for captured data",
            "purpose": "Retrieve smuggled request contents",
            "expected_output": "JWT session token and request headers"
          }
        ],
        "success_rate": 0.85,
        "typical_duration": "45-90 minutes"
      }
    ]
  },
  "metadata": {
    "basic_metadata": {
      "name": "Sink",
      "difficulty": "Insane",
      "os": "Linux",
      "platform": "HackTheBox",
      "release_date": "2021-01-30",
      "author": "MrR3boot",
      "estimated_time": "4-8 hours"
    },
    "intelligence_metadata": {
      "attack_complexity": "high",
      "skill_level_required": "expert",
      "primary_attack_vectors": [
        "http_request_smuggling",
        "aws_service_exploitation"
      ],
      "key_vulnerabilities": [
        "request_smuggling",
        "aws_secrets_manager",
        "aws_kms_misconfiguration"
      ],
      "environment_type": "cloud_infrastructure_simulation",
      "real_world_relevance": "very_high",
      "learning_value": [
        "request_smuggling_techniques",
        "aws_exploitation",
        "cloud_security"
      ],
      "prerequisite_knowledge": [
        "advanced_http_protocols",
        "aws_services",
        "cloud_architecture"
      ]
    },
    "categorization": {
      "primary_category": "web_exploitation",
      "subcategories": [
        "request_smuggling",
        "cloud_exploitation",
        "aws_services"
      ],
      "attack_types": [
        "protocol_manipulation",
        "cloud_service_abuse",
        "privilege_escalation"
      ],
      "defensive_lessons": [
        "proper_proxy_configuration",
        "aws_security_hardening",
        "request_validation"
      ]
    },
    "similarity_markers": {
      "similar_boxes": [
        "Bucket",
        "Schooled",
        "Ophiuchi"
      ],
      "similarity_reasons": [
        "advanced_web_exploitation",
        "cloud_services",
        "complex_attack_chains"
      ],
      "unique_aspects": [
        "request_smuggling_focus",
        "localstack_exploitation",
        "multi_user_smuggling"
      ],
      "difficulty_factors": [
        "advanced_protocol_knowledge",
        "aws_service_complexity",
        "timing_sensitive_attacks"
      ]
    }
  },
  "extraction_metadata": {
    "parse_date": "2025-07-05T00:14:28.933904",
    "original_file": "0xdf_writeups/Htb Sink.md",
    "content_length": 50129,
    "extraction_version": "2.0-claude",
    "model_used": "claude-sonnet-4-20250514"
  },
  "intelligence_confidence": 0.9166666666666667,
  "quality_breakdown": {
    "scenario_uniqueness": 1.0,
    "success_logic_clarity": 0.6666666666666666,
    "applicability_completeness": 1.0,
    "decision_tree_depth": 1.0,
    "technique_actionability": 1.0
  }
}