{
  "writeup_id": "Htb_Unicode",
  "scenario_fingerprint": {
    "scenario_name": "linux_web_unicode_jwt_bypass",
    "primary_services": [
      "http",
      "ssh"
    ],
    "port_signature": "22+80",
    "service_combination": "ssh+nginx",
    "os_family": "linux",
    "environment_type": "web_application",
    "entry_vector": "unicode_normalization_bypass",
    "privilege_path": "web_to_user_to_root",
    "attack_complexity": "medium",
    "estimated_time": "90-120 minutes",
    "scenario_confidence": 0.88,
    "distinguishing_factors": [
      "unicode_character_normalization",
      "jwt_rsa_key_confusion",
      "open_redirect_abuse",
      "directory_traversal_via_unicode"
    ],
    "environmental_clues": [
      "flask_powered_application",
      "jwt_with_jku_parameter",
      "nginx_ubuntu_stack",
      "pdf_upload_functionality",
      "hugo_static_generator"
    ],
    "similar_scenarios": [
      "web_jwt_bypass",
      "unicode_filter_bypass"
    ],
    "unique_aspects": [
      "unicode_normalization_exploitation",
      "jwt_jku_parameter_manipulation",
      "pyinstaller_parameter_injection"
    ]
  },
  "success_patterns": {
    "success_factors": [
      {
        "technique": "Unicode_Directory_Traversal",
        "success_reason": "Web application failed to properly normalize unicode characters before path validation",
        "prerequisite_indicators": [
          "web_application_accepts_unicode_input",
          "path_traversal_filters_present",
          "unicode_normalization_occurs_after_validation"
        ],
        "recognition_patterns": [
          "unicode characters in URLs bypass filters",
          "normalization converts to directory traversal sequences",
          "filter bypass through character encoding"
        ],
        "failure_modes": [
          "proper_unicode_normalization_before_validation",
          "comprehensive_path_traversal_protection",
          "input_sanitization_after_normalization"
        ],
        "environmental_factors": [
          "python_flask_application",
          "unicode_processing_libraries",
          "insufficient_input_validation"
        ],
        "success_probability": 0.73,
        "typical_timeframe": "15-30 minutes"
      },
      {
        "technique": "JWT_JKU_Manipulation",
        "success_reason": "Application trusted external JKU URLs without proper validation",
        "prerequisite_indicators": [
          "jwt_uses_rs256_algorithm",
          "jku_claim_present_in_token",
          "external_url_validation_insufficient"
        ],
        "recognition_patterns": [
          "RS256 algorithm in JWT header",
          "jku field pointing to external URL",
          "public key fetched from user-controlled location"
        ],
        "failure_modes": [
          "jku_url_whitelist_enforced",
          "symmetric_algorithm_used_instead",
          "proper_key_validation_implemented"
        ],
        "environmental_factors": [
          "microservices_architecture",
          "external_key_validation_design",
          "insufficient_jku_url_restrictions"
        ],
        "success_probability": 0.82,
        "typical_timeframe": "10-20 minutes"
      },
      {
        "technique": "Open_Redirect_for_JKU_Bypass",
        "success_reason": "Open redirect functionality allowed bypassing JKU URL restrictions",
        "prerequisite_indicators": [
          "open_redirect_endpoint_exists",
          "jku_validation_checks_domain_only",
          "redirect_parameter_controllable"
        ],
        "recognition_patterns": [
          "redirect endpoint with url parameter",
          "domain validation but not full URL",
          "302 redirect to external location"
        ],
        "failure_modes": [
          "redirect_url_whitelist_enforced",
          "full_url_path_validation",
          "no_open_redirect_functionality"
        ],
        "environmental_factors": [
          "legitimate_redirect_functionality",
          "insufficient_redirect_validation",
          "domain_based_security_controls"
        ],
        "success_probability": 0.89,
        "typical_timeframe": "5-15 minutes"
      },
      {
        "technique": "Parameter_Injection_PyInstaller",
        "success_reason": "PyInstaller binary accepted unsanitized parameters leading to command injection",
        "prerequisite_indicators": [
          "pyinstaller_binary_present",
          "user_input_passed_to_binary",
          "insufficient_parameter_sanitization"
        ],
        "recognition_patterns": [
          "PyInstaller packed executables",
          "command line parameter injection",
          "python script execution context"
        ],
        "failure_modes": [
          "proper_parameter_sanitization",
          "restricted_execution_environment",
          "input_validation_before_execution"
        ],
        "environmental_factors": [
          "linux_execution_environment",
          "python_application_deployment",
          "insufficient_privilege_separation"
        ],
        "success_probability": 0.76,
        "typical_timeframe": "20-40 minutes"
      }
    ],
    "critical_discoveries": [
      {
        "discovery": "JWT with external JKU claim",
        "discovery_method": "JWT token analysis in browser cookies",
        "why_critical": "Enabled complete authentication bypass via key substitution",
        "how_to_recognize": [
          "RS256 algorithm in JWT header",
          "jku field pointing to external domain",
          "public key fetching mechanism"
        ],
        "follow_up_actions": [
          "generate_rsa_keypair",
          "host_malicious_jwks_json",
          "craft_admin_jwt_token"
        ]
      },
      {
        "discovery": "Open redirect endpoint",
        "discovery_method": "Manual site exploration and parameter testing",
        "why_critical": "Bypassed JKU domain validation restrictions",
        "how_to_recognize": [
          "redirect parameter in URL",
          "302 response to external domain",
          "insufficient URL validation"
        ],
        "follow_up_actions": [
          "test_redirect_to_attacker_server",
          "combine_with_jwt_attack",
          "bypass_domain_restrictions"
        ]
      },
      {
        "discovery": "Unicode normalization vulnerability",
        "discovery_method": "Input fuzzing with unicode characters",
        "why_critical": "Enabled directory traversal and file access",
        "how_to_recognize": [
          "unicode characters bypass filters",
          "path normalization after validation",
          "directory traversal sequences created"
        ],
        "follow_up_actions": [
          "test_various_unicode_sequences",
          "attempt_file_system_access",
          "enumerate_application_structure"
        ]
      }
    ],
    "escalation_keys": [
      {
        "privilege_level": "authenticated_user",
        "escalation_method": "JWT_manipulation_to_admin",
        "why_possible": "External JKU validation allowed key substitution attack",
        "recognition_signs": [
          "rs256_jwt_with_external_jku",
          "open_redirect_functionality",
          "insufficient_jku_validation"
        ],
        "exploitation_path": "Host malicious JWKS → Use open redirect → Craft admin JWT → Admin access"
      },
      {
        "privilege_level": "web_application_user",
        "escalation_method": "Parameter_injection_to_system",
        "why_possible": "PyInstaller binary executed user input without sanitization",
        "recognition_signs": [
          "pyinstaller_binaries_present",
          "user_controlled_parameters",
          "command_execution_context"
        ],
        "exploitation_path": "Parameter injection → Command execution → System shell access"
      }
    ]
  },
  "decision_tree": {
    "decision_points": [
      {
        "step": 1,
        "situation": "Found ports 22,80 open on Linux host with nginx and Flask application",
        "decision": "Focus on web application enumeration and authentication bypass",
        "reasoning": "Limited attack surface with only SSH and HTTP, Flask apps often have JWT/session vulnerabilities",
        "confidence": 0.85,
        "alternatives": [
          {
            "option": "ssh_bruteforce",
            "when": "if web attacks fail"
          },
          {
            "option": "service_version_exploits",
            "when": "if known CVEs exist"
          }
        ],
        "success_indicators": [
          "jwt_token_discovered",
          "upload_functionality_found",
          "authentication_mechanism_identified"
        ],
        "next_decision": "analyze_jwt_structure"
      },
      {
        "step": 2,
        "situation": "JWT token found with RS256 algorithm and jku claim pointing to external URL",
        "decision": "Attempt JWT key confusion attack using open redirect",
        "reasoning": "RS256 with jku allows specifying public key location, open redirect can bypass domain restrictions",
        "confidence": 0.9,
        "prerequisites": [
          "jwt_with_jku_found",
          "open_redirect_discovered"
        ],
        "success_indicators": [
          "server_requests_malicious_jwks",
          "forged_jwt_accepted"
        ],
        "failure_fallbacks": [
          "directory_traversal",
          "file_upload_attacks",
          "parameter_injection"
        ]
      },
      {
        "step": 3,
        "situation": "Successfully bypassed JWT validation and gained admin access",
        "decision": "Exploit file upload or directory traversal for code execution",
        "reasoning": "Admin access typically unlocks additional functionality like file operations",
        "confidence": 0.8,
        "prerequisites": [
          "admin_jwt_working",
          "file_upload_accessible"
        ],
        "success_indicators": [
          "arbitrary_file_read",
          "code_execution_achieved"
        ],
        "failure_fallbacks": [
          "enumerate_admin_functions",
          "look_for_ssti",
          "check_for_deserialization"
        ]
      }
    ],
    "branching_logic": {
      "if_jwt_rs256_with_jku": {
        "action": "attempt_key_confusion_attack",
        "tools": [
          "python_pyjwt",
          "openssl",
          "custom_jwks_server"
        ],
        "next_phase": "forge_admin_jwt"
      },
      "if_open_redirect_found": {
        "action": "combine_with_jwt_attack",
        "purpose": "bypass_domain_restrictions_for_jku",
        "tools": [
          "burp_suite",
          "curl",
          "python_requests"
        ]
      },
      "if_admin_access_gained": {
        "action": "enumerate_privileged_functions",
        "alternatives": [
          "file_upload_abuse",
          "directory_traversal",
          "template_injection"
        ],
        "decision_criteria": "based_on_available_admin_functionality"
      },
      "if_file_upload_available": {
        "action": "attempt_malicious_file_upload",
        "tools": [
          "reverse_shells",
          "webshells",
          "path_traversal_payloads"
        ],
        "next_phase": "establish_foothold"
      }
    },
    "optimization_rules": [
      {
        "rule": "always_check_jwt_algorithm_and_claims",
        "reasoning": "rs256_with_jku_highly_exploitable_if_domain_restrictions_weak",
        "applicability": "jwt_authentication_systems"
      },
      {
        "rule": "combine_open_redirect_with_jwt_attacks",
        "reasoning": "bypasses_same_origin_restrictions_for_key_fetching",
        "applicability": "jwt_with_external_key_references"
      },
      {
        "rule": "prioritize_unicode_normalization_attacks_on_file_paths",
        "reasoning": "can_bypass_path_traversal_filters_effectively",
        "applicability": "file_upload_or_path_handling_functions"
      },
      {
        "rule": "test_parameter_injection_in_compiled_binaries",
        "reasoning": "pyinstaller_and_similar_tools_often_vulnerable_to_command_injection",
        "applicability": "privilege_escalation_phase_with_custom_binaries"
      }
    ]
  },
  "applicability_rules": {
    "technique_rules": [
      {
        "technique": "Unicode Normalization Directory Traversal",
        "mitre_id": "T1083",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          8080,
          8443
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "web_application_with_file_handling",
          "unicode_normalization_enabled",
          "path_filtering_present",
          "file_upload_functionality"
        ],
        "success_indicators": [
          "unicode_characters_accepted_in_paths",
          "normalization_bypasses_filters",
          "directory_traversal_successful"
        ],
        "incompatible_with": [
          "strict_input_validation",
          "unicode_normalization_disabled",
          "chroot_jail_enabled"
        ],
        "confidence_boosters": [
          "flask_framework_detected",
          "file_upload_forms_present",
          "path_based_filtering"
        ],
        "typical_success_rate": 0.65,
        "estimated_time": "10-30 minutes"
      },
      {
        "technique": "JWT Algorithm Confusion",
        "mitre_id": "T1550.001",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          8080,
          8443
        ],
        "os_requirements": [
          "any"
        ],
        "environmental_prerequisites": [
          "jwt_authentication_present",
          "rsa_signed_tokens",
          "jku_parameter_present",
          "open_redirect_available"
        ],
        "success_indicators": [
          "jwt_tokens_in_cookies",
          "jku_header_modifiable",
          "external_jwks_accepted",
          "algorithm_switching_possible"
        ],
        "incompatible_with": [
          "algorithm_verification_strict",
          "jku_whitelist_enforced",
          "token_signature_pinned"
        ],
        "confidence_boosters": [
          "rs256_algorithm_used",
          "external_jwks_url_in_header",
          "open_redirect_endpoint_exists"
        ],
        "typical_success_rate": 0.78,
        "estimated_time": "15-45 minutes"
      },
      {
        "technique": "Parameter Injection in PyInstaller Binary",
        "mitre_id": "T1055",
        "required_services": [
          "ssh",
          "local_access"
        ],
        "required_ports": [
          22
        ],
        "os_requirements": [
          "linux"
        ],
        "environmental_prerequisites": [
          "pyinstaller_binary_present",
          "user_controlled_parameters",
          "insufficient_input_sanitization",
          "elevated_execution_context"
        ],
        "success_indicators": [
          "pyinstaller_binary_identified",
          "parameter_injection_successful",
          "command_execution_achieved"
        ],
        "incompatible_with": [
          "strict_parameter_validation",
          "sandboxed_execution",
          "input_sanitization_complete"
        ],
        "confidence_boosters": [
          "python_application_environment",
          "custom_binary_executables",
          "parameter_based_functionality"
        ],
        "typical_success_rate": 0.72,
        "estimated_time": "20-60 minutes"
      }
    ],
    "environmental_detectors": {
      "flask_web_application": {
        "port_indicators": [
          80,
          443,
          5000,
          8080
        ],
        "service_indicators": [
          "http",
          "https"
        ],
        "banner_indicators": [
          "Flask",
          "Werkzeug",
          "Python"
        ],
        "technology_indicators": [
          "flask",
          "python",
          "jinja2"
        ],
        "confidence_threshold": 0.85
      },
      "jwt_authentication": {
        "port_indicators": [
          80,
          443,
          8080,
          8443
        ],
        "service_indicators": [
          "http",
          "https"
        ],
        "header_indicators": [
          "Authorization: Bearer",
          "auth cookie"
        ],
        "token_indicators": [
          "eyJ",
          "jwt",
          "jku parameter"
        ],
        "confidence_threshold": 0.9
      },
      "file_upload_functionality": {
        "port_indicators": [
          80,
          443,
          8080,
          8443
        ],
        "service_indicators": [
          "http",
          "https"
        ],
        "form_indicators": [
          "file input",
          "multipart/form-data",
          "upload"
        ],
        "confidence_threshold": 0.88
      },
      "linux_ssh_access": {
        "port_indicators": [
          22
        ],
        "service_indicators": [
          "ssh",
          "openssh"
        ],
        "banner_indicators": [
          "OpenSSH",
          "Ubuntu",
          "Linux"
        ],
        "confidence_threshold": 0.95
      }
    },
    "attack_prioritization": {
      "high_priority": [
        {
          "attack": "jwt_algorithm_confusion",
          "when": "jwt_with_jku_detected",
          "reason": "high_success_rate_with_open_redirect"
        },
        {
          "attack": "unicode_directory_traversal",
          "when": "flask_file_upload_detected",
          "reason": "common_flask_vulnerability_pattern"
        }
      ],
      "medium_priority": [
        {
          "attack": "parameter_injection_pyinstaller",
          "when": "ssh_access_and_python_environment",
          "reason": "requires_initial_access_but_reliable"
        },
        {
          "attack": "directory_bruteforce",
          "when": "web_service_detected",
          "reason": "reveals_additional_attack_surface"
        }
      ],
      "low_priority": [
        {
          "attack": "ssh_bruteforce",
          "when": "ssh_service_detected",
          "reason": "time_consuming_low_success_rate"
        }
      ]
    }
  },
  "technique_intelligence": {
    "techniques": [
      {
        "name": "JWT Algorithm Confusion",
        "mitre_id": "T1550.001",
        "category": "credential_access",
        "phase": "initial_access",
        "tools_used": [
          {
            "name": "jwt.io",
            "command_template": "Manual JWT manipulation via web interface",
            "actual_command": "Used jwt.io to decode and modify JWT tokens",
            "output_pattern": "Decoded JWT header, payload, and signature sections",
            "effectiveness_rating": 5,
            "reliability": 0.98
          },
          {
            "name": "base64",
            "command_template": "echo '{json_payload}' | base64 -w0",
            "actual_command": "echo -n '{\"typ\":\"JWT\",\"alg\":\"RS256\",\"jku\":\"http://hackmedia.htb/static/../redirect/?url=10.10.14.6/jwks.json\"}' | base64 -w0",
            "output_pattern": "Base64 encoded JWT header",
            "effectiveness_rating": 4,
            "reliability": 0.95
          },
          {
            "name": "openssl",
            "command_template": "openssl genrsa -out {private_key_file}",
            "actual_command": "openssl genrsa -out jwtRSA256-private.pem",
            "output_pattern": "RSA private key generated",
            "effectiveness_rating": 5,
            "reliability": 0.99
          }
        ],
        "prerequisites": [
          "jwt_token_accessible",
          "rs256_algorithm_used",
          "jku_parameter_trusted",
          "open_redirect_available"
        ],
        "success_indicators": [
          "server_requests_malicious_jwks_json",
          "forged_jwt_accepted",
          "elevated_privileges_obtained"
        ],
        "common_failures": [
          "jku_validation_blocks_external_hosts",
          "signature_validation_fails",
          "jwks_format_incorrect"
        ],
        "follow_up_techniques": [
          "privilege_escalation",
          "lateral_movement",
          "persistence_establishment"
        ],
        "time_investment": "30-60 minutes",
        "skill_level": "intermediate"
      },
      {
        "name": "Open Redirect Abuse",
        "mitre_id": "T1566.002",
        "category": "initial_access",
        "phase": "initial_access",
        "tools_used": [
          {
            "name": "curl",
            "command_template": "curl -i 'http://{target}/redirect/?url={malicious_url}'",
            "actual_command": "curl -i 'http://hackmedia.htb/redirect/?url=10.10.14.6/jwks.json'",
            "output_pattern": "302 redirect to attacker-controlled URL",
            "effectiveness_rating": 4,
            "reliability": 0.9
          }
        ],
        "prerequisites": [
          "open_redirect_endpoint_exists",
          "url_parameter_not_validated",
          "application_trusts_same_domain_redirects"
        ],
        "success_indicators": [
          "redirect_to_external_url_successful",
          "application_follows_redirect",
          "malicious_content_served"
        ],
        "common_failures": [
          "url_validation_blocks_external_domains",
          "redirect_whitelist_implemented",
          "application_ignores_redirects"
        ],
        "follow_up_techniques": [
          "jwt_key_confusion",
          "phishing_attacks",
          "ssrf_exploitation"
        ],
        "time_investment": "10-20 minutes",
        "skill_level": "beginner"
      },
      {
        "name": "Directory Traversal via Unicode Normalization",
        "mitre_id": "T1083",
        "category": "discovery",
        "phase": "initial_access",
        "tools_used": [
          {
            "name": "manual_testing",
            "command_template": "Test unicode characters that normalize to '../'",
            "actual_command": "http://hackmedia.htb/static/../redirect/?url=10.10.14.6/jwks.json",
            "output_pattern": "Path traversal successful",
            "effectiveness_rating": 3,
            "reliability": 0.7
          }
        ],
        "prerequisites": [
          "unicode_normalization_enabled",
          "path_validation_bypassable",
          "directory_traversal_possible"
        ],
        "success_indicators": [
          "path_traversal_successful",
          "access_to_restricted_directories",
          "file_disclosure_achieved"
        ],
        "common_failures": [
          "unicode_normalization_disabled",
          "proper_path_validation",
          "chroot_jail_restrictions"
        ],
        "follow_up_techniques": [
          "file_disclosure",
          "configuration_file_access",
          "source_code_review"
        ],
        "time_investment": "15-30 minutes",
        "skill_level": "intermediate"
      }
    ],
    "tool_effectiveness": [
      {
        "tool": "jwt.io",
        "use_case": "jwt_token_analysis_and_manipulation",
        "effectiveness_rating": 5,
        "reliability": 0.98,
        "learning_curve": "low",
        "essential_for": [
          "jwt_based_authentication_attacks"
        ],
        "alternatives": [
          "pyjwt",
          "manual_base64_decoding"
        ],
        "best_practices": [
          "always_verify_algorithm_used",
          "check_for_key_confusion_vulnerabilities",
          "validate_signature_verification_process"
        ]
      },
      {
        "tool": "feroxbuster",
        "use_case": "web_directory_enumeration",
        "effectiveness_rating": 4,
        "reliability": 0.85,
        "learning_curve": "low",
        "essential_for": [
          "web_application_reconnaissance"
        ],
        "alternatives": [
          "gobuster",
          "dirbuster",
          "ffuf"
        ],
        "best_practices": [
          "handle_wildcard_responses_properly",
          "use_appropriate_wordlists",
          "configure_proper_threading_for_target"
        ]
      },
      {
        "tool": "openssl",
        "use_case": "rsa_key_generation_and_manipulation",
        "effectiveness_rating": 5,
        "reliability": 0.99,
        "learning_curve": "medium",
        "essential_for": [
          "cryptographic_attacks",
          "certificate_manipulation"
        ],
        "alternatives": [
          "ssh-keygen",
          "python_cryptography_library"
        ],
        "best_practices": [
          "use_appropriate_key_sizes",
          "secure_private_key_storage",
          "validate_key_format_requirements"
        ]
      }
    ],
    "command_sequences": [
      {
        "sequence_name": "jwt_jku_exploitation_via_open_redirect",
        "steps": [
          {
            "step": 1,
            "command": "echo -n '{\"typ\":\"JWT\",\"alg\":\"RS256\",\"jku\":\"http://hackmedia.htb/static/../redirect/?url=10.10.14.6/jwks.json\"}' | base64 -w0",
            "purpose": "Create malicious JWT header with redirected jku",
            "expected_output": "Base64 encoded JWT header"
          },
          {
            "step": 2,
            "command": "openssl genrsa -out jwtRSA256-private.pem",
            "purpose": "Generate RSA private key for JWT signing",
            "expected_output": "RSA private key file created"
          },
          {
            "step": 3,
            "command": "openssl rsa -in jwtRSA256-private.pem -pubout -outform PEM -out jwtRSA256-public.pem",
            "purpose": "Extract public key from private key",
            "expected_output": "RSA public key file created"
          },
          {
            "step": 4,
            "command": "python3 -m http.server 80",
            "purpose": "Host malicious jwks.json file",
            "expected_output": "HTTP server serving jwks.json"
          }
        ],
        "success_rate": 0.75,
        "typical_duration": "20-40 minutes"
      },
      {
        "sequence_name": "web_reconnaissance_and_enumeration",
        "steps": [
          {
            "step": 1,
            "command": "nmap -p- --min-rate 10000 -oA scans/nmap-alltcp 10.10.11.126",
            "purpose": "Discover open ports",
            "expected_output": "List of open TCP ports"
          },
          {
            "step": 2,
            "command": "nmap -p 22,80 -sCV -oA scans/nmap-tcpscripts 10.10.11.126",
            "purpose": "Service enumeration on discovered ports",
            "expected_output": "Service versions and basic scripts"
          },
          {
            "step": 3,
            "command": "feroxbuster -u http://10.10.11.126",
            "purpose": "Directory and file discovery",
            "expected_output": "Web directories and files"
          }
        ],
        "success_rate": 0.95,
        "typical_duration": "10-20 minutes"
      }
    ]
  },
  "metadata": {
    "basic_metadata": {
      "name": "Unicode",
      "difficulty": "Medium",
      "os": "Linux Ubuntu 20.04",
      "platform": "HackTheBox",
      "release_date": "2021-11-27",
      "author": "webspl01t3r",
      "estimated_time": "2-3 hours"
    },
    "intelligence_metadata": {
      "attack_complexity": "medium",
      "skill_level_required": "intermediate",
      "primary_attack_vectors": [
        "unicode_normalization",
        "directory_traversal",
        "jwt_manipulation"
      ],
      "key_vulnerabilities": [
        "unicode_bypass",
        "open_redirect",
        "parameter_injection"
      ],
      "environment_type": "web_application_linux",
      "real_world_relevance": "high",
      "learning_value": [
        "unicode_attacks",
        "jwt_security",
        "web_filtering_bypass"
      ],
      "prerequisite_knowledge": [
        "web_application_security",
        "jwt_concepts",
        "unicode_normalization"
      ]
    },
    "categorization": {
      "primary_category": "web_application",
      "subcategories": [
        "unicode_attacks",
        "jwt_manipulation",
        "parameter_injection"
      ],
      "attack_types": [
        "input_validation_bypass",
        "authentication_bypass",
        "privilege_escalation"
      ],
      "defensive_lessons": [
        "proper_unicode_handling",
        "jwt_key_management",
        "input_sanitization"
      ]
    },
    "similarity_markers": {
      "similar_boxes": [
        "Forge",
        "Bucket",
        "Timing"
      ],
      "similarity_reasons": [
        "web_application_focus",
        "jwt_attacks",
        "input_validation_issues"
      ],
      "unique_aspects": [
        "unicode_normalization_abuse",
        "pyinstaller_parameter_injection"
      ],
      "difficulty_factors": [
        "complex_unicode_bypass",
        "jwt_key_confusion",
        "linux_privilege_escalation"
      ]
    }
  },
  "extraction_metadata": {
    "parse_date": "2025-07-05T02:15:23.703156",
    "original_file": "0xdf_writeups/Htb Unicode.md",
    "content_length": 41755,
    "extraction_version": "2.0-claude",
    "model_used": "claude-sonnet-4-20250514"
  },
  "intelligence_confidence": 1.0,
  "quality_breakdown": {
    "scenario_uniqueness": 1.0,
    "success_logic_clarity": 1.0,
    "applicability_completeness": 1.0,
    "decision_tree_depth": 1.0,
    "technique_actionability": 1.0
  }
}