{
  "writeup_id": "Htb_Shared",
  "scenario_fingerprint": {
    "scenario_name": "linux_web_sqli_to_ssh_pivot",
    "primary_services": [
      "http",
      "https",
      "ssh"
    ],
    "port_signature": "22+80+443",
    "service_combination": "ssh+nginx+ssl",
    "os_family": "linux",
    "environment_type": "web_application",
    "entry_vector": "sql_injection_cookie",
    "privilege_path": "sqli_to_ssh_to_ipython_to_redis",
    "attack_complexity": "medium",
    "estimated_time": "90-120 minutes",
    "scenario_confidence": 0.88,
    "distinguishing_factors": [
      "cookie_based_sql_injection",
      "custom_cart_parameter",
      "ipython_code_execution",
      "redis_exploitation"
    ],
    "environmental_clues": [
      "nginx_redirects_to_domain",
      "wildcard_ssl_certificate",
      "php_shopping_cart",
      "subdomain_checkout_functionality"
    ],
    "similar_scenarios": [
      "shoppy_htb_easy",
      "bagel_htb_medium"
    ],
    "unique_aspects": [
      "checkout_subdomain",
      "ipython_vulnerability",
      "redis_binary_analysis"
    ]
  },
  "success_patterns": {
    "success_factors": [
      {
        "technique": "SQL Injection via Cookie",
        "success_reason": "custom_cart cookie value directly inserted into SQL query without sanitization",
        "prerequisite_indicators": [
          "application_uses_cookies_for_data_storage",
          "database_backend_present",
          "user_controlled_input_in_queries"
        ],
        "recognition_patterns": [
          "JSON data in cookie values",
          "product IDs or database keys in cookies",
          "different responses when cookie modified",
          "error responses with single quotes"
        ],
        "failure_modes": [
          "parameterized_queries_used",
          "input_sanitization_present",
          "cookie_encryption_implemented",
          "proper_error_handling"
        ],
        "environmental_factors": [
          "php_application_with_direct_sql",
          "cookie_based_cart_implementation",
          "insufficient_input_validation"
        ],
        "success_probability": 0.75,
        "typical_timeframe": "10-30 minutes"
      },
      {
        "technique": "iPython Code Execution",
        "success_reason": "iPython service running with code execution vulnerability allowing arbitrary Python commands",
        "prerequisite_indicators": [
          "ipython_service_accessible",
          "development_environment_present",
          "insufficient_access_controls"
        ],
        "recognition_patterns": [
          "iPython processes in process list",
          "development tools on production systems",
          "jupyter/ipython ports or services",
          "python development environments"
        ],
        "failure_modes": [
          "ipython_properly_secured",
          "no_code_execution_endpoints",
          "proper_sandboxing_implemented"
        ],
        "environmental_factors": [
          "development_tools_in_production",
          "insufficient_service_hardening",
          "default_configurations"
        ],
        "success_probability": 0.85,
        "typical_timeframe": "15-45 minutes"
      },
      {
        "technique": "Redis Exploitation",
        "success_reason": "Redis service accessible with credentials found in binary reverse engineering",
        "prerequisite_indicators": [
          "redis_service_running",
          "credentials_in_binaries",
          "insufficient_redis_security"
        ],
        "recognition_patterns": [
          "redis processes running",
          "redis default ports (6379)",
          "credentials in configuration files",
          "hardcoded credentials in binaries"
        ],
        "failure_modes": [
          "redis_auth_properly_configured",
          "no_code_execution_modules",
          "proper_network_segmentation"
        ],
        "environmental_factors": [
          "default_redis_configuration",
          "credentials_in_source_code",
          "insufficient_network_controls"
        ],
        "success_probability": 0.8,
        "typical_timeframe": "30-60 minutes"
      }
    ],
    "critical_discoveries": [
      {
        "discovery": "SQL injection in custom_cart cookie",
        "discovery_method": "Manual cookie manipulation and SQL injection testing",
        "why_critical": "Enabled database access and credential extraction",
        "how_to_recognize": [
          "JSON data structures in cookies",
          "database identifiers in client-side storage",
          "different application responses to modified cookies",
          "SQL error patterns with special characters"
        ],
        "follow_up_actions": [
          "enumerate_database_structure",
          "extract_user_credentials",
          "test_extracted_credentials",
          "escalate_via_ssh_access"
        ]
      },
      {
        "discovery": "Database credentials in SQL injection",
        "discovery_method": "UNION-based SQL injection enumeration",
        "why_critical": "Provided SSH access to compromise the system",
        "how_to_recognize": [
          "credential tables in database",
          "password hashes or plaintext passwords",
          "user account information",
          "reused credentials across services"
        ],
        "follow_up_actions": [
          "test_ssh_access",
          "enumerate_system_users",
          "check_privilege_escalation_paths"
        ]
      },
      {
        "discovery": "iPython vulnerability",
        "discovery_method": "Process enumeration and service identification",
        "why_critical": "Allowed lateral movement and privilege escalation",
        "how_to_recognize": [
          "development tools on production systems",
          "iPython/Jupyter processes running",
          "code execution endpoints available",
          "insufficient access controls"
        ],
        "follow_up_actions": [
          "exploit_code_execution",
          "establish_persistence",
          "enumerate_additional_services"
        ]
      }
    ],
    "escalation_keys": [
      {
        "privilege_level": "web_application",
        "escalation_method": "SQL_injection_to_SSH",
        "why_possible": "Database contained user credentials that were reused for SSH access",
        "recognition_signs": [
          "user_credential_tables_accessible",
          "password_reuse_across_services",
          "ssh_service_available",
          "weak_credential_policies"
        ],
        "exploitation_path": "SQL Injection → Database Enumeration → Credential Extraction → SSH Access"
      },
      {
        "privilege_level": "user_account",
        "escalation_method": "iPython_code_execution",
        "why_possible": "Development service with code execution running with elevated privileges",
        "recognition_signs": [
          "development_services_in_production",
          "ipython_processes_running",
          "code_execution_endpoints",
          "insufficient_service_isolation"
        ],
        "exploitation_path": "User Access → Service Enumeration → iPython Exploitation → Privilege Escalation"
      },
      {
        "privilege_level": "service_account",
        "escalation_method": "Redis_exploitation",
        "why_possible": "Redis service with hardcoded credentials and code execution capabilities",
        "recognition_signs": [
          "redis_service_running",
          "credentials_in_binaries",
          "redis_modules_available",
          "insufficient_redis_hardening"
        ],
        "exploitation_path": "Binary Analysis → Credential Extraction → Redis Access → Code Execution"
      }
    ]
  },
  "decision_tree": {
    "decision_points": [
      {
        "step": 1,
        "situation": "Found HTTP/HTTPS services on ports 80/443 with domain redirect",
        "decision": "Enumerate subdomains and analyze web application functionality",
        "reasoning": "Wildcard certificate indicates multiple subdomains, web app likely has attack surface",
        "confidence": 0.9,
        "alternatives": [
          {
            "option": "directory_bruteforce",
            "when": "if subdomain enum fails"
          },
          {
            "option": "ssh_bruteforce",
            "when": "if web attacks fail"
          }
        ],
        "success_indicators": [
          "subdomains_discovered",
          "application_functionality_mapped",
          "user_input_vectors_identified"
        ],
        "next_decision": "analyze_application_logic"
      },
      {
        "step": 2,
        "situation": "Found checkout subdomain with cart functionality using cookies",
        "decision": "Test cookie-based parameters for injection vulnerabilities",
        "reasoning": "Cookie values often passed directly to database queries without sanitization",
        "confidence": 0.85,
        "prerequisites": [
          "subdomain_enumerated",
          "cart_functionality_identified"
        ],
        "success_indicators": [
          "sql_error_responses",
          "data_modification_successful"
        ],
        "failure_fallbacks": [
          "parameter_pollution",
          "session_manipulation",
          "file_upload_testing"
        ]
      },
      {
        "step": 3,
        "situation": "SQL injection confirmed in custom_cart cookie parameter",
        "decision": "Perform union-based injection to extract database credentials",
        "reasoning": "Union injection allows direct data extraction from database tables",
        "confidence": 0.95,
        "prerequisites": [
          "sql_injection_confirmed",
          "column_count_determined"
        ],
        "success_indicators": [
          "database_data_extracted",
          "user_credentials_found"
        ],
        "failure_fallbacks": [
          "blind_sql_injection",
          "time_based_injection"
        ]
      }
    ],
    "branching_logic": {
      "if_sql_injection_succeeds": {
        "action": "extract_user_credentials_from_database",
        "tools": [
          "sqlmap",
          "manual_union_queries"
        ],
        "next_phase": "credential_validation_ssh"
      },
      "if_credentials_obtained": {
        "action": "attempt_ssh_authentication",
        "purpose": "gain_initial_system_access",
        "tools": [
          "ssh",
          "hydra"
        ]
      },
      "if_ssh_access_gained": {
        "action": "enumerate_system_for_privilege_escalation",
        "purpose": "find_paths_to_higher_privileges",
        "tools": [
          "linpeas",
          "pspy",
          "manual_enumeration"
        ]
      }
    },
    "optimization_rules": [
      {
        "rule": "always_test_cookie_parameters_for_injection",
        "reasoning": "cookies_often_overlooked_but_frequently_vulnerable",
        "applicability": "web_applications_with_session_management"
      },
      {
        "rule": "prioritize_subdomain_enumeration_with_wildcard_certificates",
        "reasoning": "wildcard_certs_indicate_multiple_attack_surfaces",
        "applicability": "https_services_with_wildcard_certificates"
      },
      {
        "rule": "test_json_formatted_cookie_values_for_sql_injection",
        "reasoning": "json_keys_often_used_directly_in_database_queries",
        "applicability": "applications_using_json_in_cookies"
      }
    ]
  },
  "applicability_rules": {
    "technique_rules": [
      {
        "technique": "SQL Injection via Cookie",
        "mitre_id": "T1190",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "web_application_present",
          "cookie_based_session_management",
          "database_backend",
          "user_input_in_cookies"
        ],
        "success_indicators": [
          "cookie_values_reflected_in_responses",
          "database_errors_in_responses",
          "time_delays_in_responses",
          "modified_application_behavior"
        ],
        "incompatible_with": [
          "stateless_applications",
          "cookie_encryption_enabled",
          "input_sanitization_present"
        ],
        "confidence_boosters": [
          "json_formatted_cookies",
          "product_id_references_in_cookies",
          "shopping_cart_functionality",
          "php_application_stack"
        ],
        "typical_success_rate": 0.75,
        "estimated_time": "10-30 minutes"
      },
      {
        "technique": "SSH Credential Reuse",
        "mitre_id": "T1078.003",
        "required_services": [
          "ssh"
        ],
        "required_ports": [
          22
        ],
        "os_requirements": [
          "linux",
          "unix"
        ],
        "environmental_prerequisites": [
          "ssh_service_accessible",
          "credentials_obtained_from_previous_attack",
          "password_authentication_enabled"
        ],
        "success_indicators": [
          "successful_ssh_authentication",
          "shell_access_obtained",
          "user_privileges_confirmed"
        ],
        "incompatible_with": [
          "key_only_authentication",
          "account_lockout_policies",
          "network_segmentation"
        ],
        "confidence_boosters": [
          "database_contains_user_credentials",
          "weak_password_policies",
          "credential_reuse_patterns"
        ],
        "typical_success_rate": 0.65,
        "estimated_time": "2-5 minutes"
      },
      {
        "technique": "iPython Code Execution",
        "mitre_id": "T1059.006",
        "required_services": [
          "ipython",
          "jupyter"
        ],
        "required_ports": [
          8888,
          8080
        ],
        "os_requirements": [
          "linux",
          "unix"
        ],
        "environmental_prerequisites": [
          "ipython_service_running",
          "code_execution_vulnerability_present",
          "user_access_to_ipython_interface"
        ],
        "success_indicators": [
          "code_execution_successful",
          "privilege_escalation_achieved",
          "file_system_access_obtained"
        ],
        "incompatible_with": [
          "sandboxed_execution_environment",
          "restricted_python_interpreter",
          "code_execution_filtering"
        ],
        "confidence_boosters": [
          "development_environment_present",
          "jupyter_notebooks_accessible",
          "python_development_tools"
        ],
        "typical_success_rate": 0.8,
        "estimated_time": "5-15 minutes"
      },
      {
        "technique": "Redis Exploitation",
        "mitre_id": "T1190",
        "required_services": [
          "redis"
        ],
        "required_ports": [
          6379
        ],
        "os_requirements": [
          "linux",
          "unix"
        ],
        "environmental_prerequisites": [
          "redis_service_accessible",
          "redis_credentials_obtained",
          "write_permissions_to_filesystem"
        ],
        "success_indicators": [
          "redis_authentication_successful",
          "file_write_capabilities_confirmed",
          "code_execution_achieved"
        ],
        "incompatible_with": [
          "redis_authentication_disabled",
          "filesystem_write_restrictions",
          "redis_sandboxing_enabled"
        ],
        "confidence_boosters": [
          "redis_running_as_privileged_user",
          "web_root_write_access",
          "caching_infrastructure_present"
        ],
        "typical_success_rate": 0.85,
        "estimated_time": "10-20 minutes"
      }
    ],
    "environmental_detectors": {
      "web_application": {
        "port_indicators": [
          80,
          443,
          8080,
          8443
        ],
        "service_indicators": [
          "http",
          "https",
          "nginx",
          "apache"
        ],
        "banner_indicators": [
          "nginx",
          "Apache",
          "IIS"
        ],
        "confidence_threshold": 0.9
      },
      "php_application": {
        "port_indicators": [
          80,
          443
        ],
        "service_indicators": [
          "http",
          "https"
        ],
        "technology_indicators": [
          "php",
          "index.php",
          "Set-Cookie"
        ],
        "confidence_threshold": 0.85
      },
      "redis_service": {
        "port_indicators": [
          6379
        ],
        "service_indicators": [
          "redis"
        ],
        "banner_indicators": [
          "Redis"
        ],
        "confidence_threshold": 0.95
      },
      "ssh_service": {
        "port_indicators": [
          22
        ],
        "service_indicators": [
          "ssh",
          "openssh"
        ],
        "banner_indicators": [
          "OpenSSH"
        ],
        "confidence_threshold": 0.95
      }
    },
    "attack_prioritization": {
      "high_priority": [
        {
          "attack": "sql_injection_cookie",
          "when": "php_web_application_with_cookies_detected",
          "reason": "high_success_rate_direct_database_access"
        },
        {
          "attack": "credential_reuse_ssh",
          "when": "ssh_service_and_credentials_obtained",
          "reason": "reliable_shell_access_method"
        }
      ],
      "medium_priority": [
        {
          "attack": "ipython_code_execution",
          "when": "development_environment_detected",
          "reason": "effective_privilege_escalation_vector"
        },
        {
          "attack": "redis_exploitation",
          "when": "redis_service_and_credentials_available",
          "reason": "high_impact_code_execution_potential"
        }
      ]
    }
  },
  "technique_intelligence": {
    "techniques": [
      {
        "name": "SQL Injection via Cookie",
        "mitre_id": "T1190",
        "category": "initial_access",
        "phase": "initial_access",
        "tools_used": [
          {
            "name": "Burp Suite",
            "command_template": "Manual testing via Repeater",
            "actual_command": "custom_cart={\"FUZZ\":\"1\"}",
            "output_pattern": "Product information displayed/hidden",
            "effectiveness_rating": 5,
            "reliability": 0.95
          },
          {
            "name": "sqlmap",
            "command_template": "sqlmap -u \"{url}\" --cookie='custom_cart={\"*\":\"1\"}' --technique U --union-cols {cols} --batch",
            "actual_command": "sqlmap -u \"https://checkout.shared.htb/\" --cookie='custom_cart={\"*\":\"1\"}' --technique U --union-cols 3 --batch",
            "success_factors": [
              "union_injection_possible",
              "correct_column_count"
            ],
            "effectiveness_rating": 4
          }
        ],
        "prerequisites": [
          "web_application_accessible",
          "cookie_based_cart_system",
          "database_backend_present"
        ],
        "success_indicators": [
          "single_quote_breaks_functionality",
          "comment_syntax_restores_functionality",
          "union_select_returns_controlled_data"
        ],
        "common_failures": [
          "waf_blocking_requests",
          "incorrect_column_count",
          "non_union_injectable"
        ],
        "follow_up_techniques": [
          "database_enumeration",
          "credential_extraction",
          "file_system_access"
        ],
        "time_investment": "10-30 minutes",
        "skill_level": "intermediate"
      },
      {
        "name": "Union-based SQL Injection",
        "mitre_id": "T1190",
        "category": "initial_access",
        "phase": "exploitation",
        "tools_used": [
          {
            "name": "Manual Union Testing",
            "command_template": "' union select {columns}-- -",
            "actual_command": "' union select 1,2,3-- -",
            "output_pattern": "Controlled data in response",
            "effectiveness_rating": 5,
            "reliability": 0.9
          }
        ],
        "prerequisites": [
          "sql_injection_confirmed",
          "union_queries_supported",
          "column_count_determined"
        ],
        "success_indicators": [
          "controlled_data_reflected",
          "database_information_extractable",
          "multiple_tables_accessible"
        ],
        "common_failures": [
          "wrong_column_count",
          "data_type_mismatch",
          "query_only_returns_first_row"
        ],
        "follow_up_techniques": [
          "information_schema_enumeration",
          "credential_table_dumping",
          "file_read_attempts"
        ],
        "time_investment": "15-45 minutes",
        "skill_level": "intermediate"
      }
    ],
    "tool_effectiveness": [
      {
        "tool": "sqlmap",
        "use_case": "automated_sql_injection_exploitation",
        "effectiveness_rating": 4,
        "reliability": 0.85,
        "learning_curve": "low",
        "essential_for": [
          "complex_sql_injection_scenarios"
        ],
        "alternatives": [
          "manual_testing",
          "custom_scripts"
        ],
        "best_practices": [
          "specify_technique_when_known",
          "set_column_count_if_determined",
          "use_batch_mode_for_automation",
          "increase_level_and_risk_for_difficult_cases"
        ]
      },
      {
        "tool": "Burp Suite",
        "use_case": "manual_sql_injection_testing",
        "effectiveness_rating": 5,
        "reliability": 0.95,
        "learning_curve": "medium",
        "essential_for": [
          "web_application_testing"
        ],
        "alternatives": [
          "curl",
          "custom_scripts",
          "browser_dev_tools"
        ],
        "best_practices": [
          "use_repeater_for_iterative_testing",
          "url_decode_cookies_for_readability",
          "test_single_quotes_first",
          "use_comment_syntax_to_fix_queries"
        ]
      }
    ],
    "command_sequences": [
      {
        "sequence_name": "cookie_sql_injection_discovery",
        "steps": [
          {
            "step": 1,
            "command": "Modify cookie: custom_cart={\"53GG2EF8x\":\"1\"}",
            "purpose": "Test if invalid ID breaks functionality",
            "expected_output": "Product information disappears"
          },
          {
            "step": 2,
            "command": "Modify cookie: custom_cart={\"53GG2EF8'\":\"1\"}",
            "purpose": "Test for SQL injection with single quote",
            "expected_output": "Error or broken functionality"
          },
          {
            "step": 3,
            "command": "Modify cookie: custom_cart={\"53GG2EF8'-- -\":\"1\"}",
            "purpose": "Fix query with SQL comment",
            "expected_output": "Functionality restored"
          },
          {
            "step": 4,
            "command": "Modify cookie: custom_cart={\"x' union select 1,2,3-- -\":\"1\"}",
            "purpose": "Test union injection with invalid base ID",
            "expected_output": "Controlled data displayed"
          }
        ],
        "success_rate": 0.9,
        "typical_duration": "15-30 minutes"
      },
      {
        "sequence_name": "automated_sqlmap_exploitation",
        "steps": [
          {
            "step": 1,
            "command": "sqlmap -u \"https://checkout.shared.htb/\" --cookie='custom_cart={\"*\":\"1\"}' --technique U --union-cols 3 --batch",
            "purpose": "Automated exploitation with known parameters",
            "expected_output": "Injection confirmed and exploitable"
          },
          {
            "step": 2,
            "command": "sqlmap -u \"https://checkout.shared.htb/\" --cookie='custom_cart={\"*\":\"1\"}' --dbs",
            "purpose": "Enumerate available databases",
            "expected_output": "List of database names"
          },
          {
            "step": 3,
            "command": "sqlmap -u \"https://checkout.shared.htb/\" --cookie='custom_cart={\"*\":\"1\"}' -D [database] --tables",
            "purpose": "Enumerate tables in target database",
            "expected_output": "List of table names"
          }
        ],
        "success_rate": 0.85,
        "typical_duration": "5-15 minutes"
      }
    ]
  },
  "metadata": {
    "basic_metadata": {
      "name": "Shared",
      "difficulty": "Medium",
      "os": "Linux (Debian 11)",
      "platform": "HackTheBox",
      "release_date": "2022-07-23",
      "author": "Nauten",
      "estimated_time": "2-3 hours"
    },
    "intelligence_metadata": {
      "attack_complexity": "medium",
      "skill_level_required": "intermediate",
      "primary_attack_vectors": [
        "sql_injection",
        "code_execution",
        "binary_exploitation"
      ],
      "key_vulnerabilities": [
        "cookie_sqli",
        "ipython_rce",
        "redis_exploitation"
      ],
      "environment_type": "web_application_multi_service",
      "real_world_relevance": "high",
      "learning_value": [
        "cookie_based_sqli",
        "ipython_exploitation",
        "redis_attacks",
        "binary_reversing"
      ],
      "prerequisite_knowledge": [
        "sql_injection",
        "python_environments",
        "reverse_engineering_basics",
        "redis_fundamentals"
      ]
    },
    "categorization": {
      "primary_category": "web_application",
      "subcategories": [
        "database_attacks",
        "service_exploitation",
        "reverse_engineering"
      ],
      "attack_types": [
        "initial_access",
        "lateral_movement",
        "privilege_escalation"
      ],
      "defensive_lessons": [
        "input_validation",
        "secure_coding",
        "service_hardening",
        "network_segmentation"
      ]
    },
    "similarity_markers": {
      "similar_boxes": [
        "Bolt",
        "Previse",
        "Writer"
      ],
      "similarity_reasons": [
        "sql_injection_entry",
        "multi_stage_pivoting",
        "service_exploitation"
      ],
      "unique_aspects": [
        "cookie_sqli_vector",
        "ipython_vulnerability",
        "redis_exploitation_chain"
      ],
      "difficulty_factors": [
        "multiple_pivot_points",
        "binary_analysis_required",
        "service_chaining"
      ]
    }
  },
  "extraction_metadata": {
    "parse_date": "2025-07-04T12:53:27.424575",
    "original_file": "0xdf_writeups/Htb Shared.md",
    "content_length": 34497,
    "extraction_version": "2.0-claude",
    "model_used": "claude-sonnet-4-20250514"
  },
  "intelligence_confidence": 1.0,
  "quality_breakdown": {
    "scenario_uniqueness": 1.0,
    "success_logic_clarity": 1.0,
    "applicability_completeness": 1.0,
    "decision_tree_depth": 1.0,
    "technique_actionability": 1.0
  }
}