{
  "writeup_id": "Htb_Registrytwo",
  "scenario_fingerprint": {
    "scenario_name": "linux_docker_registry_java_rmi_exploitation",
    "primary_services": [
      "docker_registry",
      "nginx",
      "tomcat",
      "java_rmi",
      "ssh"
    ],
    "port_signature": "22+443+5000+5001",
    "service_combination": "ssh+nginx+docker_registry+auth_server",
    "os_family": "ubuntu_linux",
    "environment_type": "containerized_java_application",
    "entry_vector": "docker_registry_enumeration",
    "privilege_path": "container_escape_to_rmi_exploitation",
    "attack_complexity": "very_hard",
    "estimated_time": "4-6 hours",
    "scenario_confidence": 0.92,
    "distinguishing_factors": [
      "docker_registry_on_port_5000",
      "acme_auth_server_port_5001",
      "java_war_file_in_registry",
      "rmi_client_server_architecture",
      "clamav_file_scanning"
    ],
    "environmental_clues": [
      "webhosting_htb_domain",
      "nginx_virtual_hosts",
      "docker_containers",
      "java_application_stack",
      "ssl_certificates_acme_inc"
    ],
    "similar_scenarios": [
      "registry_htb_hard",
      "java_rmi_exploitation"
    ],
    "unique_aspects": [
      "mass_assignment_vulnerability",
      "session_manipulation",
      "rogue_rmi_server_takeover",
      "nginx_tomcat_proxy_issues",
      "dynamic_virtual_host_creation"
    ]
  },
  "success_patterns": {
    "success_factors": [
      {
        "technique": "Docker Registry Enumeration",
        "success_reason": "Docker Registry on port 5000 exposed without proper authentication",
        "prerequisite_indicators": [
          "docker_registry_service_running",
          "port_5000_accessible",
          "registry_api_v2_available"
        ],
        "recognition_patterns": [
          "Docker Registry (API: 2.0) in nmap output",
          "SSL certificate for *.webhosting.htb",
          "Registry responds to /v2/ endpoints"
        ],
        "failure_modes": [
          "registry_requires_authentication",
          "registry_behind_firewall",
          "no_interesting_images_available"
        ],
        "environmental_factors": [
          "misconfigured_docker_registry",
          "development_environment_exposure",
          "insufficient_access_controls"
        ],
        "success_probability": 0.75,
        "typical_timeframe": "10-30 minutes"
      },
      {
        "technique": "Java Application Reverse Engineering",
        "success_reason": "WAR file contained in Docker image revealed application vulnerabilities",
        "prerequisite_indicators": [
          "java_war_file_accessible",
          "tomcat_application_running",
          "source_code_or_classes_available"
        ],
        "recognition_patterns": [
          "WAR file in Docker image layers",
          "Java class files in WEB-INF",
          "Spring Boot or servlet configurations"
        ],
        "failure_modes": [
          "obfuscated_java_code",
          "no_war_files_in_images",
          "compiled_without_debug_info"
        ],
        "environmental_factors": [
          "development_artifacts_in_production",
          "unstripped_java_applications",
          "docker_image_contains_source"
        ],
        "success_probability": 0.82,
        "typical_timeframe": "30-60 minutes"
      },
      {
        "technique": "Mass Assignment Vulnerability",
        "success_reason": "Java application allowed modification of unintended object properties",
        "prerequisite_indicators": [
          "java_spring_framework_used",
          "json_parameter_binding",
          "insufficient_input_validation"
        ],
        "recognition_patterns": [
          "Spring Boot application structure",
          "JSON request/response handling",
          "Object binding without @JsonIgnore"
        ],
        "failure_modes": [
          "proper_dto_validation",
          "whitelist_parameter_binding",
          "immutable_objects_used"
        ],
        "environmental_factors": [
          "rapid_development_practices",
          "insufficient_security_review",
          "default_spring_configurations"
        ],
        "success_probability": 0.68,
        "typical_timeframe": "20-45 minutes"
      },
      {
        "technique": "Java RMI Client Exploitation",
        "success_reason": "Rogue RMI client could interact with exposed RMI services",
        "prerequisite_indicators": [
          "java_rmi_service_running",
          "rmi_registry_accessible",
          "custom_rmi_interfaces_available"
        ],
        "recognition_patterns": [
          "RMI registry on standard ports",
          "Java RMI service enumeration",
          "Custom RMI interface classes"
        ],
        "failure_modes": [
          "rmi_authentication_required",
          "rmi_behind_firewall",
          "no_exploitable_rmi_methods"
        ],
        "environmental_factors": [
          "legacy_java_applications",
          "internal_service_exposure",
          "insufficient_rmi_hardening"
        ],
        "success_probability": 0.71,
        "typical_timeframe": "45-90 minutes"
      }
    ],
    "critical_discoveries": [
      {
        "discovery": "Docker Registry with accessible images",
        "discovery_method": "Port scan and Docker Registry API enumeration",
        "why_critical": "Contained WAR files with application source code and vulnerabilities",
        "how_to_recognize": [
          "Docker Registry API v2 responses",
          "Image manifest enumeration success",
          "Layer download capabilities"
        ],
        "follow_up_actions": [
          "enumerate_all_repositories",
          "download_image_layers",
          "extract_and_analyze_contents"
        ]
      },
      {
        "discovery": "Java WAR file in Docker image",
        "discovery_method": "Docker image layer extraction and analysis",
        "why_critical": "Revealed application structure and multiple vulnerability classes",
        "how_to_recognize": [
          "WAR file in image filesystem",
          "WEB-INF directory structure",
          "Java class files and configurations"
        ],
        "follow_up_actions": [
          "decompile_java_classes",
          "analyze_spring_configurations",
          "identify_endpoint_mappings"
        ]
      },
      {
        "discovery": "RMI service with file system access",
        "discovery_method": "Java application analysis and RMI client creation",
        "why_critical": "Provided file system read access leading to credential discovery",
        "how_to_recognize": [
          "RMI registry enumeration",
          "Custom RMI interface methods",
          "File system interaction capabilities"
        ],
        "follow_up_actions": [
          "create_rogue_rmi_client",
          "enumerate_accessible_files",
          "search_for_credentials"
        ]
      }
    ],
    "escalation_keys": [
      {
        "privilege_level": "container_user",
        "escalation_method": "RMI_service_race_condition",
        "why_possible": "RMI server restart allowed rogue server to bind to port first",
        "recognition_signs": [
          "rmi_service_periodic_restart",
          "port_binding_race_condition",
          "clamav_integration_with_rmi"
        ],
        "exploitation_path": "Wait for restart → Bind rogue RMI server → Abuse ClamAV integration → File read/write → Shell"
      },
      {
        "privilege_level": "application_context",
        "escalation_method": "Mass_assignment_to_privilege_escalation",
        "why_possible": "Application allowed modification of user privilege fields",
        "recognition_signs": [
          "json_parameter_binding",
          "insufficient_field_validation",
          "privilege_fields_in_user_objects"
        ],
        "exploitation_path": "Mass assignment → Privilege modification → Administrative access → Container escape"
      }
    ]
  },
  "decision_tree": {
    "decision_points": [
      {
        "step": 1,
        "situation": "Found ports 22,443,5000,5001 open on Linux host with Docker Registry on 5000",
        "decision": "Enumerate Docker Registry first for potential container images and credentials",
        "reasoning": "Docker Registry often contains application code and configuration files",
        "confidence": 0.9,
        "alternatives": [
          {
            "option": "web_enumeration",
            "when": "if registry access fails"
          },
          {
            "option": "auth_server_analysis",
            "when": "if registry requires authentication"
          }
        ],
        "success_indicators": [
          "registry_catalog_accessible",
          "images_discovered",
          "manifests_readable"
        ],
        "next_decision": "analyze_container_contents"
      },
      {
        "step": 2,
        "situation": "Java application identified via JSESSIONID cookie and nginx proxy setup",
        "decision": "Focus on Java-specific vulnerabilities and WAR file analysis",
        "reasoning": "Java web applications often have mass assignment, deserialization, and session manipulation vulnerabilities",
        "confidence": 0.85,
        "prerequisites": [
          "jsessionid_cookie_present",
          "java_application_confirmed"
        ],
        "success_indicators": [
          "war_file_obtained",
          "source_code_accessible"
        ],
        "failure_fallbacks": [
          "directory_bruteforce",
          "parameter_fuzzing",
          "session_analysis"
        ]
      },
      {
        "step": 3,
        "situation": "Container access obtained with Java application running",
        "decision": "Enumerate for RMI services and Java-specific privilege escalation vectors",
        "reasoning": "Java applications often use RMI for inter-service communication which can be exploited",
        "confidence": 0.8,
        "prerequisites": [
          "container_shell_access",
          "java_environment_confirmed"
        ],
        "success_indicators": [
          "rmi_registry_found",
          "rmi_services_enumerated"
        ],
        "failure_fallbacks": [
          "file_system_enumeration",
          "process_analysis",
          "network_scanning"
        ]
      }
    ],
    "branching_logic": {
      "if_docker_registry_accessible": {
        "action": "download_and_analyze_images",
        "tools": [
          "docker",
          "tar",
          "strings"
        ],
        "next_phase": "source_code_analysis"
      },
      "if_java_vulnerabilities_found": {
        "action": "chain_mass_assignment_and_session_manipulation",
        "alternatives": [
          "deserialization_attacks",
          "path_traversal",
          "authentication_bypass"
        ],
        "decision_criteria": "based_on_application_framework"
      },
      "if_container_compromised": {
        "action": "enumerate_host_services",
        "purpose": "find_container_escape_vectors",
        "tools": [
          "netstat",
          "ps",
          "mount"
        ]
      },
      "if_rmi_services_found": {
        "action": "create_rogue_rmi_client_or_server",
        "purpose": "exploit_rmi_communication",
        "tools": [
          "custom_java_code",
          "ysoserial"
        ]
      }
    },
    "optimization_rules": [
      {
        "rule": "always_check_docker_registry_first",
        "reasoning": "high_value_target_with_application_source_code",
        "applicability": "docker_registry_service_detected"
      },
      {
        "rule": "analyze_war_files_for_multiple_vulnerability_types",
        "reasoning": "java_applications_often_have_multiple_exploitable_issues",
        "applicability": "java_web_application_identified"
      },
      {
        "rule": "look_for_rmi_services_in_java_environments",
        "reasoning": "common_privilege_escalation_vector_in_java_applications",
        "applicability": "java_application_container_access"
      },
      {
        "rule": "attempt_rogue_service_attacks_on_service_restart",
        "reasoning": "race_condition_opportunities_during_service_startup",
        "applicability": "service_restart_detected"
      }
    ]
  },
  "applicability_rules": {
    "technique_rules": [
      {
        "technique": "Docker Registry Enumeration",
        "mitre_id": "T1613",
        "required_services": [
          "docker-registry"
        ],
        "required_ports": [
          5000
        ],
        "os_requirements": [
          "linux"
        ],
        "environmental_prerequisites": [
          "docker_registry_exposed",
          "api_v2_accessible",
          "anonymous_access_enabled"
        ],
        "success_indicators": [
          "catalog_endpoint_accessible",
          "manifest_retrieval_possible",
          "blob_download_available"
        ],
        "incompatible_with": [
          "authentication_required",
          "network_isolation",
          "registry_disabled"
        ],
        "confidence_boosters": [
          "docker_registry_api_banner",
          "standard_port_5000",
          "ssl_certificate_present"
        ],
        "typical_success_rate": 0.75,
        "estimated_time": "10-30 minutes"
      },
      {
        "technique": "Java Web Application Exploitation",
        "mitre_id": "T1190",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          8080,
          8443
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "java_application_detected",
          "tomcat_server_present",
          "war_files_accessible"
        ],
        "success_indicators": [
          "java_stack_traces_visible",
          "war_file_extracted",
          "mass_assignment_vulnerable"
        ],
        "incompatible_with": [
          "waf_protection_active",
          "input_validation_strict",
          "session_management_secure"
        ],
        "confidence_boosters": [
          "tomcat_error_pages",
          "java_session_cookies",
          "spring_framework_detected"
        ],
        "typical_success_rate": 0.65,
        "estimated_time": "30-90 minutes"
      },
      {
        "technique": "Virtual Host Discovery",
        "mitre_id": "T1590.005",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "nginx_server_detected",
          "virtual_host_routing_enabled",
          "ssl_certificate_wildcard"
        ],
        "success_indicators": [
          "host_header_routing_works",
          "different_responses_per_vhost",
          "subdomain_enumeration_successful"
        ],
        "incompatible_with": [
          "single_site_configuration",
          "host_header_validation_strict",
          "default_server_only"
        ],
        "confidence_boosters": [
          "wildcard_ssl_certificate",
          "nginx_server_header",
          "redirect_to_fqdn"
        ],
        "typical_success_rate": 0.8,
        "estimated_time": "5-15 minutes"
      },
      {
        "technique": "Java RMI Exploitation",
        "mitre_id": "T1055",
        "required_services": [
          "rmi"
        ],
        "required_ports": [
          1099,
          1098
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "java_rmi_service_exposed",
          "rmi_registry_accessible",
          "deserialization_possible"
        ],
        "success_indicators": [
          "rmi_registry_enumeration_works",
          "remote_objects_accessible",
          "malicious_client_accepted"
        ],
        "incompatible_with": [
          "rmi_security_manager_strict",
          "network_segmentation_active",
          "authentication_required"
        ],
        "confidence_boosters": [
          "java_application_present",
          "standard_rmi_ports_open",
          "rmi_service_banner"
        ],
        "typical_success_rate": 0.7,
        "estimated_time": "45-120 minutes"
      }
    ],
    "environmental_detectors": {
      "docker_registry": {
        "port_indicators": [
          5000
        ],
        "service_indicators": [
          "docker-registry"
        ],
        "banner_indicators": [
          "Docker Registry",
          "API: 2.0"
        ],
        "confidence_threshold": 0.9
      },
      "java_web_application": {
        "port_indicators": [
          80,
          443,
          8080,
          8443
        ],
        "service_indicators": [
          "http",
          "https"
        ],
        "technology_indicators": [
          "tomcat",
          "java",
          "spring"
        ],
        "confidence_threshold": 0.85
      },
      "nginx_virtual_hosts": {
        "port_indicators": [
          80,
          443
        ],
        "service_indicators": [
          "nginx"
        ],
        "banner_indicators": [
          "nginx",
          "virtual host"
        ],
        "confidence_threshold": 0.8
      },
      "java_rmi": {
        "port_indicators": [
          1099,
          1098
        ],
        "service_indicators": [
          "rmi"
        ],
        "banner_indicators": [
          "Java RMI",
          "rmiregistry"
        ],
        "confidence_threshold": 0.85
      }
    },
    "attack_prioritization": {
      "high_priority": [
        {
          "attack": "docker_registry_enumeration",
          "when": "docker_registry_detected",
          "reason": "often_exposes_application_source_code"
        },
        {
          "attack": "virtual_host_discovery",
          "when": "nginx_with_redirect_detected",
          "reason": "reveals_additional_attack_surface"
        }
      ],
      "medium_priority": [
        {
          "attack": "java_web_exploitation",
          "when": "java_application_detected",
          "reason": "complex_but_high_impact_vulnerabilities"
        },
        {
          "attack": "java_rmi_exploitation",
          "when": "rmi_service_detected",
          "reason": "powerful_but_requires_custom_tooling"
        }
      ]
    }
  },
  "technique_intelligence": {
    "techniques": [
      {
        "name": "Docker Registry Enumeration",
        "mitre_id": "T1083",
        "category": "discovery",
        "phase": "reconnaissance",
        "tools_used": [
          {
            "name": "nmap",
            "command_template": "nmap -p- --min-rate 10000 {target_ip}",
            "actual_command": "nmap -p- --min-rate 10000 10.10.11.223",
            "output_pattern": "5000/tcp open  upnp",
            "effectiveness_rating": 5,
            "reliability": 0.98
          },
          {
            "name": "nmap service detection",
            "command_template": "nmap -p {ports} -sCV {target_ip}",
            "actual_command": "nmap -p 22,443,5000,5001 -sCV 10.10.11.223",
            "output_pattern": "Docker Registry (API: 2.0)",
            "effectiveness_rating": 5,
            "reliability": 0.95
          }
        ],
        "prerequisites": [
          "network_connectivity",
          "docker_registry_exposed"
        ],
        "success_indicators": [
          "docker_registry_api_identified",
          "port_5000_responds_to_http",
          "registry_api_version_detected"
        ],
        "common_failures": [
          "authentication_required",
          "network_filtering",
          "service_misconfiguration"
        ],
        "follow_up_techniques": [
          "docker_image_enumeration",
          "container_image_analysis",
          "credential_extraction"
        ],
        "time_investment": "5-15 minutes",
        "skill_level": "beginner"
      },
      {
        "name": "Virtual Host Discovery",
        "mitre_id": "T1083",
        "category": "discovery",
        "phase": "reconnaissance",
        "tools_used": [
          {
            "name": "ffuf",
            "command_template": "ffuf -u https://{target_ip} -H \"Host: FUZZ.{domain}\" -w {wordlist} -mc all -ac",
            "actual_command": "ffuf -u https://10.10.11.223 -H \"Host: FUZZ.webhosting.htb\" -w /opt/SecLists/Discovery/DNS/subdomains-top1million-20000.txt -mc all -ac",
            "output_pattern": "www                     [Status: 200, Size: 23978",
            "effectiveness_rating": 4,
            "reliability": 0.9
          }
        ],
        "prerequisites": [
          "virtual_host_routing_suspected",
          "domain_name_identified",
          "web_service_accessible"
        ],
        "success_indicators": [
          "additional_subdomains_discovered",
          "different_response_sizes_found",
          "unique_content_identified"
        ],
        "common_failures": [
          "no_virtual_hosts_configured",
          "identical_responses_across_hosts",
          "rate_limiting_triggered"
        ],
        "follow_up_techniques": [
          "subdomain_enumeration",
          "content_discovery",
          "application_fingerprinting"
        ],
        "time_investment": "10-30 minutes",
        "skill_level": "beginner"
      },
      {
        "name": "Java Application Fingerprinting",
        "mitre_id": "T1518.001",
        "category": "discovery",
        "phase": "reconnaissance",
        "tools_used": [
          {
            "name": "curl",
            "command_template": "curl -i {target_url}",
            "actual_command": "curl -i https://www.webhosting.htb/hosting/auth/signin",
            "output_pattern": "Set-Cookie: JSESSIONID=",
            "effectiveness_rating": 5,
            "reliability": 0.95
          }
        ],
        "prerequisites": [
          "web_application_accessible",
          "session_management_present"
        ],
        "success_indicators": [
          "jsessionid_cookie_detected",
          "java_error_pages_found",
          "web_inf_directories_present"
        ],
        "common_failures": [
          "application_uses_different_session_management",
          "cookies_not_exposed",
          "framework_obfuscated"
        ],
        "follow_up_techniques": [
          "java_deserialization_testing",
          "web_inf_enumeration",
          "session_manipulation"
        ],
        "time_investment": "5-15 minutes",
        "skill_level": "beginner"
      },
      {
        "name": "Directory Brute Force",
        "mitre_id": "T1083",
        "category": "discovery",
        "phase": "reconnaissance",
        "tools_used": [
          {
            "name": "feroxbuster",
            "command_template": "feroxbuster -u {target_url} -k",
            "actual_command": "feroxbuster -u https://www.webhosting.htb -k",
            "output_pattern": "404      GET       39l      110w     1544c https://www.webhosting.htb/hosting/META-INF",
            "effectiveness_rating": 4,
            "reliability": 0.85
          }
        ],
        "prerequisites": [
          "web_application_accessible",
          "directory_traversal_possible"
        ],
        "success_indicators": [
          "hidden_directories_found",
          "meta_inf_web_inf_detected",
          "admin_panels_discovered"
        ],
        "common_failures": [
          "aggressive_rate_limiting",
          "waf_blocking_requests",
          "no_interesting_directories"
        ],
        "follow_up_techniques": [
          "file_enumeration",
          "configuration_file_access",
          "source_code_disclosure"
        ],
        "time_investment": "15-45 minutes",
        "skill_level": "beginner"
      }
    ],
    "tool_effectiveness": [
      {
        "tool": "nmap",
        "use_case": "port_discovery_and_service_identification",
        "effectiveness_rating": 5,
        "reliability": 0.98,
        "learning_curve": "low",
        "essential_for": [
          "network_reconnaissance",
          "service_enumeration"
        ],
        "alternatives": [
          "masscan",
          "rustscan"
        ],
        "best_practices": [
          "use_min_rate_for_faster_scanning",
          "follow_up_with_service_detection",
          "check_for_version_information"
        ]
      },
      {
        "tool": "ffuf",
        "use_case": "virtual_host_discovery",
        "effectiveness_rating": 4,
        "reliability": 0.9,
        "learning_curve": "medium",
        "essential_for": [
          "subdomain_enumeration",
          "vhost_routing"
        ],
        "alternatives": [
          "gobuster",
          "wfuzz"
        ],
        "best_practices": [
          "use_auto_calibration_flag",
          "match_all_status_codes_initially",
          "use_quality_wordlists"
        ]
      },
      {
        "tool": "feroxbuster",
        "use_case": "directory_and_file_discovery",
        "effectiveness_rating": 4,
        "reliability": 0.85,
        "learning_curve": "low",
        "essential_for": [
          "web_application_enumeration"
        ],
        "alternatives": [
          "gobuster",
          "dirbuster"
        ],
        "best_practices": [
          "use_smart_filtering_for_efficiency",
          "enable_recursion_for_deep_discovery",
          "ignore_ssl_errors_when_needed"
        ]
      }
    ],
    "command_sequences": [
      {
        "sequence_name": "web_application_reconnaissance",
        "steps": [
          {
            "step": 1,
            "command": "nmap -p- --min-rate 10000 10.10.11.223",
            "purpose": "Discover all open ports",
            "expected_output": "Ports 22, 443, 5000, 5001 open"
          },
          {
            "step": 2,
            "command": "nmap -p 22,443,5000,5001 -sCV 10.10.11.223",
            "purpose": "Identify services and versions",
            "expected_output": "Docker Registry on 5000, nginx on 443"
          },
          {
            "step": 3,
            "command": "ffuf -u https://10.10.11.223 -H \"Host: FUZZ.webhosting.htb\" -w /opt/SecLists/Discovery/DNS/subdomains-top1million-20000.txt -mc all -ac",
            "purpose": "Discover virtual hosts",
            "expected_output": "www subdomain identified"
          },
          {
            "step": 4,
            "command": "feroxbuster -u https://www.webhosting.htb -k",
            "purpose": "Enumerate directories and files",
            "expected_output": "META-INF and WEB-INF directories found"
          }
        ],
        "success_rate": 0.92,
        "typical_duration": "20-60 minutes"
      }
    ]
  },
  "metadata": {
    "basic_metadata": {
      "name": "RegistryTwo",
      "difficulty": "Insane",
      "os": "Linux",
      "platform": "HackTheBox",
      "release_date": "2023-07-22",
      "author": "irogir",
      "estimated_time": "6-8 hours"
    },
    "intelligence_metadata": {
      "attack_complexity": "very_high",
      "skill_level_required": "expert",
      "primary_attack_vectors": [
        "java_exploitation",
        "docker_registry",
        "rmi_attacks"
      ],
      "key_vulnerabilities": [
        "mass_assignment",
        "session_manipulation",
        "rogue_rmi_server"
      ],
      "environment_type": "containerized_java_application",
      "real_world_relevance": "very_high",
      "learning_value": [
        "java_war_analysis",
        "docker_registry_exploitation",
        "rmi_security",
        "clamav_abuse"
      ],
      "prerequisite_knowledge": [
        "java_applications",
        "docker_concepts",
        "rmi_protocol",
        "reverse_engineering"
      ]
    },
    "categorization": {
      "primary_category": "web_application_security",
      "subcategories": [
        "java_exploitation",
        "container_security",
        "rmi_attacks"
      ],
      "attack_types": [
        "application_exploitation",
        "privilege_escalation",
        "container_escape"
      ],
      "defensive_lessons": [
        "secure_java_configuration",
        "rmi_hardening",
        "container_isolation",
        "input_validation"
      ]
    },
    "similarity_markers": {
      "similar_boxes": [
        "Registry",
        "Arkham",
        "Jeeves"
      ],
      "similarity_reasons": [
        "java_applications",
        "complex_exploitation_chains",
        "container_environments"
      ],
      "unique_aspects": [
        "rogue_rmi_server",
        "clamav_exploitation",
        "dynamic_nginx_vhosts"
      ],
      "difficulty_factors": [
        "multiple_vulnerability_chaining",
        "advanced_java_concepts",
        "timing_attacks"
      ]
    }
  },
  "extraction_metadata": {
    "parse_date": "2025-07-04T22:21:15.661069",
    "original_file": "0xdf_writeups/Htb Registrytwo.md",
    "content_length": 138466,
    "extraction_version": "2.0-claude",
    "model_used": "claude-sonnet-4-20250514"
  },
  "intelligence_confidence": 1.0,
  "quality_breakdown": {
    "scenario_uniqueness": 1.0,
    "success_logic_clarity": 1.0,
    "applicability_completeness": 1.0,
    "decision_tree_depth": 1.0,
    "technique_actionability": 1.0
  }
}