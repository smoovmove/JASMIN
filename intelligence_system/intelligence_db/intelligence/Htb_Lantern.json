{
  "writeup_id": "Htb_Lantern",
  "scenario_fingerprint": {
    "scenario_name": "linux_web_skipper_proxy_ssrf_blazor",
    "primary_services": [
      "http",
      "ssh",
      "skipper_proxy",
      "kestrel"
    ],
    "port_signature": "22+80+3000",
    "service_combination": "ssh+skipper_proxy+dotnet_kestrel",
    "os_family": "linux",
    "environment_type": "web_application",
    "entry_vector": "ssrf_via_skipper_proxy",
    "privilege_path": "web_admin_to_root",
    "attack_complexity": "hard",
    "estimated_time": "3-4 hours",
    "scenario_confidence": 0.92,
    "distinguishing_factors": [
      "skipper_proxy_ssrf_vulnerability",
      "blazor_dotnet_on_linux",
      "internal_admin_interface",
      "razor_dll_upload",
      "procmon_sqlite_database"
    ],
    "environmental_clues": [
      "skipper_proxy_server_header",
      "kestrel_server_backend",
      "flask_and_blazor_dual_stack",
      "dotnet_uri_parsing_errors",
      "lantern_htb_domain_redirect"
    ],
    "similar_scenarios": [
      "multi_web_framework_boxes",
      "dotnet_linux_targets"
    ],
    "unique_aspects": [
      "skipper_proxy_frontend",
      "blazor_server_side_rendering",
      "razor_component_code_execution",
      "procmon_log_credential_extraction"
    ]
  },
  "success_patterns": {
    "success_factors": [
      {
        "technique": "SSRF_via_Skipper_Proxy",
        "success_reason": "Skipper proxy allowed internal network access without proper filtering",
        "prerequisite_indicators": [
          "skipper_proxy_identified",
          "internal_services_accessible",
          "proxy_configuration_permissive"
        ],
        "recognition_patterns": [
          "Server: Skipper Proxy header",
          "302 redirects to domain names",
          "proxy behavior on port 80"
        ],
        "failure_modes": [
          "internal_network_filtering",
          "proxy_whitelist_restrictions",
          "no_internal_services"
        ],
        "environmental_factors": [
          "microservices_architecture",
          "internal_admin_interfaces",
          "insufficient_network_segmentation"
        ],
        "success_probability": 0.75,
        "typical_timeframe": "15-30 minutes"
      },
      {
        "technique": "SQL_Injection_Admin_Access",
        "success_reason": "Internal admin interface lacked proper input validation",
        "prerequisite_indicators": [
          "admin_interface_accessible",
          "database_backend_present",
          "input_fields_available"
        ],
        "recognition_patterns": [
          "Blazor/.NET application stack",
          "admin login forms",
          "database error messages"
        ],
        "failure_modes": [
          "parameterized_queries_used",
          "input_validation_present",
          "waf_protection_active"
        ],
        "environmental_factors": [
          "internal_application_assumptions",
          "development_vs_production_configs",
          "legacy_code_patterns"
        ],
        "success_probability": 0.68,
        "typical_timeframe": "20-45 minutes"
      },
      {
        "technique": "Malicious_Razor_Component_Upload",
        "success_reason": "File upload functionality allowed DLL components without validation",
        "prerequisite_indicators": [
          "file_upload_functionality",
          "razor_component_support",
          "insufficient_file_validation"
        ],
        "recognition_patterns": [
          "Blazor server application",
          "component upload features",
          "DLL execution context"
        ],
        "failure_modes": [
          "file_type_restrictions",
          "code_signing_requirements",
          "sandboxed_execution"
        ],
        "environmental_factors": [
          "blazor_server_architecture",
          "dynamic_component_loading",
          "development_features_enabled"
        ],
        "success_probability": 0.82,
        "typical_timeframe": "10-25 minutes"
      },
      {
        "technique": "SQLite_Database_Credential_Extraction",
        "success_reason": "ProcMon logs contained plaintext credentials in SQLite database",
        "prerequisite_indicators": [
          "sqlite_databases_accessible",
          "process_monitoring_enabled",
          "credential_logging_present"
        ],
        "recognition_patterns": [
          "SQLite database files",
          "ProcMon/process monitoring tools",
          "logged authentication events"
        ],
        "failure_modes": [
          "encrypted_databases",
          "credential_redaction",
          "restricted_file_access"
        ],
        "environmental_factors": [
          "debugging_tools_active",
          "verbose_logging_enabled",
          "development_environment_practices"
        ],
        "success_probability": 0.71,
        "typical_timeframe": "15-30 minutes"
      }
    ],
    "critical_discoveries": [
      {
        "discovery": "Internal Blazor admin interface",
        "discovery_method": "SSRF through Skipper proxy",
        "why_critical": "Provided admin access and file upload capabilities",
        "how_to_recognize": [
          "Kestrel server on port 3000",
          "ASP.NET Core error messages",
          "Blazor component references"
        ],
        "follow_up_actions": [
          "test_sql_injection",
          "reverse_engineer_dlls",
          "identify_upload_functionality"
        ]
      },
      {
        "discovery": "File upload with DLL execution",
        "discovery_method": "Admin interface exploration",
        "why_critical": "Direct path to code execution via malicious components",
        "how_to_recognize": [
          "Razor component upload forms",
          "DLL file acceptance",
          "dynamic component loading"
        ],
        "follow_up_actions": [
          "craft_malicious_razor_component",
          "upload_reverse_shell_dll",
          "trigger_component_execution"
        ]
      },
      {
        "discovery": "ProcMon SQLite database with credentials",
        "discovery_method": "File system enumeration",
        "why_critical": "Contained root password in process monitoring logs",
        "how_to_recognize": [
          "SQLite database files",
          "process monitoring directories",
          "authentication event logs"
        ],
        "follow_up_actions": [
          "extract_database_contents",
          "search_for_credentials",
          "test_discovered_passwords"
        ]
      }
    ],
    "escalation_keys": [
      {
        "privilege_level": "web_application_user",
        "escalation_method": "SSRF_to_internal_admin",
        "why_possible": "Skipper proxy allowed access to internal Blazor admin interface",
        "recognition_signs": [
          "proxy_server_identified",
          "internal_network_accessible",
          "admin_interfaces_present"
        ],
        "exploitation_path": "SSRF → Internal Admin → SQL Injection → File Upload"
      },
      {
        "privilege_level": "application_admin",
        "escalation_method": "malicious_component_upload",
        "why_possible": "Admin interface allowed uploading and executing DLL components",
        "recognition_signs": [
          "file_upload_functionality",
          "blazor_component_support",
          "insufficient_validation"
        ],
        "exploitation_path": "Admin Access → Malicious DLL Upload → Code Execution"
      },
      {
        "privilege_level": "web_shell_user",
        "escalation_method": "sqlite_credential_extraction",
        "why_possible": "Process monitoring database contained plaintext root credentials",
        "recognition_signs": [
          "sqlite_databases_present",
          "process_monitoring_active",
          "verbose_logging_enabled"
        ],
        "exploitation_path": "File System Access → SQLite Database → Root Credentials"
      }
    ]
  },
  "decision_tree": {
    "decision_points": [
      {
        "step": 1,
        "situation": "Found ports 22,80,3000 open with Skipper Proxy on 80 and Kestrel/.NET on 3000",
        "decision": "Investigate Skipper Proxy SSRF capabilities to access internal services",
        "reasoning": "Skipper Proxy often vulnerable to SSRF, port 3000 shows .NET errors suggesting internal service",
        "confidence": 0.85,
        "alternatives": [
          {
            "option": "direct_port_3000_enumeration",
            "when": "if SSRF fails"
          },
          {
            "option": "web_application_fuzzing",
            "when": "if no proxy vulnerabilities found"
          }
        ],
        "success_indicators": [
          "ssrf_payload_accepted",
          "internal_service_response",
          "different_application_discovered"
        ],
        "next_decision": "exploit_ssrf_for_internal_access"
      },
      {
        "step": 2,
        "situation": "SSRF successful, accessing internal Blazor/.NET application",
        "decision": "Enumerate admin functionality and look for SQL injection or file upload",
        "reasoning": "Blazor applications often have admin panels with database interactions",
        "confidence": 0.8,
        "prerequisites": [
          "ssrf_working",
          "internal_app_accessible"
        ],
        "success_indicators": [
          "admin_panel_found",
          "sql_injection_detected",
          "file_upload_available"
        ],
        "failure_fallbacks": [
          "dll_reverse_engineering",
          "configuration_file_access"
        ]
      },
      {
        "step": 3,
        "situation": "Admin access obtained to Blazor application",
        "decision": "Upload malicious Razor DLL component for code execution",
        "reasoning": "Blazor allows dynamic component loading, DLL upload can lead to RCE",
        "confidence": 0.9,
        "prerequisites": [
          "admin_access",
          "file_upload_capability"
        ],
        "success_indicators": [
          "dll_upload_successful",
          "component_loaded",
          "code_execution_achieved"
        ],
        "failure_fallbacks": [
          "direct_file_write",
          "configuration_manipulation"
        ]
      },
      {
        "step": 4,
        "situation": "Shell access obtained, need privilege escalation",
        "decision": "Investigate ProcMon SQLite database for sensitive information",
        "reasoning": "Process monitoring databases often contain credentials and sensitive data",
        "confidence": 0.75,
        "prerequisites": [
          "shell_access",
          "file_system_access"
        ],
        "success_indicators": [
          "procmon_db_found",
          "credentials_in_logs",
          "root_password_discovered"
        ],
        "failure_fallbacks": [
          "kernel_exploits",
          "service_enumeration",
          "cron_jobs_analysis"
        ]
      }
    ],
    "branching_logic": {
      "if_ssrf_succeeds": {
        "action": "enumerate_internal_services",
        "tools": [
          "burp_suite",
          "curl",
          "custom_payloads"
        ],
        "next_phase": "internal_application_exploitation"
      },
      "if_admin_access_obtained": {
        "action": "attempt_file_upload_or_sqli",
        "alternatives": [
          "razor_dll_upload",
          "sql_injection",
          "dll_reverse_engineering"
        ],
        "decision_criteria": "based_on_available_functionality"
      },
      "if_shell_obtained": {
        "action": "privilege_escalation_enumeration",
        "focus": [
          "procmon_databases",
          "log_files",
          "configuration_files"
        ],
        "tools": [
          "linpeas",
          "manual_enumeration"
        ]
      }
    },
    "optimization_rules": [
      {
        "rule": "always_test_ssrf_on_proxy_services",
        "reasoning": "proxy_services_commonly_vulnerable_to_ssrf",
        "applicability": "skipper_proxy_or_similar_detected"
      },
      {
        "rule": "prioritize_dll_upload_on_dotnet_applications",
        "reasoning": "dotnet_applications_allow_dynamic_component_loading",
        "applicability": "blazor_or_aspnet_applications"
      },
      {
        "rule": "check_procmon_databases_for_credentials",
        "reasoning": "process_monitoring_logs_often_contain_sensitive_data",
        "applicability": "linux_systems_with_monitoring_tools"
      }
    ]
  },
  "applicability_rules": {
    "technique_rules": [
      {
        "technique": "SSRF via Skipper Proxy",
        "mitre_id": "T1190",
        "required_services": [
          "http",
          "skipper_proxy"
        ],
        "required_ports": [
          80
        ],
        "os_requirements": [
          "linux"
        ],
        "environmental_prerequisites": [
          "skipper_proxy_detected",
          "internal_services_accessible",
          "proxy_misconfiguration"
        ],
        "success_indicators": [
          "skipper_proxy_banner",
          "redirect_responses_present",
          "internal_network_reachable"
        ],
        "incompatible_with": [
          "proper_proxy_filtering",
          "network_segmentation",
          "ssrf_protections"
        ],
        "confidence_boosters": [
          "multiple_internal_services",
          "default_proxy_configuration",
          "error_message_disclosure"
        ],
        "typical_success_rate": 0.75,
        "estimated_time": "15-30 minutes"
      },
      {
        "technique": "Blazor Admin Panel Access",
        "mitre_id": "T1190",
        "required_services": [
          "http",
          "kestrel"
        ],
        "required_ports": [
          3000
        ],
        "os_requirements": [
          "linux"
        ],
        "environmental_prerequisites": [
          "dotnet_blazor_application",
          "kestrel_server_detected",
          "admin_panel_accessible"
        ],
        "success_indicators": [
          "kestrel_server_banner",
          "blazor_error_messages",
          "aspnetcore_components_present"
        ],
        "incompatible_with": [
          "proper_authentication",
          "network_isolation",
          "input_validation"
        ],
        "confidence_boosters": [
          "uri_format_exceptions",
          "navigation_manager_errors",
          "default_blazor_setup"
        ],
        "typical_success_rate": 0.68,
        "estimated_time": "20-45 minutes"
      },
      {
        "technique": "SQL Injection in Admin Panel",
        "mitre_id": "T1190",
        "required_services": [
          "http",
          "database"
        ],
        "required_ports": [
          80,
          3000
        ],
        "os_requirements": [
          "linux"
        ],
        "environmental_prerequisites": [
          "web_application_detected",
          "database_backend_present",
          "admin_functionality_accessible"
        ],
        "success_indicators": [
          "database_error_messages",
          "sql_injection_vectors",
          "admin_credential_extraction"
        ],
        "incompatible_with": [
          "parameterized_queries",
          "input_sanitization",
          "waf_protection"
        ],
        "confidence_boosters": [
          "error_based_sql_injection",
          "admin_password_in_database",
          "weak_input_validation"
        ],
        "typical_success_rate": 0.72,
        "estimated_time": "10-25 minutes"
      },
      {
        "technique": "Malicious Razor Component Upload",
        "mitre_id": "T1105",
        "required_services": [
          "http",
          "blazor"
        ],
        "required_ports": [
          3000
        ],
        "os_requirements": [
          "linux"
        ],
        "environmental_prerequisites": [
          "file_upload_functionality",
          "blazor_application_detected",
          "admin_access_obtained"
        ],
        "success_indicators": [
          "file_write_permissions",
          "razor_dll_execution",
          "reverse_shell_connection"
        ],
        "incompatible_with": [
          "file_type_restrictions",
          "code_execution_prevention",
          "sandboxed_execution"
        ],
        "confidence_boosters": [
          "unrestricted_file_upload",
          "dll_execution_allowed",
          "web_root_write_access"
        ],
        "typical_success_rate": 0.85,
        "estimated_time": "15-30 minutes"
      },
      {
        "technique": "ProcMon SQLite Database Analysis",
        "mitre_id": "T1005",
        "required_services": [
          "sqlite"
        ],
        "required_ports": [],
        "os_requirements": [
          "linux"
        ],
        "environmental_prerequisites": [
          "procmon_database_accessible",
          "sqlite_database_present",
          "logged_credentials_available"
        ],
        "success_indicators": [
          "sqlite_database_found",
          "credential_data_in_logs",
          "root_password_discovered"
        ],
        "incompatible_with": [
          "encrypted_databases",
          "log_sanitization",
          "restricted_file_access"
        ],
        "confidence_boosters": [
          "process_monitoring_enabled",
          "credential_logging_present",
          "database_file_readable"
        ],
        "typical_success_rate": 0.9,
        "estimated_time": "5-15 minutes"
      }
    ],
    "environmental_detectors": {
      "skipper_proxy": {
        "port_indicators": [
          80
        ],
        "service_indicators": [
          "http"
        ],
        "banner_indicators": [
          "Skipper Proxy"
        ],
        "confidence_threshold": 0.95
      },
      "blazor_application": {
        "port_indicators": [
          3000
        ],
        "service_indicators": [
          "http",
          "kestrel"
        ],
        "banner_indicators": [
          "Kestrel",
          "Microsoft.AspNetCore.Components"
        ],
        "confidence_threshold": 0.9
      },
      "dotnet_linux": {
        "port_indicators": [
          3000
        ],
        "service_indicators": [
          "kestrel"
        ],
        "technology_indicators": [
          "aspnetcore",
          "blazor",
          "dotnet"
        ],
        "confidence_threshold": 0.85
      }
    },
    "attack_prioritization": {
      "high_priority": [
        {
          "attack": "ssrf_via_skipper_proxy",
          "when": "skipper_proxy_detected",
          "reason": "enables_access_to_internal_services"
        },
        {
          "attack": "malicious_razor_upload",
          "when": "admin_access_obtained",
          "reason": "high_success_rate_direct_code_execution"
        }
      ],
      "medium_priority": [
        {
          "attack": "sql_injection_admin_panel",
          "when": "blazor_admin_accessible",
          "reason": "credential_extraction_possible"
        },
        {
          "attack": "procmon_database_analysis",
          "when": "file_system_access_obtained",
          "reason": "reliable_privilege_escalation_method"
        }
      ]
    }
  },
  "technique_intelligence": {
    "techniques": [
      {
        "name": "SSRF via Skipper Proxy",
        "mitre_id": "T1090.003",
        "category": "initial_access",
        "phase": "exploitation",
        "tools_used": [
          {
            "name": "curl",
            "command_template": "curl -H 'Host: {internal_host}' http://{target_ip}/",
            "actual_command": "curl -H 'Host: internal-admin.lantern.htb' http://10.10.11.29/",
            "output_pattern": "Internal admin interface response",
            "effectiveness_rating": 5,
            "reliability": 0.9
          }
        ],
        "prerequisites": [
          "skipper_proxy_accessible",
          "internal_services_discoverable",
          "host_header_manipulation_possible"
        ],
        "success_indicators": [
          "access_to_internal_services",
          "different_response_content",
          "admin_interface_accessible"
        ],
        "common_failures": [
          "proxy_configuration_blocks_internal_access",
          "host_header_validation_present",
          "network_segmentation_prevents_access"
        ],
        "follow_up_techniques": [
          "sql_injection",
          "dll_reverse_engineering",
          "file_upload_exploitation"
        ],
        "time_investment": "10-30 minutes",
        "skill_level": "intermediate"
      },
      {
        "name": "SQL Injection in Blazor Application",
        "mitre_id": "T1190",
        "category": "initial_access",
        "phase": "exploitation",
        "tools_used": [
          {
            "name": "sqlmap",
            "command_template": "sqlmap -u '{target_url}' --data '{post_data}' --dbs",
            "actual_command": "sqlmap -u 'http://internal-admin.lantern.htb/admin' --data 'username=admin&password=test' --dbs",
            "output_pattern": "Database enumeration results",
            "effectiveness_rating": 4,
            "reliability": 0.85
          },
          {
            "name": "manual_injection",
            "command_template": "' OR 1=1--",
            "actual_command": "admin' OR 1=1--",
            "success_factors": [
              "weak_input_validation",
              "direct_sql_queries"
            ],
            "effectiveness_rating": 4
          }
        ],
        "prerequisites": [
          "admin_interface_accessible",
          "login_form_vulnerable",
          "sql_backend_present"
        ],
        "success_indicators": [
          "authentication_bypass_successful",
          "admin_credentials_extracted",
          "database_access_gained"
        ],
        "common_failures": [
          "parameterized_queries_used",
          "input_validation_present",
          "waf_blocking_attempts"
        ],
        "follow_up_techniques": [
          "file_upload_exploitation",
          "razor_component_upload",
          "reverse_shell_deployment"
        ],
        "time_investment": "15-45 minutes",
        "skill_level": "intermediate"
      },
      {
        "name": "Malicious Razor Component Upload",
        "mitre_id": "T1505.003",
        "category": "persistence",
        "phase": "post_exploitation",
        "tools_used": [
          {
            "name": "custom_razor_dll",
            "command_template": "mcs -target:library -out:{component_name}.dll {source_file}.cs",
            "actual_command": "mcs -target:library -out:Shell.dll Shell.cs",
            "output_pattern": "Compiled DLL component",
            "effectiveness_rating": 5,
            "reliability": 0.95
          }
        ],
        "prerequisites": [
          "admin_access_to_blazor_app",
          "file_upload_functionality",
          "razor_component_support"
        ],
        "success_indicators": [
          "dll_uploaded_successfully",
          "component_executed_on_server",
          "reverse_shell_established"
        ],
        "common_failures": [
          "file_type_restrictions",
          "dll_validation_checks",
          "execution_context_limitations"
        ],
        "follow_up_techniques": [
          "privilege_escalation",
          "lateral_movement",
          "persistence_establishment"
        ],
        "time_investment": "20-60 minutes",
        "skill_level": "advanced"
      },
      {
        "name": "ProcMon SQLite Database Analysis",
        "mitre_id": "T1005",
        "category": "credential_access",
        "phase": "privilege_escalation",
        "tools_used": [
          {
            "name": "sqlite3",
            "command_template": "sqlite3 {database_file} 'SELECT * FROM {table_name} WHERE {condition};'",
            "actual_command": "sqlite3 procmon.db 'SELECT * FROM events WHERE process_name LIKE '%root%';'",
            "output_pattern": "Root credentials in logged events",
            "effectiveness_rating": 4,
            "reliability": 0.8
          },
          {
            "name": "strings",
            "command_template": "strings {database_file} | grep -i {search_term}",
            "actual_command": "strings procmon.db | grep -i password",
            "success_factors": [
              "credentials_logged_in_events",
              "database_accessible"
            ],
            "effectiveness_rating": 3
          }
        ],
        "prerequisites": [
          "procmon_database_accessible",
          "logged_events_contain_credentials",
          "sqlite_tools_available"
        ],
        "success_indicators": [
          "root_password_discovered",
          "privilege_escalation_successful",
          "full_system_access_gained"
        ],
        "common_failures": [
          "database_encrypted",
          "no_credentials_in_logs",
          "insufficient_permissions"
        ],
        "follow_up_techniques": [
          "su_authentication",
          "system_persistence",
          "data_exfiltration"
        ],
        "time_investment": "10-30 minutes",
        "skill_level": "beginner"
      }
    ],
    "tool_effectiveness": [
      {
        "tool": "Skipper Proxy",
        "use_case": "ssrf_exploitation",
        "effectiveness_rating": 4,
        "reliability": 0.85,
        "learning_curve": "medium",
        "essential_for": [
          "internal_service_access"
        ],
        "alternatives": [
          "nginx_proxy_exploitation",
          "apache_proxy_bypass"
        ],
        "best_practices": [
          "enumerate_internal_hostnames",
          "test_host_header_manipulation",
          "validate_internal_service_responses"
        ]
      },
      {
        "tool": "Blazor Framework",
        "use_case": "web_application_exploitation",
        "effectiveness_rating": 4,
        "reliability": 0.8,
        "learning_curve": "high",
        "essential_for": [
          "dotnet_application_testing"
        ],
        "alternatives": [
          "traditional_asp_net",
          "mvc_applications"
        ],
        "best_practices": [
          "understand_server_side_rendering",
          "test_component_upload_functionality",
          "analyze_dll_execution_context"
        ]
      }
    ],
    "command_sequences": [
      {
        "sequence_name": "ssrf_to_admin_access",
        "steps": [
          {
            "step": 1,
            "command": "curl -H 'Host: internal-admin.lantern.htb' http://10.10.11.29/",
            "purpose": "Access internal admin interface via SSRF",
            "expected_output": "Admin login page response"
          },
          {
            "step": 2,
            "command": "sqlmap -u 'http://internal-admin.lantern.htb/login' --data 'username=admin&password=test'",
            "purpose": "Test for SQL injection in login form",
            "expected_output": "SQL injection vulnerability confirmed"
          },
          {
            "step": 3,
            "command": "curl -X POST -d \"username=admin' OR 1=1--&password=anything\" http://internal-admin.lantern.htb/login",
            "purpose": "Bypass authentication via SQL injection",
            "expected_output": "Admin dashboard access"
          }
        ],
        "success_rate": 0.75,
        "typical_duration": "30-60 minutes"
      },
      {
        "sequence_name": "razor_component_shell",
        "steps": [
          {
            "step": 1,
            "command": "mcs -target:library -out:Shell.dll Shell.cs",
            "purpose": "Compile malicious Razor component",
            "expected_output": "Shell.dll created successfully"
          },
          {
            "step": 2,
            "command": "curl -X POST -F 'file=@Shell.dll' http://internal-admin.lantern.htb/upload",
            "purpose": "Upload malicious DLL component",
            "expected_output": "File uploaded successfully"
          },
          {
            "step": 3,
            "command": "nc -lvnp 4444",
            "purpose": "Listen for reverse shell connection",
            "expected_output": "Shell connection established"
          }
        ],
        "success_rate": 0.8,
        "typical_duration": "20-45 minutes"
      }
    ]
  },
  "metadata": {
    "basic_metadata": {
      "name": "Lantern",
      "difficulty": "Hard",
      "os": "Linux",
      "platform": "HackTheBox",
      "release_date": "2024-08-17",
      "author": "clv",
      "estimated_time": "4-6 hours"
    },
    "intelligence_metadata": {
      "attack_complexity": "high",
      "skill_level_required": "advanced",
      "primary_attack_vectors": [
        "ssrf",
        "web_application",
        "file_upload"
      ],
      "key_vulnerabilities": [
        "skipper_proxy_ssrf",
        "sql_injection",
        "dll_reverse_engineering",
        "razor_component_upload"
      ],
      "environment_type": "modern_web_applications",
      "real_world_relevance": "high",
      "learning_value": [
        "proxy_exploitation",
        "blazor_security",
        "dotnet_reverse_engineering",
        "procmon_analysis"
      ],
      "prerequisite_knowledge": [
        "web_application_security",
        "ssrf_techniques",
        "dotnet_fundamentals",
        "reverse_engineering"
      ]
    },
    "categorization": {
      "primary_category": "web_application",
      "subcategories": [
        "proxy_exploitation",
        "dotnet_security",
        "file_upload_attacks"
      ],
      "attack_types": [
        "ssrf",
        "sql_injection",
        "privilege_escalation",
        "code_execution"
      ],
      "defensive_lessons": [
        "proxy_configuration",
        "input_validation",
        "file_upload_restrictions",
        "process_monitoring_security"
      ]
    },
    "similarity_markers": {
      "similar_boxes": [
        "Blazorized",
        "Outdated",
        "Acute"
      ],
      "similarity_reasons": [
        "dotnet_applications",
        "proxy_exploitation",
        "multi_stage_web_attacks"
      ],
      "unique_aspects": [
        "skipper_proxy_ssrf",
        "blazor_admin_interface",
        "procmon_sqlite_analysis",
        "razor_dll_upload"
      ],
      "difficulty_factors": [
        "complex_attack_chain",
        "dotnet_reverse_engineering",
        "proxy_configuration_knowledge",
        "modern_frameworks"
      ]
    }
  },
  "extraction_metadata": {
    "parse_date": "2025-07-04T12:28:31.573636",
    "original_file": "0xdf_writeups/Htb Lantern.md",
    "content_length": 67245,
    "extraction_version": "2.0-claude",
    "model_used": "claude-sonnet-4-20250514"
  },
  "intelligence_confidence": 1.0,
  "quality_breakdown": {
    "scenario_uniqueness": 1.0,
    "success_logic_clarity": 1.0,
    "applicability_completeness": 1.0,
    "decision_tree_depth": 1.0,
    "technique_actionability": 1.0
  }
}