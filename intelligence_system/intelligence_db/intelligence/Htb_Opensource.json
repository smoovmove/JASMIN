{
  "writeup_id": "Htb_Opensource",
  "scenario_fingerprint": {
    "scenario_name": "flask_web_app_source_disclosure_lfi",
    "primary_services": [
      "http",
      "ssh",
      "git"
    ],
    "port_signature": "22+80+3000",
    "service_combination": "ssh+werkzeug+gitea",
    "os_family": "linux",
    "environment_type": "containerized_web_app",
    "entry_vector": "source_code_disclosure",
    "privilege_path": "lfi_to_flask_debug_to_git_hooks_root",
    "attack_complexity": "medium",
    "estimated_time": "90-120 minutes",
    "scenario_confidence": 0.92,
    "distinguishing_factors": [
      "downloadable_source_zip",
      "git_repo_in_source",
      "flask_werkzeug_server",
      "directory_traversal_vulnerability",
      "flask_debug_pin_calculation"
    ],
    "environmental_clues": [
      "werkzeug_python_server_header",
      "docker_containerized_app",
      "supervisord_process_manager",
      "filtered_port_3000_gitea",
      "git_hooks_cron_privilege_escalation"
    ],
    "similar_scenarios": [
      "flask_lfi_debug_pin",
      "git_source_disclosure",
      "container_escape_scenarios"
    ],
    "unique_aspects": [
      "recursive_replace_bypass",
      "flask_source_file_overwrite",
      "gitea_ssh_key_discovery",
      "git_hooks_root_escalation"
    ]
  },
  "success_patterns": {
    "success_factors": [
      {
        "technique": "Git Repository Analysis",
        "success_reason": "Development branch contained hardcoded credentials in deleted .vscode/settings.json",
        "prerequisite_indicators": [
          "git_repository_present",
          "multiple_branches_exist",
          "development_artifacts_available"
        ],
        "recognition_patterns": [
          "source code download available",
          ".git directory in source",
          "dev/development branches exist",
          "deleted files in git history"
        ],
        "failure_modes": [
          "git_history_cleaned",
          "no_sensitive_data_committed",
          "single_branch_only"
        ],
        "environmental_factors": [
          "developer_inexperience",
          "poor_git_hygiene",
          "ide_config_files_committed"
        ],
        "success_probability": 0.75,
        "typical_timeframe": "10-20 minutes"
      },
      {
        "technique": "Directory Traversal via Flask send_file",
        "success_reason": "Path traversal filtering only removed '../' but send_file accepts absolute paths",
        "prerequisite_indicators": [
          "flask_application_identified",
          "file_upload_functionality",
          "source_code_available"
        ],
        "recognition_patterns": [
          "werkzeug server headers",
          "flask error messages",
          "path parameter in routes",
          "incomplete path sanitization"
        ],
        "failure_modes": [
          "proper_path_validation",
          "chroot_jail_implemented",
          "whitelist_based_filtering"
        ],
        "environmental_factors": [
          "containerized_application",
          "python_flask_framework",
          "developer_security_inexperience"
        ],
        "success_probability": 0.85,
        "typical_timeframe": "15-30 minutes"
      },
      {
        "technique": "Flask Debug PIN Calculation",
        "success_reason": "Directory traversal allowed reading system files needed for PIN calculation",
        "prerequisite_indicators": [
          "flask_debug_mode_accessible",
          "file_read_capability",
          "system_file_access"
        ],
        "recognition_patterns": [
          "werkzeug debugger interface",
          "can read /proc/self/environ",
          "can read /sys/class/net/eth0/address",
          "flask application in debug mode"
        ],
        "failure_modes": [
          "debug_mode_disabled",
          "system_files_inaccessible",
          "pin_calculation_blocked"
        ],
        "environmental_factors": [
          "development_environment_exposed",
          "container_with_proc_filesystem",
          "insufficient_file_permissions_hardening"
        ],
        "success_probability": 0.9,
        "typical_timeframe": "20-40 minutes"
      }
    ],
    "critical_discoveries": [
      {
        "discovery": "Hardcoded credentials in git history",
        "discovery_method": "Git branch analysis and commit diff review",
        "why_critical": "Provided authentication to internal Gitea instance",
        "how_to_recognize": [
          "multiple git branches present",
          "deleted configuration files",
          "development vs production branches",
          "IDE configuration files in history"
        ],
        "follow_up_actions": [
          "test_credentials_on_all_services",
          "check_internal_network_access",
          "enumerate_git_repositories"
        ]
      },
      {
        "discovery": "Internal Gitea instance on port 3000",
        "discovery_method": "Network enumeration from compromised container",
        "why_critical": "Contained SSH private keys for host access",
        "how_to_recognize": [
          "filtered ports in nmap",
          "internal service discovery",
          "git-related services",
          "development infrastructure"
        ],
        "follow_up_actions": [
          "authenticate_with_found_credentials",
          "enumerate_all_repositories",
          "search_for_ssh_keys"
        ]
      },
      {
        "discovery": "Root cron job executing git commands",
        "discovery_method": "Process monitoring and cron analysis",
        "why_critical": "Allowed privilege escalation via git hooks",
        "how_to_recognize": [
          "git processes running as root",
          "automated git operations",
          "cron jobs with git commands",
          "git hooks directory writable"
        ],
        "follow_up_actions": [
          "create_malicious_git_hooks",
          "wait_for_cron_execution",
          "establish_root_shell"
        ]
      }
    ],
    "escalation_keys": [
      {
        "privilege_level": "container_user",
        "escalation_method": "Flask_debug_console_to_RCE",
        "why_possible": "Debug mode enabled and PIN calculable from system files",
        "recognition_signs": [
          "werkzeug_debugger_available",
          "system_files_readable",
          "flask_debug_pin_calculable"
        ],
        "exploitation_path": "Directory Traversal → System File Read → PIN Calculation → Debug Console → RCE"
      },
      {
        "privilege_level": "container_user",
        "escalation_method": "Internal_service_access_to_host",
        "why_possible": "Container had network access to internal Gitea with valid credentials",
        "recognition_signs": [
          "internal_network_accessible",
          "valid_credentials_available",
          "ssh_keys_in_repositories"
        ],
        "exploitation_path": "Container Access → Internal Gitea → SSH Private Key → Host Shell"
      },
      {
        "privilege_level": "host_user",
        "escalation_method": "Git_hooks_privilege_escalation",
        "why_possible": "Root cron job executed git commands in user-controlled repository",
        "recognition_signs": [
          "git_processes_as_root",
          "writable_git_hooks_directory",
          "automated_git_operations"
        ],
        "exploitation_path": "Host Access → Git Hook Creation → Cron Execution → Root Shell"
      }
    ]
  },
  "decision_tree": {
    "decision_points": [
      {
        "step": 1,
        "situation": "Found HTTP service on port 80 with downloadable source code",
        "decision": "Download and analyze source code for vulnerabilities",
        "reasoning": "Source code analysis provides highest confidence vulnerability identification",
        "confidence": 0.98,
        "alternatives": [
          {
            "option": "directory_bruteforce",
            "when": "if source not available"
          },
          {
            "option": "web_vulnerability_scanning",
            "when": "if source analysis incomplete"
          }
        ],
        "success_indicators": [
          "source_code_downloaded",
          "git_repository_found",
          "application_structure_understood"
        ],
        "next_decision": "analyze_git_history_and_branches"
      },
      {
        "step": 2,
        "situation": "Git repository found with multiple branches (public/dev)",
        "decision": "Check all branches for sensitive information and configuration differences",
        "reasoning": "Dev branches often contain credentials, debug settings, and additional attack surface",
        "confidence": 0.92,
        "prerequisites": [
          "git_repository_access"
        ],
        "success_indicators": [
          "credentials_found",
          "debug_mode_enabled",
          "additional_endpoints_discovered"
        ],
        "failure_fallbacks": [
          "static_code_analysis",
          "configuration_file_review"
        ]
      },
      {
        "step": 3,
        "situation": "Flask application with file upload and path traversal protection",
        "decision": "Test for path traversal bypass using absolute paths instead of relative",
        "reasoning": "os.path.join behavior allows absolute path override when second parameter starts with /",
        "confidence": 0.85,
        "prerequisites": [
          "upload_functionality_identified",
          "path_sanitization_understood"
        ],
        "success_indicators": [
          "file_written_outside_uploads",
          "arbitrary_file_read_achieved"
        ],
        "failure_fallbacks": [
          "flask_debug_pin_calculation",
          "template_injection_testing"
        ]
      },
      {
        "step": 4,
        "situation": "Directory traversal confirmed, Flask debug mode enabled",
        "decision": "Calculate Flask debug PIN for interactive shell access",
        "reasoning": "Flask debug PIN provides direct code execution when debug mode is enabled",
        "confidence": 0.88,
        "prerequisites": [
          "directory_traversal_working",
          "flask_debug_confirmed"
        ],
        "success_indicators": [
          "machine_id_obtained",
          "mac_address_found",
          "debug_pin_calculated"
        ],
        "failure_fallbacks": [
          "overwrite_flask_source_files",
          "template_injection"
        ]
      }
    ],
    "branching_logic": {
      "if_source_code_available": {
        "action": "prioritize_source_analysis_over_blackbox_testing",
        "tools": [
          "git",
          "code_review",
          "grep"
        ],
        "next_phase": "git_repository_analysis"
      },
      "if_git_branches_found": {
        "action": "examine_all_branches_for_differences",
        "alternatives": [
          "dev_branch",
          "staging_branch",
          "feature_branches"
        ],
        "decision_criteria": "based_on_branch_names_and_commit_history"
      },
      "if_path_traversal_found": {
        "action": "choose_exploitation_method",
        "alternatives": [
          "flask_debug_pin",
          "file_overwrite",
          "credential_extraction"
        ],
        "decision_criteria": "based_on_flask_debug_status_and_file_permissions"
      },
      "if_container_shell_obtained": {
        "action": "enumerate_container_escape_vectors",
        "tools": [
          "network_scanning",
          "process_enumeration",
          "mount_analysis"
        ],
        "next_phase": "lateral_movement_or_privilege_escalation"
      }
    },
    "optimization_rules": [
      {
        "rule": "always_check_git_history_when_source_available",
        "reasoning": "git_repositories_frequently_leak_credentials_and_sensitive_config",
        "applicability": "any_application_with_git_repository"
      },
      {
        "rule": "test_absolute_path_injection_in_path_join_functions",
        "reasoning": "os_path_join_allows_absolute_path_override_bypassing_relative_restrictions",
        "applicability": "python_applications_using_os_path_join"
      },
      {
        "rule": "prioritize_flask_debug_pin_when_debug_mode_enabled",
        "reasoning": "provides_direct_code_execution_with_high_success_rate",
        "applicability": "flask_applications_with_debug_mode"
      },
      {
        "rule": "examine_filtered_ports_from_inside_compromised_systems",
        "reasoning": "internal_services_often_provide_lateral_movement_opportunities",
        "applicability": "when_initial_foothold_obtained"
      }
    ]
  },
  "applicability_rules": {
    "technique_rules": [
      {
        "technique": "Directory Traversal",
        "mitre_id": "T1083",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          8080,
          8443
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "web_application_present",
          "file_upload_functionality",
          "insufficient_path_validation"
        ],
        "success_indicators": [
          "file_path_parameters_in_urls",
          "upload_functionality_present",
          "error_messages_reveal_paths"
        ],
        "incompatible_with": [
          "strict_path_validation",
          "chroot_jail",
          "whitelist_only_paths"
        ],
        "confidence_boosters": [
          "source_code_available",
          "recursive_replace_function_present",
          "flask_werkzeug_framework"
        ],
        "typical_success_rate": 0.75,
        "estimated_time": "10-30 minutes"
      },
      {
        "technique": "Flask Debug Pin Exploitation",
        "mitre_id": "T1190",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          8080,
          8443
        ],
        "os_requirements": [
          "linux"
        ],
        "environmental_prerequisites": [
          "flask_application_detected",
          "werkzeug_debug_mode_enabled",
          "file_read_capability"
        ],
        "success_indicators": [
          "werkzeug_server_header",
          "python_stack_traces_visible",
          "debug_console_accessible"
        ],
        "incompatible_with": [
          "production_mode_strict",
          "debug_disabled",
          "restricted_file_access"
        ],
        "confidence_boosters": [
          "machine_id_readable",
          "proc_self_cgroup_accessible",
          "flask_app_py_readable"
        ],
        "typical_success_rate": 0.85,
        "estimated_time": "15-45 minutes"
      },
      {
        "technique": "Git Repository Information Disclosure",
        "mitre_id": "T1083",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443,
          8080,
          8443
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "git_directory_exposed",
          "source_code_downloadable",
          "version_control_artifacts_present"
        ],
        "success_indicators": [
          "dot_git_directory_accessible",
          "git_config_readable",
          "commit_history_available"
        ],
        "incompatible_with": [
          "git_directory_protected",
          "clean_deployment_process",
          "vcs_artifacts_removed"
        ],
        "confidence_boosters": [
          "development_credentials_in_history",
          "production_config_differences",
          "multiple_branches_present"
        ],
        "typical_success_rate": 0.9,
        "estimated_time": "5-20 minutes"
      },
      {
        "technique": "Git Hook Privilege Escalation",
        "mitre_id": "T1053.003",
        "required_services": [
          "ssh"
        ],
        "required_ports": [
          22
        ],
        "os_requirements": [
          "linux"
        ],
        "environmental_prerequisites": [
          "git_repository_with_hooks",
          "cron_job_running_git_commands",
          "write_access_to_hooks_directory"
        ],
        "success_indicators": [
          "git_hooks_directory_writable",
          "automated_git_operations_detected",
          "cron_jobs_visible"
        ],
        "incompatible_with": [
          "hooks_directory_protected",
          "no_automated_git_operations",
          "strict_file_permissions"
        ],
        "confidence_boosters": [
          "root_owned_cron_jobs",
          "git_pull_in_crontab",
          "development_environment_indicators"
        ],
        "typical_success_rate": 0.8,
        "estimated_time": "10-25 minutes"
      }
    ],
    "environmental_detectors": {
      "flask_application": {
        "port_indicators": [
          80,
          443,
          5000,
          8080
        ],
        "service_indicators": [
          "http",
          "https"
        ],
        "banner_indicators": [
          "Werkzeug",
          "Flask",
          "Python"
        ],
        "confidence_threshold": 0.85
      },
      "git_repository": {
        "port_indicators": [
          80,
          443,
          3000,
          8080
        ],
        "service_indicators": [
          "http",
          "https",
          "git"
        ],
        "banner_indicators": [
          "git",
          "Gitea",
          "GitLab"
        ],
        "confidence_threshold": 0.9
      },
      "docker_container": {
        "port_indicators": [
          80,
          443,
          2375,
          2376
        ],
        "service_indicators": [
          "http",
          "https",
          "docker"
        ],
        "banner_indicators": [
          "Docker",
          "alpine",
          "supervisord"
        ],
        "confidence_threshold": 0.75
      }
    },
    "attack_prioritization": {
      "high_priority": [
        {
          "attack": "git_information_disclosure",
          "when": "source_code_downloadable",
          "reason": "often_reveals_credentials_and_vulnerabilities"
        },
        {
          "attack": "directory_traversal",
          "when": "file_upload_functionality_detected",
          "reason": "high_success_rate_with_source_code"
        }
      ],
      "medium_priority": [
        {
          "attack": "flask_debug_pin",
          "when": "werkzeug_detected_and_file_read_available",
          "reason": "reliable_but_requires_multiple_prerequisites"
        },
        {
          "attack": "git_hook_privilege_escalation",
          "when": "git_repository_and_cron_detected",
          "reason": "effective_but_requires_initial_access"
        }
      ]
    }
  },
  "technique_intelligence": {
    "techniques": [
      {
        "name": "Directory Traversal via os.path.join",
        "mitre_id": "T1083",
        "category": "discovery",
        "phase": "initial_access",
        "tools_used": [
          {
            "name": "curl",
            "command_template": "curl --path-as-is http://{target}/uploads/../{absolute_path}",
            "actual_command": "curl --path-as-is http://10.10.11.164/uploads/..//etc/os-release",
            "output_pattern": "File contents returned directly",
            "effectiveness_rating": 5,
            "reliability": 0.95
          }
        ],
        "prerequisites": [
          "vulnerable_os_path_join_implementation",
          "absolute_path_knowledge",
          "web_application_accessible"
        ],
        "success_indicators": [
          "file_contents_returned",
          "no_error_messages",
          "system_information_disclosed"
        ],
        "common_failures": [
          "url_normalization_blocking_double_slash",
          "insufficient_permissions",
          "file_not_found"
        ],
        "follow_up_techniques": [
          "flask_debug_pin_calculation",
          "source_code_analysis",
          "credential_harvesting"
        ],
        "time_investment": "5-15 minutes",
        "skill_level": "intermediate"
      },
      {
        "name": "Git Repository Analysis",
        "mitre_id": "T1213",
        "category": "collection",
        "phase": "reconnaissance",
        "tools_used": [
          {
            "name": "git",
            "command_template": "git log --oneline && git branch -a && git checkout {branch}",
            "actual_command": "git checkout dev",
            "output_pattern": "Commit history and branch information",
            "effectiveness_rating": 5,
            "reliability": 0.98
          },
          {
            "name": "git diff",
            "command_template": "git diff {commit1} {commit2}",
            "actual_command": "git diff c41fede a76f8f7",
            "success_factors": [
              "credentials_in_config_files",
              "debug_settings_exposed"
            ],
            "effectiveness_rating": 4
          }
        ],
        "prerequisites": [
          "git_repository_accessible",
          "source_code_downloadable",
          "multiple_branches_exist"
        ],
        "success_indicators": [
          "credentials_discovered",
          "debug_mode_identified",
          "production_vs_dev_differences_found"
        ],
        "common_failures": [
          "no_sensitive_data_in_commits",
          "single_branch_only",
          "sanitized_repository"
        ],
        "follow_up_techniques": [
          "credential_testing",
          "debug_mode_exploitation",
          "source_code_vulnerability_analysis"
        ],
        "time_investment": "10-30 minutes",
        "skill_level": "beginner"
      },
      {
        "name": "Flask Application Source Analysis",
        "mitre_id": "T1213.002",
        "category": "collection",
        "phase": "reconnaissance",
        "tools_used": [
          {
            "name": "manual_code_review",
            "command_template": "grep -r '{pattern}' {source_directory}",
            "actual_command": "grep -r 'os.path.join' app/",
            "output_pattern": "Vulnerable code patterns identified",
            "effectiveness_rating": 5,
            "reliability": 0.9
          }
        ],
        "prerequisites": [
          "source_code_available",
          "flask_application_identified",
          "python_knowledge"
        ],
        "success_indicators": [
          "path_traversal_vulnerability_found",
          "file_upload_functionality_identified",
          "debug_mode_configuration_discovered"
        ],
        "common_failures": [
          "obfuscated_source_code",
          "incomplete_source_provided",
          "complex_security_controls"
        ],
        "follow_up_techniques": [
          "directory_traversal_exploitation",
          "file_upload_abuse",
          "debug_pin_calculation"
        ],
        "time_investment": "15-45 minutes",
        "skill_level": "intermediate"
      }
    ],
    "tool_effectiveness": [
      {
        "tool": "curl",
        "use_case": "directory_traversal_exploitation",
        "effectiveness_rating": 5,
        "reliability": 0.95,
        "learning_curve": "low",
        "essential_for": [
          "web_application_testing"
        ],
        "alternatives": [
          "burp_suite",
          "wget",
          "python_requests"
        ],
        "best_practices": [
          "use_path_as_is_flag_for_traversal",
          "test_multiple_traversal_patterns",
          "combine_with_absolute_paths"
        ]
      },
      {
        "tool": "git",
        "use_case": "source_code_intelligence_gathering",
        "effectiveness_rating": 5,
        "reliability": 0.98,
        "learning_curve": "low",
        "essential_for": [
          "source_code_analysis"
        ],
        "alternatives": [
          "manual_file_inspection"
        ],
        "best_practices": [
          "check_all_branches_for_sensitive_data",
          "analyze_commit_differences",
          "look_for_configuration_changes"
        ]
      }
    ],
    "command_sequences": [
      {
        "sequence_name": "git_repository_analysis_to_credential_discovery",
        "steps": [
          {
            "step": 1,
            "command": "wget http://target/download -O source.zip && unzip source.zip",
            "purpose": "Download and extract source code",
            "expected_output": "Source files with .git directory"
          },
          {
            "step": 2,
            "command": "git log --oneline && git branch -a",
            "purpose": "Identify available branches and commits",
            "expected_output": "Multiple branches including dev branch"
          },
          {
            "step": 3,
            "command": "git checkout dev",
            "purpose": "Switch to development branch",
            "expected_output": "Access to development configuration"
          },
          {
            "step": 4,
            "command": "git diff public dev",
            "purpose": "Compare production vs development",
            "expected_output": "Debug settings and potential credentials"
          }
        ],
        "success_rate": 0.85,
        "typical_duration": "10-20 minutes"
      },
      {
        "sequence_name": "directory_traversal_exploitation",
        "steps": [
          {
            "step": 1,
            "command": "curl --path-as-is http://target/uploads/..//etc/passwd",
            "purpose": "Test basic directory traversal",
            "expected_output": "System user accounts"
          },
          {
            "step": 2,
            "command": "curl --path-as-is http://target/uploads/..//app/run.py",
            "purpose": "Read application source code",
            "expected_output": "Flask application entry point"
          },
          {
            "step": 3,
            "command": "curl --path-as-is http://target/uploads/..//proc/self/environ",
            "purpose": "Extract environment variables",
            "expected_output": "Application configuration and paths"
          }
        ],
        "success_rate": 0.9,
        "typical_duration": "5-15 minutes"
      }
    ]
  },
  "metadata": {
    "basic_metadata": {
      "name": "OpenSource",
      "difficulty": "Easy",
      "os": "Linux",
      "platform": "HackTheBox",
      "release_date": "2022-05-21",
      "author": "irogir",
      "estimated_time": "60-90 minutes"
    },
    "intelligence_metadata": {
      "attack_complexity": "medium",
      "skill_level_required": "intermediate",
      "primary_attack_vectors": [
        "web_application",
        "source_code_analysis",
        "directory_traversal"
      ],
      "key_vulnerabilities": [
        "source_code_disclosure",
        "directory_traversal",
        "flask_debug_pin",
        "git_hooks_privilege_escalation"
      ],
      "environment_type": "web_application_with_git_integration",
      "real_world_relevance": "high",
      "learning_value": [
        "source_code_analysis",
        "flask_exploitation",
        "git_security",
        "cron_abuse"
      ],
      "prerequisite_knowledge": [
        "web_application_security",
        "flask_framework",
        "git_fundamentals",
        "linux_privilege_escalation"
      ]
    },
    "categorization": {
      "primary_category": "web_application",
      "subcategories": [
        "source_code_analysis",
        "directory_traversal",
        "privilege_escalation"
      ],
      "attack_types": [
        "information_disclosure",
        "arbitrary_file_read_write",
        "code_execution",
        "privilege_escalation"
      ],
      "defensive_lessons": [
        "secure_source_code_handling",
        "input_validation",
        "file_system_permissions",
        "cron_security"
      ]
    },
    "similarity_markers": {
      "similar_boxes": [
        "Knife",
        "Previse",
        "Writer"
      ],
      "similarity_reasons": [
        "web_application_focus",
        "source_code_analysis",
        "flask_framework",
        "git_integration"
      ],
      "unique_aspects": [
        "flask_debug_pin_calculation",
        "git_hooks_escalation",
        "gitea_integration"
      ],
      "difficulty_factors": [
        "multiple_attack_paths",
        "source_code_analysis_required",
        "flask_internals_knowledge"
      ]
    }
  },
  "extraction_metadata": {
    "parse_date": "2025-07-04T21:29:37.015574",
    "original_file": "0xdf_writeups/Htb Opensource.md",
    "content_length": 38270,
    "extraction_version": "2.0-claude",
    "model_used": "claude-sonnet-4-20250514"
  },
  "intelligence_confidence": 1.0,
  "quality_breakdown": {
    "scenario_uniqueness": 1.0,
    "success_logic_clarity": 1.0,
    "applicability_completeness": 1.0,
    "decision_tree_depth": 1.0,
    "technique_actionability": 1.0
  }
}