{
  "writeup_id": "Htb_Joker",
  "scenario_fingerprint": {
    "scenario_name": "linux_squid_proxy_tftp_enumeration",
    "primary_services": [
      "tftp",
      "squid-proxy",
      "ssh"
    ],
    "port_signature": "22+69+3128",
    "service_combination": "ssh+tftp+squid-proxy",
    "os_family": "linux",
    "environment_type": "proxy_server",
    "entry_vector": "tftp_config_disclosure",
    "privilege_path": "proxy_access_to_internal_services",
    "attack_complexity": "medium",
    "estimated_time": "60-90 minutes",
    "scenario_confidence": 0.88,
    "distinguishing_factors": [
      "tftp_anonymous_access",
      "squid_config_exposure",
      "basic_auth_hash_cracking",
      "proxy_bypass_localhost"
    ],
    "environmental_clues": [
      "squid_proxy_authentication_required",
      "tftp_service_enabled",
      "apache_md5_hash_format",
      "kalamari_realm_name"
    ],
    "similar_scenarios": [
      "proxy_enumeration_boxes",
      "tftp_disclosure_scenarios"
    ],
    "unique_aspects": [
      "tftp_squid_config_retrieval",
      "proxy_credential_discovery",
      "localhost_service_enumeration"
    ]
  },
  "success_patterns": {
    "success_factors": [
      {
        "technique": "TFTP_enumeration",
        "success_reason": "TFTP service allowed unauthenticated access to configuration files",
        "prerequisite_indicators": [
          "tftp_service_running",
          "udp_69_accessible",
          "configuration_files_readable"
        ],
        "recognition_patterns": [
          "UDP 69 open/filtered in nmap",
          "access violation vs file not found errors",
          "common config file paths work"
        ],
        "failure_modes": [
          "tftp_service_disabled",
          "file_permissions_restricted",
          "chroot_jail_configured"
        ],
        "environmental_factors": [
          "default_tftp_configuration",
          "insufficient_access_controls",
          "legacy_service_exposure"
        ],
        "success_probability": 0.75,
        "typical_timeframe": "10-30 minutes"
      },
      {
        "technique": "squid_proxy_credential_extraction",
        "success_reason": "Squid password file accessible via TFTP with weak hash",
        "prerequisite_indicators": [
          "squid_proxy_requires_auth",
          "config_file_reveals_password_location",
          "password_file_accessible"
        ],
        "recognition_patterns": [
          "407 Proxy Authentication Required",
          "auth_param basic program in config",
          "Apache MD5 hash format ($apr1$)"
        ],
        "failure_modes": [
          "strong_password_policy",
          "password_file_protected",
          "different_auth_mechanism"
        ],
        "environmental_factors": [
          "weak_password_selection",
          "default_squid_setup",
          "shared_tftp_squid_access"
        ],
        "success_probability": 0.82,
        "typical_timeframe": "15-45 minutes"
      },
      {
        "technique": "proxy_localhost_bypass",
        "success_reason": "Squid proxy allowed access to localhost services not externally accessible",
        "prerequisite_indicators": [
          "authenticated_proxy_access",
          "localhost_services_running",
          "proxy_config_allows_localhost"
        ],
        "recognition_patterns": [
          "different responses for external vs 127.0.0.1",
          "services on localhost ports",
          "proxy authentication successful"
        ],
        "failure_modes": [
          "localhost_access_denied",
          "no_internal_services",
          "proper_proxy_hardening"
        ],
        "environmental_factors": [
          "commented_out_localhost_protection",
          "internal_service_exposure",
          "insufficient_network_segmentation"
        ],
        "success_probability": 0.68,
        "typical_timeframe": "5-20 minutes"
      }
    ],
    "critical_discoveries": [
      {
        "discovery": "squid configuration file via TFTP",
        "discovery_method": "TFTP get /etc/squid/squid.conf",
        "why_critical": "Revealed authentication mechanism and password file location",
        "how_to_recognize": [
          "TFTP service on UDP 69",
          "common configuration file paths",
          "auth_param directives in config"
        ],
        "follow_up_actions": [
          "extract_password_file_location",
          "download_password_file",
          "crack_discovered_hashes"
        ]
      },
      {
        "discovery": "localhost web service on port 80",
        "discovery_method": "proxy enumeration of 127.0.0.1:80",
        "why_critical": "Exposed internal application not accessible externally",
        "how_to_recognize": [
          "different response than external access",
          "web application interface",
          "additional functionality exposed"
        ],
        "follow_up_actions": [
          "enumerate_web_application",
          "test_for_code_execution",
          "scan_other_localhost_ports"
        ]
      }
    ],
    "escalation_keys": [
      {
        "privilege_level": "unauthenticated_external",
        "escalation_method": "TFTP_to_proxy_access",
        "why_possible": "TFTP exposed configuration files containing authentication credentials",
        "recognition_signs": [
          "tftp_service_accessible",
          "configuration_files_readable",
          "weak_password_hashes"
        ],
        "exploitation_path": "TFTP enum → config files → password hash → crack → proxy access"
      },
      {
        "privilege_level": "proxy_authenticated",
        "escalation_method": "localhost_service_access",
        "why_possible": "Proxy configuration allowed localhost access to internal services",
        "recognition_signs": [
          "localhost_protection_commented_out",
          "internal_services_running",
          "proxy_allows_127.0.0.1_access"
        ],
        "exploitation_path": "Proxy auth → localhost enumeration → internal service access"
      }
    ]
  },
  "decision_tree": {
    "decision_points": [
      {
        "step": 1,
        "situation": "Found only SSH (22) and HTTP Proxy (3128) open on TCP scan",
        "decision": "Run comprehensive UDP scan to find additional services",
        "reasoning": "Limited TCP attack surface suggests UDP services may be available",
        "confidence": 0.75,
        "alternatives": [
          {
            "option": "proxy_enumeration",
            "when": "if UDP scan fails"
          },
          {
            "option": "ssh_bruteforce",
            "when": "if no other services found"
          }
        ],
        "success_indicators": [
          "tftp_port_69_discovered",
          "additional_udp_services_found"
        ],
        "next_decision": "enumerate_tftp_service"
      },
      {
        "step": 2,
        "situation": "TFTP service discovered on UDP 69",
        "decision": "Target service-specific configuration files first",
        "reasoning": "TFTP lacks directory listing, must guess files based on known services",
        "confidence": 0.85,
        "prerequisites": [
          "tftp_access_confirmed",
          "known_services_identified"
        ],
        "success_indicators": [
          "squid_config_retrieved",
          "credentials_found"
        ],
        "failure_fallbacks": [
          "common_system_files",
          "application_configs"
        ]
      },
      {
        "step": 3,
        "situation": "Squid proxy requires authentication",
        "decision": "Extract credentials from TFTP-accessible config files",
        "reasoning": "Proxy auth suggests credential storage in accessible config",
        "confidence": 0.9,
        "prerequisites": [
          "tftp_file_access",
          "squid_service_identified"
        ],
        "success_indicators": [
          "password_file_location_found",
          "hash_extracted"
        ],
        "next_decision": "crack_extracted_hash"
      },
      {
        "step": 4,
        "situation": "Obtained proxy credentials after hash cracking",
        "decision": "Enumerate localhost services through authenticated proxy",
        "reasoning": "Proxy may provide access to internal services not externally accessible",
        "confidence": 0.95,
        "prerequisites": [
          "proxy_authentication_working"
        ],
        "success_indicators": [
          "internal_webserver_discovered",
          "python_console_found"
        ],
        "next_decision": "exploit_internal_services"
      }
    ],
    "branching_logic": {
      "if_limited_tcp_services": {
        "action": "comprehensive_udp_scan",
        "tools": [
          "nmap",
          "udp_scanner"
        ],
        "next_phase": "udp_service_enumeration"
      },
      "if_tftp_discovered": {
        "action": "target_service_configs",
        "file_targets": [
          "/etc/squid/squid.conf",
          "/etc/squid/passwords"
        ],
        "reasoning": "service_specific_configs_most_likely_accessible"
      },
      "if_proxy_creds_found": {
        "action": "internal_network_enumeration",
        "targets": [
          "127.0.0.1",
          "localhost",
          "internal_ip_ranges"
        ],
        "tools": [
          "curl",
          "gobuster_with_proxy"
        ]
      },
      "if_python_console_found": {
        "action": "attempt_code_execution",
        "methods": [
          "os_module",
          "subprocess",
          "reverse_shell"
        ],
        "next_phase": "privilege_escalation"
      }
    },
    "optimization_rules": [
      {
        "rule": "always_run_udp_scan_when_tcp_limited",
        "reasoning": "critical_services_often_run_on_udp_when_tcp_minimal",
        "applicability": "fewer_than_5_tcp_services_found"
      },
      {
        "rule": "target_service_configs_via_tftp",
        "reasoning": "tftp_lacks_directory_listing_requires_educated_guessing",
        "applicability": "tftp_service_discovered"
      },
      {
        "rule": "enumerate_localhost_through_authenticated_proxy",
        "reasoning": "proxies_often_provide_access_to_internal_services",
        "applicability": "authenticated_proxy_access_obtained"
      },
      {
        "rule": "prioritize_python_console_for_immediate_execution",
        "reasoning": "direct_code_execution_faster_than_exploit_development",
        "applicability": "web_based_interpreter_discovered"
      }
    ]
  },
  "applicability_rules": {
    "technique_rules": [
      {
        "technique": "TFTP_Config_Extraction",
        "mitre_id": "T1005",
        "required_services": [
          "tftp"
        ],
        "required_ports": [
          69
        ],
        "os_requirements": [
          "linux",
          "unix"
        ],
        "environmental_prerequisites": [
          "tftp_service_running",
          "config_files_accessible",
          "no_access_restrictions"
        ],
        "success_indicators": [
          "config_files_retrieved",
          "credentials_found_in_configs",
          "service_configs_accessible"
        ],
        "incompatible_with": [
          "tftp_disabled",
          "strict_file_permissions",
          "chroot_restrictions"
        ],
        "confidence_boosters": [
          "default_tftp_configuration",
          "common_config_paths_accessible",
          "service_integration_configs"
        ],
        "typical_success_rate": 0.75,
        "estimated_time": "10-30 minutes"
      },
      {
        "technique": "Proxy_Credential_Extraction",
        "mitre_id": "T1552.001",
        "required_services": [
          "squid",
          "http-proxy"
        ],
        "required_ports": [
          3128,
          8080
        ],
        "os_requirements": [
          "linux",
          "unix"
        ],
        "environmental_prerequisites": [
          "proxy_service_running",
          "config_files_accessible_via_tftp",
          "basic_auth_configured"
        ],
        "success_indicators": [
          "password_file_retrieved",
          "hash_crackable",
          "proxy_authentication_successful"
        ],
        "incompatible_with": [
          "config_files_protected",
          "strong_password_policy",
          "certificate_based_auth"
        ],
        "confidence_boosters": [
          "default_squid_paths",
          "weak_password_patterns",
          "basic_auth_realm_visible"
        ],
        "typical_success_rate": 0.82,
        "estimated_time": "15-45 minutes"
      },
      {
        "technique": "Hash_Cracking_Apache_MD5",
        "mitre_id": "T1110.002",
        "required_services": [],
        "required_ports": [],
        "os_requirements": [
          "any"
        ],
        "environmental_prerequisites": [
          "apache_md5_hash_obtained",
          "wordlist_available",
          "cracking_tools_available"
        ],
        "success_indicators": [
          "hash_format_apr1_identified",
          "password_cracked_successfully",
          "credentials_validated"
        ],
        "incompatible_with": [
          "strong_password_complexity",
          "custom_salt_implementation",
          "rate_limiting_protection"
        ],
        "confidence_boosters": [
          "common_password_patterns",
          "default_credentials_usage",
          "weak_password_policy"
        ],
        "typical_success_rate": 0.68,
        "estimated_time": "5-60 minutes"
      }
    ],
    "environmental_detectors": {
      "tftp_service": {
        "port_indicators": [
          69
        ],
        "service_indicators": [
          "tftp"
        ],
        "protocol_indicators": [
          "udp"
        ],
        "confidence_threshold": 0.9
      },
      "proxy_service": {
        "port_indicators": [
          3128,
          8080,
          8888
        ],
        "service_indicators": [
          "squid",
          "http-proxy"
        ],
        "banner_indicators": [
          "squid",
          "proxy"
        ],
        "confidence_threshold": 0.85
      },
      "linux_system": {
        "port_indicators": [
          22
        ],
        "service_indicators": [
          "ssh",
          "openssh"
        ],
        "banner_indicators": [
          "Ubuntu",
          "OpenSSH"
        ],
        "confidence_threshold": 0.95
      }
    },
    "attack_prioritization": {
      "high_priority": [
        {
          "attack": "tftp_config_extraction",
          "when": "tftp_service_detected",
          "reason": "often_contains_sensitive_configs_and_credentials"
        },
        {
          "attack": "proxy_credential_extraction",
          "when": "proxy_service_detected_with_auth",
          "reason": "enables_network_pivoting_and_internal_access"
        }
      ],
      "medium_priority": [
        {
          "attack": "hash_cracking",
          "when": "hashes_extracted_from_configs",
          "reason": "reliable_with_common_passwords"
        },
        {
          "attack": "udp_service_enumeration",
          "when": "limited_tcp_services_found",
          "reason": "often_overlooked_attack_surface"
        }
      ]
    }
  },
  "technique_intelligence": {
    "techniques": [
      {
        "name": "TFTP Configuration File Extraction",
        "mitre_id": "T1005",
        "category": "collection",
        "phase": "discovery",
        "tools_used": [
          {
            "name": "tftp",
            "command_template": "tftp {target_ip}; get {config_path}",
            "actual_command": "tftp 10.10.10.21; get /etc/squid/squid.conf",
            "output_pattern": "Received {bytes} bytes",
            "effectiveness_rating": 5,
            "reliability": 0.9
          }
        ],
        "prerequisites": [
          "tftp_service_accessible",
          "knowledge_of_config_paths",
          "no_access_restrictions"
        ],
        "success_indicators": [
          "config_file_downloaded",
          "credentials_found_in_config",
          "authentication_parameters_discovered"
        ],
        "common_failures": [
          "access_violation_errors",
          "unknown_file_paths",
          "service_not_running"
        ],
        "follow_up_techniques": [
          "credential_extraction",
          "hash_cracking",
          "proxy_authentication"
        ],
        "time_investment": "5-15 minutes",
        "skill_level": "beginner"
      },
      {
        "name": "Squid Proxy Authentication Bypass",
        "mitre_id": "T1078",
        "category": "initial_access",
        "phase": "initial_access",
        "tools_used": [
          {
            "name": "hashcat",
            "command_template": "hashcat -m 1600 {hash_file} {wordlist}",
            "actual_command": "hashcat -m 1600 hash.txt /usr/share/wordlists/rockyou.txt",
            "output_pattern": "$apr1$zyzBxQYW$pL360IoLQ5Yum5SLTph.l0:ihateseafood",
            "effectiveness_rating": 4,
            "reliability": 0.85
          }
        ],
        "prerequisites": [
          "apache_md5_hash_obtained",
          "wordlist_available",
          "weak_password_policy"
        ],
        "success_indicators": [
          "hash_cracked_successfully",
          "proxy_authentication_successful",
          "internal_network_access_gained"
        ],
        "common_failures": [
          "strong_password_resists_cracking",
          "hash_format_misidentification",
          "insufficient_wordlists"
        ],
        "follow_up_techniques": [
          "internal_network_enumeration",
          "localhost_service_discovery",
          "port_scanning_through_proxy"
        ],
        "time_investment": "10-60 minutes",
        "skill_level": "beginner"
      },
      {
        "name": "Internal Service Discovery via Proxy",
        "mitre_id": "T1046",
        "category": "discovery",
        "phase": "discovery",
        "tools_used": [
          {
            "name": "curl",
            "command_template": "curl -s -U {user}:{pass} -x {proxy_ip}:{proxy_port} {target_url}",
            "actual_command": "curl -s -U kalamari:ihateseafood -x 10.10.10.21:3128 127.0.0.1:80",
            "output_pattern": "HTTP response from internal service",
            "effectiveness_rating": 5,
            "reliability": 0.95
          },
          {
            "name": "gobuster",
            "command_template": "gobuster dir -u {target_url} -p http://{user}:{pass}@{proxy_ip}:{proxy_port} -w {wordlist}",
            "actual_command": "gobuster dir -u http://127.0.0.1 -p http://kalamari:ihateseafood@10.10.10.21:3128 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt",
            "success_factors": [
              "internal_web_services",
              "directory_enumeration"
            ],
            "effectiveness_rating": 4
          }
        ],
        "prerequisites": [
          "proxy_authentication_successful",
          "internal_services_running",
          "localhost_access_permitted"
        ],
        "success_indicators": [
          "internal_web_services_discovered",
          "administrative_interfaces_found",
          "code_execution_endpoints_identified"
        ],
        "common_failures": [
          "no_internal_services",
          "access_restrictions_in_place",
          "service_authentication_required"
        ],
        "follow_up_techniques": [
          "web_application_exploitation",
          "python_console_abuse",
          "command_injection"
        ],
        "time_investment": "15-45 minutes",
        "skill_level": "intermediate"
      },
      {
        "name": "Python Console Code Execution",
        "mitre_id": "T1059.006",
        "category": "execution",
        "phase": "execution",
        "tools_used": [
          {
            "name": "python_console",
            "command_template": "import os; os.system('{command}')",
            "actual_command": "import os; os.system('ping -c1 10.10.14.13')",
            "output_pattern": "Command execution result",
            "effectiveness_rating": 5,
            "reliability": 0.98
          }
        ],
        "prerequisites": [
          "python_console_access",
          "no_input_sanitization",
          "execution_privileges"
        ],
        "success_indicators": [
          "commands_execute_successfully",
          "file_system_access_confirmed",
          "network_connectivity_tested"
        ],
        "common_failures": [
          "input_filtering_active",
          "restricted_execution_environment",
          "network_egress_blocked"
        ],
        "follow_up_techniques": [
          "firewall_enumeration",
          "udp_reverse_shell",
          "file_system_enumeration"
        ],
        "time_investment": "5-20 minutes",
        "skill_level": "beginner"
      },
      {
        "name": "Firewall Rules Enumeration",
        "mitre_id": "T1082",
        "category": "discovery",
        "phase": "discovery",
        "tools_used": [
          {
            "name": "python_file_read",
            "command_template": "with open('{file_path}', 'r') as f: print(f.read())",
            "actual_command": "with open('/etc/iptables/rules.v4', 'r') as f: print(f.read())",
            "output_pattern": "iptables rules configuration",
            "effectiveness_rating": 5,
            "reliability": 0.9
          }
        ],
        "prerequisites": [
          "file_read_access",
          "iptables_configuration_accessible",
          "python_execution_available"
        ],
        "success_indicators": [
          "firewall_rules_extracted",
          "blocked_protocols_identified",
          "allowed_traffic_patterns_discovered"
        ],
        "common_failures": [
          "insufficient_file_permissions",
          "non_standard_firewall_location",
          "encrypted_configuration_files"
        ],
        "follow_up_techniques": [
          "udp_communication_exploitation",
          "icmp_tunneling",
          "allowed_protocol_abuse"
        ],
        "time_investment": "2-10 minutes",
        "skill_level": "beginner"
      }
    ],
    "tool_effectiveness": [
      {
        "tool": "TFTP",
        "use_case": "configuration_file_extraction",
        "effectiveness_rating": 5,
        "reliability": 0.9,
        "learning_curve": "low",
        "essential_for": [
          "legacy_system_enumeration"
        ],
        "alternatives": [
          "http_directory_traversal",
          "ftp_anonymous_access"
        ],
        "best_practices": [
          "target_known_configuration_paths",
          "try_common_service_config_locations",
          "enumerate_systematically_by_service"
        ]
      },
      {
        "tool": "Squid Proxy",
        "use_case": "internal_network_access",
        "effectiveness_rating": 5,
        "reliability": 0.95,
        "learning_curve": "medium",
        "essential_for": [
          "internal_network_pivoting"
        ],
        "alternatives": [
          "ssh_tunneling",
          "socks_proxy"
        ],
        "best_practices": [
          "always_test_localhost_access",
          "enumerate_internal_ip_ranges",
          "check_for_authentication_bypass"
        ]
      },
      {
        "tool": "Hashcat",
        "use_case": "apache_md5_cracking",
        "effectiveness_rating": 4,
        "reliability": 0.85,
        "learning_curve": "low",
        "essential_for": [
          "credential_recovery"
        ],
        "alternatives": [
          "john_the_ripper",
          "online_hash_crackers"
        ],
        "best_practices": [
          "identify_hash_format_correctly",
          "use_appropriate_wordlists",
          "consider_rule_based_attacks"
        ]
      }
    ],
    "command_sequences": [
      {
        "sequence_name": "tftp_to_proxy_access",
        "steps": [
          {
            "step": 1,
            "command": "tftp 10.10.10.21; get /etc/squid/squid.conf",
            "purpose": "Extract Squid configuration",
            "expected_output": "Configuration file with auth parameters"
          },
          {
            "step": 2,
            "command": "tftp 10.10.10.21; get /etc/squid/passwords",
            "purpose": "Extract password hashes",
            "expected_output": "kalamari:$apr1$zyzBxQYW$pL360IoLQ5Yum5SLTph.l0"
          },
          {
            "step": 3,
            "command": "hashcat -m 1600 hash.txt /usr/share/wordlists/rockyou.txt",
            "purpose": "Crack Apache MD5 hash",
            "expected_output": "Password: ihateseafood"
          },
          {
            "step": 4,
            "command": "curl -s -U kalamari:ihateseafood -x 10.10.10.21:3128 127.0.0.1",
            "purpose": "Access internal services via proxy",
            "expected_output": "Internal web application response"
          }
        ],
        "success_rate": 0.85,
        "typical_duration": "20-40 minutes"
      },
      {
        "sequence_name": "internal_enumeration_to_code_execution",
        "steps": [
          {
            "step": 1,
            "command": "gobuster dir -u http://127.0.0.1 -p http://kalamari:ihateseafood@10.10.10.21:3128 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt",
            "purpose": "Enumerate internal web directories",
            "expected_output": "/console endpoint discovered"
          },
          {
            "step": 2,
            "command": "import os; os.getcwd()",
            "purpose": "Test Python console functionality",
            "expected_output": "Current working directory"
          },
          {
            "step": 3,
            "command": "with open('/etc/iptables/rules.v4', 'r') as f: print(f.read())",
            "purpose": "Enumerate firewall rules",
            "expected_output": "iptables configuration showing UDP allowed"
          }
        ],
        "success_rate": 0.9,
        "typical_duration": "15-30 minutes"
      }
    ]
  },
  "metadata": {
    "basic_metadata": {
      "name": "Joker",
      "difficulty": "Hard",
      "os": "Linux Ubuntu",
      "platform": "HackTheBox",
      "release_date": "2017-05-19",
      "author": "eks",
      "estimated_time": "4-6 hours"
    },
    "intelligence_metadata": {
      "attack_complexity": "high",
      "skill_level_required": "advanced",
      "primary_attack_vectors": [
        "tftp",
        "proxy_abuse",
        "firewall_evasion"
      ],
      "key_vulnerabilities": [
        "squid_proxy_misconfiguration",
        "sudo_wildcards",
        "cron_tar_abuse"
      ],
      "environment_type": "hardened_linux_server",
      "real_world_relevance": "high",
      "learning_value": [
        "proxy_pivoting",
        "firewall_enumeration",
        "sudo_abuse",
        "cron_exploitation"
      ],
      "prerequisite_knowledge": [
        "proxy_concepts",
        "linux_privilege_escalation",
        "network_pivoting",
        "tar_command_injection"
      ]
    },
    "categorization": {
      "primary_category": "network_pivoting",
      "subcategories": [
        "proxy_abuse",
        "firewall_evasion",
        "privilege_escalation"
      ],
      "attack_types": [
        "initial_access",
        "privilege_escalation",
        "persistence"
      ],
      "defensive_lessons": [
        "secure_proxy_configuration",
        "sudo_rule_hardening",
        "cron_security",
        "firewall_egress_filtering"
      ]
    },
    "similarity_markers": {
      "similar_boxes": [
        "Sneaky",
        "Nineveh",
        "Poison"
      ],
      "similarity_reasons": [
        "network_pivoting",
        "proxy_abuse",
        "multi_stage_exploitation"
      ],
      "unique_aspects": [
        "tftp_config_exposure",
        "python_console_access",
        "multiple_tar_exploitation_methods"
      ],
      "difficulty_factors": [
        "complex_attack_chain",
        "firewall_enumeration",
        "multiple_privilege_escalation_paths"
      ]
    }
  },
  "extraction_metadata": {
    "parse_date": "2025-07-04T15:40:10.010394",
    "original_file": "0xdf_writeups/Htb Joker.md",
    "content_length": 30322,
    "extraction_version": "2.0-claude",
    "model_used": "claude-sonnet-4-20250514"
  },
  "intelligence_confidence": 1.0,
  "quality_breakdown": {
    "scenario_uniqueness": 1.0,
    "success_logic_clarity": 1.0,
    "applicability_completeness": 1.0,
    "decision_tree_depth": 1.0,
    "technique_actionability": 1.0
  }
}